11:32:40-->CDpCmd::CDpCmd()
11:32:40-->CDpCmd::CheckLicense()
11:32:40-->CDpCmd::Handler( )
11:32:40-->CDpCmd::ScanProgrammerOrder()
11:32:40-->		device index is follow USB index
11:32:40-->		m_proj=new CProject....
11:32:40-->CProject::CProject(USER_GROUP user_group, Context::STARTUP_MODE 0x0, SingleOrAll=false)
11:32:40-->		enter 2CUSB_InitialUSBForProduction(get_context(), Dediprogrammer_GUID[SF100_200],SingleOrAll,Index)
11:32:40-->		2_c=5
11:32:40-->CUSB_InitialUSBForProduction Index=0
11:32:40-->		new CUSBCom Index=0
11:32:40-->		CUSBCom::CUSBCom(USBIndex=0)
11:32:40-->		do Open	(USBIndex=0)
11:32:40-->		end CUSB_InitialUSBForProduction Index=0
11:32:40-->		2_get_context().usb.m_nbDeviceDetected=1
11:32:40-->		2_CUSB_IsOpen(false)==true
11:32:41-->		2_bProjectInit=true
11:32:41-->		final bProjectInit= true
11:32:41-->CProject::is_usbWorking(bReDetectUSB=false)
11:32:41-->		m_proj->is_usbWorking(true)=true
11:32:41-->CDpCmd::ScanFixedDeviceID()
11:32:41-->		dwCount==NULL
11:32:41-->		bFixedDeviceID[1]=618394
11:32:41-->		SingleOrAll=false
11:32:41-->		end ScanFixedDeviceID() return true;
11:32:41-->CDpCmd::AssignedDeviceNew()
11:32:41-->CDpCmd::RescanProgrammer()
11:32:41-->		SingleOrAll==false
11:32:41-->		m_DetectedDeviceNum!=m_FiexedDevNum, return false
11:32:41-->		return false
11:32:41-->		result=RescanProgrammer()=false;
11:32:41-->		SingleOrAll==false //not single
11:32:41-->		bDeviceArray[1] = 0
11:32:41-->		SiteFilter[0]=0
11:32:41-->		bReDeviceArray[1]=1
11:32:41-->		bFixedDeviceID[1]=0x96f9a
11:32:41-->CDpCmd::CheckIniFileIsSameID()
11:32:41-->		SingleOrAll==false
11:32:41-->		4_m_DetectedDeviceNum=1)
11:32:41-->CProject::CheckFWVersionSuitable(USBIndex=0)
11:32:41-->CProject::IsWindows8Point1OrGreater()
11:32:41-->		return fasle
11:32:41-->		get_context().board[0].Is_SF600
11:32:41-->		CProject::CheckFWVersionSuitable return true
11:32:41-->CProject::SetProductionMode(bUse=true)
11:32:41-->CProject::SetDevSingle(Single=false)
11:32:41-->CProject::SetProductionMode(bUse=true)
11:32:41-->CProject::is_usbWorking(bReDetectUSB=true)
11:32:41-->CDpCmd::DeviceInit(USBIndex=0)
11:32:41-->CProject::SetDevIdx(Idx=0)
11:32:41-->CDpCmd::SetTargetFlash(USBIndex=0)
11:32:41-->		m_vm["target"].as<size_t>()=1
11:32:41-->CProject::setTargetFlash(mode,Index=0)
11:32:41-->CDpCmd::SetSPIClock()
11:32:41-->		m_vm["spi-clk"].as<size_t>()=2
11:32:41-->CDpCmd::SetVcc()
11:32:41-->		m_proj->get_context().power.Misc_ApplyManualSelectVcc=false
11:32:41-->CDpCmd::SetIO1()
11:32:41-->CDpCmd::SetIO4()
11:32:41-->CDpCmd::SetIOMode()
11:32:41-->		m_vm["set-IOMode"].as<size_t>()=0
11:32:41-->		enter 2_m_proj->Init
11:32:41-->CProject::Init(cmd=true,USBIndex=0,first)
11:32:41-->CProject::ResetChipId(Index=0,first=first)
11:32:41-->CProject::is_SF700(Index=0)
11:32:41-->		return false
11:32:41-->CProject::is_SF600Plus_G2(Index=0)
11:32:41-->		return false
11:32:41-->bool CProject::GetFirstDetectionMatch--->j=0
11:32:41-->bool CProject::GetFirstDetectionMatch--->i=0
11:32:41-->CProject::is_SF700(Index=0)
11:32:41-->		return false
11:32:41-->CProject::is_SF600Plus_G2(Index=0)
11:32:41-->		return false
11:32:41-->CProject::is_SF600(Index=0)
11:32:41-->CProject::setTargetFlash(mode,Index=0)
11:32:43-->CProject::Init(cmd=true,customId,Index=0)
11:32:43-->CProject::Init(cmd=true,customId,Index=0,first)
11:32:43-->SFPROGBOARDDLL_API bool Dev_SetLEDOnOff(size_t Color=0,size_t IO1Level=0, size_t IO4Level=1, int USBIndex=0)
11:32:43-->CProject::CreateChipInstance(Index=0)
11:32:43-->		DllPath=Chip_UniversalSPINor_Large_Dll.dll
11:32:43-->Enter CUniversalSPINor_Large::CUniversalSPINor_Large
11:32:43-->SFCHIPCOMMUNICATIONDLL_API void SF_InitSFCommunicationDll(Context::CDediContext *m_c,memory::memory_id *m_id,Log callLog)
11:32:43-->SFCHIPCOMMUNICATIONDLL_API void SF_ExitSFCommunication()
11:32:43-->CProject::is_ChipReady()
11:32:43-->CProject::is_functions_locked()
11:32:43-->		InitProject return m_status_result=true
11:32:43-->CDpCmd::ListTypes()
11:32:43-->CDpCmd::DetectChip()
11:32:43-->		all device
11:32:43-->CProject::SetDevIdx(Idx=0)
11:32:43-->CProject::is_usbWorking(bReDetectUSB=true)
11:32:43-->CProject::is_SF700(Index=0)
11:32:43-->		return false
11:32:43-->CProject::getTypeDisplayName()
11:32:43-->		CONSOLE_USERS == m_user_group
11:32:43-->CProject::is_SF700(Index=0)
11:32:43-->		return false
11:32:43-->		Site # 1 (SF618394): W25Q256FV chip size is 0x02000000 bytes.

11:32:43-->CDpCmd::checkVCC()
11:32:43-->		end checkVCC()
11:32:43-->CDpCmd::Sequence()
11:32:43-->CDpCmd::SyncWithDedipro()
11:32:43-->CDpCmd::SaveMiscOption_Nand()
11:32:43-->		!m_proj->get_context().is_NandChip
11:32:43-->CDpCmd::Auto(()
11:32:43-->CDpCmd::do_Auto()
11:32:43-->CDpCmd::do_loadFile()
11:32:43-->		m_vm["auto"].as<string>().c_str()
11:32:43-->		
Loading file (Build\7583001S000X004.bin), please wait ...

11:32:43-->CProject::LoadFile(path=Build\7583001S000X004.bin,SiteIndex=0)
11:32:43-->CProject::threadLoadFile(path=Build\7583001S000X004.bin,SiteIndex=0)
11:32:43-->CProject::ReadFileContents(path=Build\7583001S000X004.bin,SiteIndex=0)
11:32:43-->		Loading Build\7583001S000X004.bin ...
11:32:43-->CFileIO::ReadToVMptr
11:32:43-->		m_context.file.LastLoadedFileFormat(Build\7583001S000X004.bin) is BIN(bin)
11:32:43-->CFileIO::ReadBINFile_ptr(...)
11:32:43-->		csPath=Build\7583001S000X004.bin
11:32:43-->		FileSize=0x2000000
11:32:43-->		get_context().file.size=0x2000000
11:32:44-->		Build\7583001S000X004.bin Loaded.
11:32:44-->		Operation completed. 
11:32:44-->		0.782 seconds elapsed.
11:32:44-->CDpCmd::prepareLoadFileparameter(path=B, USBIndex=0)
11:32:44-->		USBIndex=0
11:32:44-->CProject::getStatusString()
11:32:44-->CDpCmd::do_loadFile() end
11:32:44-->CDpCmd::SaveProgContextChanges()
11:32:44-->		
Auto Sequences, please wait ...

11:32:44-->CProject::RunMulti(type)
11:32:44-->CProject::threadRunMulti(opType)
11:32:44-->CProject::SetDevIdx(Idx=0)
11:32:44-->CProject::is_good(bReDetectUSB=false)
11:32:44-->CProject::is_memoryChipChangedAfterLastDetection(Index=0)
11:32:44-->CProject::IdentifyChipBeforeOperation(Index=0)
11:32:44-->		opType==AUTO
11:32:44-->C
11:32:44-->console CProject::threadPredefinedBatchSequences(SiteIndex=0)
11:32:44-->SFPROGBOARDDLL_API bool Dev_SetLEDOnOff(size_t Color=1,size_t IO1Level=0, size_t IO4Level=1, int USBIndex=0)
11:32:44-->CProject::is_FileBufferEmpty()
11:32:44-->		get_context().file.size=0x2000000
11:32:44-->		File is not Empty
11:32:44-->CProject::ValidateProgramParameters(Index=0)
11:32:44-->CProject::PrepareProgramParameters(Index=0)
11:32:44-->CProject::PrintProgramParameters()
11:32:44-->		Programming parameters:
11:32:44-->CProject::getImageFileInfo(...)
11:32:44-->		Source File: 7583001S000X004.bin(0x2000000 bytes)
11:32:44-->		ATE Region: [0, 0x2000000)
11:32:44-->		Spare Memory Region: leave as being erased.
11:32:44-->		Truncate-File-To-Fit-Memory Disabled.
11:32:44-->CProject::RangeUpdate(Index=0)
11:32:44-->CProject::RangeUpdateThruSectorErase(Index=0)
11:32:44-->CProject::BlazeUpdate(Index=0)
11:32:45-->CProject::BlazeUpdate--->VCC ON Index=0
11:32:45-->CProject::SupportedVpp()
11:32:45-->CProject::threadReadChip(range.start=0x0,range.end=0x2000000,USBIndex=0)
11:32:45-->CProject::SetIOMode(isProg=false,USBIndex=0)
11:32:45-->CProject::SetIOMode--->set io mode to default value
11:32:45-->CProject::is_SF600(Index=0)
11:32:45-->		Single IO is set.
11:32:45-->CProject::SetProgramReadCom(uiNowIOVlue=0,Index=0)
11:32:45-->		P1- Reading From Address [0, 0x2000000) ...
11:32:45-->CProject::RangeRead(AddrRange.start=0x0,AddrRange.end=0x2000000,vData,USBIndex=0)
11:32:45-->CProject::threadStartOfOperation(SiteIndex=0)
11:32:45-->CProject::ChipStartofOperation(USBIndex=0)
11:32:45-->		m_hLibrary[USBIndex=0] is true
11:32:45-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:32:45-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:32:45-->boStartofOperation=true
11:32:45-->		!ChipStartofOperation((USBIndex=0)  return true
11:32:45-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:32:45-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:32:45-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:32:45-->boStartofOperation=true
11:32:45-->		!threadEnable4ByteAddrMode  return true
11:32:45-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:32:45-->CProject::ChipEnableQuadIO(Index=0)
11:32:45-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:32:45-->boEnableQuadIO=true
11:32:45-->		!threadEnableQuadIO  return true
11:32:45-->CProject::BeforeRangeRead(USBIndex=0)
11:32:45-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeRead(m_c,AddrRange.start=0x0,AddrRange.end=0x2000000, modeRead=0x4,ReadCom=0xc,AddrLen=4,ReadDummyLen=4,USBIndex=0x0)
11:32:45-->		m_context->is_EditSaveChipMem=false
11:33:10-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:10-->CProject::ChipEnableQuadIO(Index=0)
11:33:10-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:10-->boEnableQuadIO=true
11:33:10-->		!threadEnableQuadIO  return true
11:33:10-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:10-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:10-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:10-->boStartofOperation=true
11:33:10-->		!threadEnable4ByteAddrMode  return true
11:33:10-->CProject::threadEndOfOperation(Index=0)
11:33:10-->CProject::ChipEndofOperation(USBIndex=0)
11:33:10-->		m_hLibrary[USBIndex=0] is true
11:33:10-->boEndofOperation=true
11:33:10-->		!threadEndOfOperation  return true
11:33:10-->CProject::AfterRangeRead(USBIndex=0)
11:33:10-->		P1- Finished reading from memory.
11:33:10-->		91 segments(64KB each) in total need to be updated.

11:33:10-->		Erase 36 non-blank segments by 64KB ...

11:33:10-->CProject::BatchErase(vAddrs,USBIndex=0)
11:33:10-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:10-->CProject::ChipStartofOperation(USBIndex=0)
11:33:10-->		m_hLibrary[USBIndex=0] is true
11:33:10-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:10-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:10-->boStartofOperation=true
11:33:10-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:10-->CProject::threadUnlock(USBIndex=0)
11:33:10-->CProject::ChipUnLock(USBIndex=0)
11:33:10-->CProject::threadUnlock return true
11:33:10-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:10-->CProject::ChipProtectBlock(Index=0)
11:33:10-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:10-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:10-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:10-->				cSR=0x2
11:33:10-->boProtectBlock=true
11:33:10-->		!threadProtectBlock  return true
11:33:10-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:10-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:10-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:10-->boStartofOperation=true
11:33:10-->		!threadEnable4ByteAddrMode  return true
11:33:10-->CProject::SetProgramReadCom(uiNowIOVlue=0,Index=0)
11:33:10-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:10-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:10-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:10-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:10-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:10-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:10-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:11-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:11-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:11-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:11-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:11-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:11-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:11-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:11-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:12-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:12-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:12-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:12-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:12-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:12-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:12-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:12-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:13-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:13-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:13-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:13-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:13-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:13-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:13-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:13-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:13-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:13-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:14-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:14-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:14-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:14-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:14-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:14-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:14-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:14-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:14-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:14-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:15-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:15-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:15-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:15-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:15-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:15-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:15-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:15-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:16-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:16-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:16-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:16-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:16-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:16-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:16-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:16-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:17-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:17-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:17-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:17-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:17-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:17-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:17-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:17-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:17-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:17-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:18-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:18-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:18-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:18-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:18-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:18-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:18-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:18-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:18-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:18-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:19-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:19-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:19-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:19-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:19-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:19-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:19-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:19-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:20-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:20-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:20-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:20-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:20-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:20-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:20-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:20-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:21-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:21-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:21-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:21-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:21-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:21-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:21-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:21-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:21-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:21-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:22-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:22-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:22-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:22-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:22-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:22-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:22-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:22-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:22-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:22-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:23-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:23-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:23-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:23-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:23-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:23-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:23-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:23-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:24-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:24-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:24-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:24-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:24-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:24-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:24-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:24-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:25-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:25-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:25-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:25-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:25-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:25-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:25-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:25-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:25-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:25-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:26-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:26-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:26-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:26-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:26-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:26-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:26-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:26-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:26-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:26-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:27-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:27-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:27-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:27-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:27-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:27-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:27-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:27-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:28-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:28-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:28-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:28-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:28-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:28-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:28-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:28-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:29-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:29-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:29-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:29-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:29-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:29-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:29-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:29-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:29-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:29-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:29-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:29-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:30-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:30-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:30-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:30-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:30-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:30-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:30-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:30-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:31-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:31-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:31-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:31-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:31-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:31-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:31-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:31-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:32-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:32-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:32-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:32-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:32-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:32-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:32-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:32-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:32-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:32-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:33-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:33-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:33-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:33-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:33-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:33-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:33-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:33-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0)
11:33:33-->		bool CUniversalSPINor_Large::waitForWEL(USBIndex=0) return true;
11:33:33-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0)
11:33:34-->		bool CUniversalSPINor_Large::waitForWIP(USBIndex=0) return true;
11:33:34-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:34-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:34-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:34-->boStartofOperation=true
11:33:34-->		!threadEnable4ByteAddrMode  return true
11:33:34-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:34-->CProject::ChipProtectBlock(Index=0)
11:33:34-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:34-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:34-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:34-->				cSR=0x0
11:33:34-->boProtectBlock=true
11:33:34-->		!threadProtectBlock  return true
11:33:34-->CProject::threadEndOfOperation(Index=0)
11:33:34-->CProject::ChipEndofOperation(USBIndex=0)
11:33:34-->		m_hLibrary[USBIndex=0] is true
11:33:34-->boEndofOperation=true
11:33:34-->		!threadEndOfOperation  return true
11:33:34-->		Preparing for programming ...
11:33:34-->		Update memory only on sector locations(91 in total) with content difference.
11:33:34-->		Starting from Address 0x210000 ....

11:33:34-->CProject::RangeProgram(AddrRange.start=0x210000,AddrRange.end=0x220000,USBIndex=0)
11:33:34-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:34-->CProject::ChipStartofOperation(USBIndex=0)
11:33:34-->		m_hLibrary[USBIndex=0] is true
11:33:34-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:34-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:34-->boStartofOperation=true
11:33:34-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:34-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:34-->CProject::ChipProtectBlock(Index=0)
11:33:34-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:34-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:34-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:34-->				cSR=0x0
11:33:34-->boProtectBlock=true
11:33:34-->		!threadProtectBlock  return true
11:33:34-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:34-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:34-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:34-->boStartofOperation=true
11:33:34-->		!threadEnable4ByteAddrMode  return true
11:33:34-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:34-->CProject::ChipEnableQuadIO(Index=0)
11:33:34-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:34-->boEnableQuadIO=true
11:33:34-->		!threadEnableQuadIO  return true
11:33:34-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x210000,AddrRange.end=0x220000,USBIndex=0)
11:33:34-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x210000,AddrRange.end=0x220000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:34-->		bool waitForWEL(USBIndex=0)
11:33:34-->		bool waitForWEL(USBIndex=0) return true;
11:33:34-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:34-->CProject::ChipEnableQuadIO(Index=0)
11:33:34-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:34-->boEnableQuadIO=true
11:33:34-->		!threadEnableQuadIO  return true
11:33:34-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:34-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:34-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:34-->boStartofOperation=true
11:33:34-->		!threadEnable4ByteAddrMode  return true
11:33:34-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:34-->CProject::ChipProtectBlock(Index=0)
11:33:34-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:34-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:34-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:34-->				cSR=0x2
11:33:34-->boProtectBlock=true
11:33:34-->		!threadProtectBlock  return true
11:33:34-->CProject::threadEndOfOperation(Index=0)
11:33:34-->CProject::ChipEndofOperation(USBIndex=0)
11:33:34-->		m_hLibrary[USBIndex=0] is true
11:33:34-->boEndofOperation=true
11:33:34-->		!threadEndOfOperation  return true
11:33:34-->CProject::RangeProgram(AddrRange.start=0x220000,AddrRange.end=0x230000,USBIndex=0)
11:33:34-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:34-->CProject::ChipStartofOperation(USBIndex=0)
11:33:34-->		m_hLibrary[USBIndex=0] is true
11:33:34-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:34-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:34-->boStartofOperation=true
11:33:34-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:34-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:34-->CProject::ChipProtectBlock(Index=0)
11:33:34-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:34-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:34-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:34-->				cSR=0x2
11:33:34-->boProtectBlock=true
11:33:34-->		!threadProtectBlock  return true
11:33:34-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:34-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:34-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:34-->boStartofOperation=true
11:33:34-->		!threadEnable4ByteAddrMode  return true
11:33:34-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:34-->CProject::ChipEnableQuadIO(Index=0)
11:33:34-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:34-->boEnableQuadIO=true
11:33:34-->		!threadEnableQuadIO  return true
11:33:34-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x220000,AddrRange.end=0x230000,USBIndex=0)
11:33:34-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x220000,AddrRange.end=0x230000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:34-->		bool waitForWEL(USBIndex=0)
11:33:34-->		bool waitForWEL(USBIndex=0) return true;
11:33:34-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:34-->CProject::ChipEnableQuadIO(Index=0)
11:33:34-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:34-->boEnableQuadIO=true
11:33:34-->		!threadEnableQuadIO  return true
11:33:34-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:34-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:34-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:34-->boStartofOperation=true
11:33:34-->		!threadEnable4ByteAddrMode  return true
11:33:34-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:34-->CProject::ChipProtectBlock(Index=0)
11:33:34-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:34-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:34-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:35-->				cSR=0x2
11:33:35-->boProtectBlock=true
11:33:35-->		!threadProtectBlock  return true
11:33:35-->CProject::threadEndOfOperation(Index=0)
11:33:35-->CProject::ChipEndofOperation(USBIndex=0)
11:33:35-->		m_hLibrary[USBIndex=0] is true
11:33:35-->boEndofOperation=true
11:33:35-->		!threadEndOfOperation  return true
11:33:35-->CProject::RangeProgram(AddrRange.start=0x230000,AddrRange.end=0x240000,USBIndex=0)
11:33:35-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:35-->CProject::ChipStartofOperation(USBIndex=0)
11:33:35-->		m_hLibrary[USBIndex=0] is true
11:33:35-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:35-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:35-->boStartofOperation=true
11:33:35-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:35-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:35-->CProject::ChipProtectBlock(Index=0)
11:33:35-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:35-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:35-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:35-->				cSR=0x2
11:33:35-->boProtectBlock=true
11:33:35-->		!threadProtectBlock  return true
11:33:35-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:35-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:35-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:35-->boStartofOperation=true
11:33:35-->		!threadEnable4ByteAddrMode  return true
11:33:35-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:35-->CProject::ChipEnableQuadIO(Index=0)
11:33:35-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:35-->boEnableQuadIO=true
11:33:35-->		!threadEnableQuadIO  return true
11:33:35-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x230000,AddrRange.end=0x240000,USBIndex=0)
11:33:35-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x230000,AddrRange.end=0x240000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:35-->		bool waitForWEL(USBIndex=0)
11:33:35-->		bool waitForWEL(USBIndex=0) return true;
11:33:35-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:35-->CProject::ChipEnableQuadIO(Index=0)
11:33:35-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:35-->boEnableQuadIO=true
11:33:35-->		!threadEnableQuadIO  return true
11:33:35-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:35-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:35-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:35-->boStartofOperation=true
11:33:35-->		!threadEnable4ByteAddrMode  return true
11:33:35-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:35-->CProject::ChipProtectBlock(Index=0)
11:33:35-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:35-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:35-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:35-->				cSR=0x2
11:33:35-->boProtectBlock=true
11:33:35-->		!threadProtectBlock  return true
11:33:35-->CProject::threadEndOfOperation(Index=0)
11:33:35-->CProject::ChipEndofOperation(USBIndex=0)
11:33:35-->		m_hLibrary[USBIndex=0] is true
11:33:35-->boEndofOperation=true
11:33:35-->		!threadEndOfOperation  return true
11:33:35-->CProject::RangeProgram(AddrRange.start=0x240000,AddrRange.end=0x250000,USBIndex=0)
11:33:35-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:35-->CProject::ChipStartofOperation(USBIndex=0)
11:33:35-->		m_hLibrary[USBIndex=0] is true
11:33:35-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:35-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:35-->boStartofOperation=true
11:33:35-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:35-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:35-->CProject::ChipProtectBlock(Index=0)
11:33:35-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:35-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:35-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:35-->				cSR=0x2
11:33:35-->boProtectBlock=true
11:33:35-->		!threadProtectBlock  return true
11:33:35-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:35-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:35-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:35-->boStartofOperation=true
11:33:35-->		!threadEnable4ByteAddrMode  return true
11:33:35-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:35-->CProject::ChipEnableQuadIO(Index=0)
11:33:35-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:35-->boEnableQuadIO=true
11:33:35-->		!threadEnableQuadIO  return true
11:33:35-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x240000,AddrRange.end=0x250000,USBIndex=0)
11:33:35-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x240000,AddrRange.end=0x250000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:35-->		bool waitForWEL(USBIndex=0)
11:33:35-->		bool waitForWEL(USBIndex=0) return true;
11:33:35-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:35-->CProject::ChipEnableQuadIO(Index=0)
11:33:35-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:35-->boEnableQuadIO=true
11:33:35-->		!threadEnableQuadIO  return true
11:33:35-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:35-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:35-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:35-->boStartofOperation=true
11:33:35-->		!threadEnable4ByteAddrMode  return true
11:33:35-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:35-->CProject::ChipProtectBlock(Index=0)
11:33:35-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:35-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:35-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:35-->				cSR=0x2
11:33:35-->boProtectBlock=true
11:33:35-->		!threadProtectBlock  return true
11:33:35-->CProject::threadEndOfOperation(Index=0)
11:33:35-->CProject::ChipEndofOperation(USBIndex=0)
11:33:35-->		m_hLibrary[USBIndex=0] is true
11:33:35-->boEndofOperation=true
11:33:35-->		!threadEndOfOperation  return true
11:33:35-->CProject::RangeProgram(AddrRange.start=0x350000,AddrRange.end=0x360000,USBIndex=0)
11:33:35-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:35-->CProject::ChipStartofOperation(USBIndex=0)
11:33:35-->		m_hLibrary[USBIndex=0] is true
11:33:35-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:35-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:35-->boStartofOperation=true
11:33:35-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:35-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:35-->CProject::ChipProtectBlock(Index=0)
11:33:35-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:35-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:35-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:35-->				cSR=0x2
11:33:35-->boProtectBlock=true
11:33:35-->		!threadProtectBlock  return true
11:33:35-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:35-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:35-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:35-->boStartofOperation=true
11:33:35-->		!threadEnable4ByteAddrMode  return true
11:33:35-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:35-->CProject::ChipEnableQuadIO(Index=0)
11:33:35-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:35-->boEnableQuadIO=true
11:33:35-->		!threadEnableQuadIO  return true
11:33:35-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x350000,AddrRange.end=0x360000,USBIndex=0)
11:33:35-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x350000,AddrRange.end=0x360000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:35-->		bool waitForWEL(USBIndex=0)
11:33:35-->		bool waitForWEL(USBIndex=0) return true;
11:33:35-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:35-->CProject::ChipEnableQuadIO(Index=0)
11:33:35-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:35-->boEnableQuadIO=true
11:33:35-->		!threadEnableQuadIO  return true
11:33:35-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:35-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:35-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:35-->boStartofOperation=true
11:33:35-->		!threadEnable4ByteAddrMode  return true
11:33:35-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:35-->CProject::ChipProtectBlock(Index=0)
11:33:35-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:35-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:35-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:36-->				cSR=0x2
11:33:36-->boProtectBlock=true
11:33:36-->		!threadProtectBlock  return true
11:33:36-->CProject::threadEndOfOperation(Index=0)
11:33:36-->CProject::ChipEndofOperation(USBIndex=0)
11:33:36-->		m_hLibrary[USBIndex=0] is true
11:33:36-->boEndofOperation=true
11:33:36-->		!threadEndOfOperation  return true
11:33:36-->CProject::RangeProgram(AddrRange.start=0x360000,AddrRange.end=0x370000,USBIndex=0)
11:33:36-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:36-->CProject::ChipStartofOperation(USBIndex=0)
11:33:36-->		m_hLibrary[USBIndex=0] is true
11:33:36-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:36-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:36-->boStartofOperation=true
11:33:36-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:36-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:36-->CProject::ChipProtectBlock(Index=0)
11:33:36-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:36-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:36-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:36-->				cSR=0x2
11:33:36-->boProtectBlock=true
11:33:36-->		!threadProtectBlock  return true
11:33:36-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:36-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:36-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:36-->boStartofOperation=true
11:33:36-->		!threadEnable4ByteAddrMode  return true
11:33:36-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:36-->CProject::ChipEnableQuadIO(Index=0)
11:33:36-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:36-->boEnableQuadIO=true
11:33:36-->		!threadEnableQuadIO  return true
11:33:36-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x360000,AddrRange.end=0x370000,USBIndex=0)
11:33:36-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x360000,AddrRange.end=0x370000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:36-->		bool waitForWEL(USBIndex=0)
11:33:36-->		bool waitForWEL(USBIndex=0) return true;
11:33:36-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:36-->CProject::ChipEnableQuadIO(Index=0)
11:33:36-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:36-->boEnableQuadIO=true
11:33:36-->		!threadEnableQuadIO  return true
11:33:36-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:36-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:36-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:36-->boStartofOperation=true
11:33:36-->		!threadEnable4ByteAddrMode  return true
11:33:36-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:36-->CProject::ChipProtectBlock(Index=0)
11:33:36-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:36-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:36-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:36-->				cSR=0x2
11:33:36-->boProtectBlock=true
11:33:36-->		!threadProtectBlock  return true
11:33:36-->CProject::threadEndOfOperation(Index=0)
11:33:36-->CProject::ChipEndofOperation(USBIndex=0)
11:33:36-->		m_hLibrary[USBIndex=0] is true
11:33:36-->boEndofOperation=true
11:33:36-->		!threadEndOfOperation  return true
11:33:36-->CProject::RangeProgram(AddrRange.start=0x370000,AddrRange.end=0x380000,USBIndex=0)
11:33:36-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:36-->CProject::ChipStartofOperation(USBIndex=0)
11:33:36-->		m_hLibrary[USBIndex=0] is true
11:33:36-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:36-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:36-->boStartofOperation=true
11:33:36-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:36-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:36-->CProject::ChipProtectBlock(Index=0)
11:33:36-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:36-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:36-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:36-->				cSR=0x2
11:33:36-->boProtectBlock=true
11:33:36-->		!threadProtectBlock  return true
11:33:36-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:36-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:36-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:36-->boStartofOperation=true
11:33:36-->		!threadEnable4ByteAddrMode  return true
11:33:36-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:36-->CProject::ChipEnableQuadIO(Index=0)
11:33:36-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:36-->boEnableQuadIO=true
11:33:36-->		!threadEnableQuadIO  return true
11:33:36-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x370000,AddrRange.end=0x380000,USBIndex=0)
11:33:36-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x370000,AddrRange.end=0x380000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:36-->		bool waitForWEL(USBIndex=0)
11:33:36-->		bool waitForWEL(USBIndex=0) return true;
11:33:36-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:36-->CProject::ChipEnableQuadIO(Index=0)
11:33:36-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:36-->boEnableQuadIO=true
11:33:36-->		!threadEnableQuadIO  return true
11:33:36-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:36-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:36-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:36-->boStartofOperation=true
11:33:36-->		!threadEnable4ByteAddrMode  return true
11:33:36-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:36-->CProject::ChipProtectBlock(Index=0)
11:33:36-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:36-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:36-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:36-->				cSR=0x2
11:33:36-->boProtectBlock=true
11:33:36-->		!threadProtectBlock  return true
11:33:36-->CProject::threadEndOfOperation(Index=0)
11:33:36-->CProject::ChipEndofOperation(USBIndex=0)
11:33:36-->		m_hLibrary[USBIndex=0] is true
11:33:36-->boEndofOperation=true
11:33:36-->		!threadEndOfOperation  return true
11:33:36-->CProject::RangeProgram(AddrRange.start=0x1600000,AddrRange.end=0x1610000,USBIndex=0)
11:33:36-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:36-->CProject::ChipStartofOperation(USBIndex=0)
11:33:36-->		m_hLibrary[USBIndex=0] is true
11:33:36-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:36-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:36-->boStartofOperation=true
11:33:36-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:36-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:36-->CProject::ChipProtectBlock(Index=0)
11:33:36-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:36-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:36-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:36-->				cSR=0x2
11:33:36-->boProtectBlock=true
11:33:36-->		!threadProtectBlock  return true
11:33:36-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:36-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:36-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:36-->boStartofOperation=true
11:33:36-->		!threadEnable4ByteAddrMode  return true
11:33:36-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:36-->CProject::ChipEnableQuadIO(Index=0)
11:33:36-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:36-->boEnableQuadIO=true
11:33:36-->		!threadEnableQuadIO  return true
11:33:36-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1600000,AddrRange.end=0x1610000,USBIndex=0)
11:33:36-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1600000,AddrRange.end=0x1610000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:36-->		bool waitForWEL(USBIndex=0)
11:33:36-->		bool waitForWEL(USBIndex=0) return true;
11:33:37-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:37-->CProject::ChipEnableQuadIO(Index=0)
11:33:37-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:37-->boEnableQuadIO=true
11:33:37-->		!threadEnableQuadIO  return true
11:33:37-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:37-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:37-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:37-->boStartofOperation=true
11:33:37-->		!threadEnable4ByteAddrMode  return true
11:33:37-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:37-->CProject::ChipProtectBlock(Index=0)
11:33:37-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:37-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:37-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:37-->				cSR=0x2
11:33:37-->boProtectBlock=true
11:33:37-->		!threadProtectBlock  return true
11:33:37-->CProject::threadEndOfOperation(Index=0)
11:33:37-->CProject::ChipEndofOperation(USBIndex=0)
11:33:37-->		m_hLibrary[USBIndex=0] is true
11:33:37-->boEndofOperation=true
11:33:37-->		!threadEndOfOperation  return true
11:33:37-->CProject::RangeProgram(AddrRange.start=0x1660000,AddrRange.end=0x1670000,USBIndex=0)
11:33:37-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:37-->CProject::ChipStartofOperation(USBIndex=0)
11:33:37-->		m_hLibrary[USBIndex=0] is true
11:33:37-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:37-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:37-->boStartofOperation=true
11:33:37-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:37-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:37-->CProject::ChipProtectBlock(Index=0)
11:33:37-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:37-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:37-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:37-->				cSR=0x2
11:33:37-->boProtectBlock=true
11:33:37-->		!threadProtectBlock  return true
11:33:37-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:37-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:37-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:37-->boStartofOperation=true
11:33:37-->		!threadEnable4ByteAddrMode  return true
11:33:37-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:37-->CProject::ChipEnableQuadIO(Index=0)
11:33:37-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:37-->boEnableQuadIO=true
11:33:37-->		!threadEnableQuadIO  return true
11:33:37-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1660000,AddrRange.end=0x1670000,USBIndex=0)
11:33:37-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1660000,AddrRange.end=0x1670000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:37-->		bool waitForWEL(USBIndex=0)
11:33:37-->		bool waitForWEL(USBIndex=0) return true;
11:33:37-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:37-->CProject::ChipEnableQuadIO(Index=0)
11:33:37-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:37-->boEnableQuadIO=true
11:33:37-->		!threadEnableQuadIO  return true
11:33:37-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:37-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:37-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:37-->boStartofOperation=true
11:33:37-->		!threadEnable4ByteAddrMode  return true
11:33:37-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:37-->CProject::ChipProtectBlock(Index=0)
11:33:37-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:37-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:37-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:37-->				cSR=0x2
11:33:37-->boProtectBlock=true
11:33:37-->		!threadProtectBlock  return true
11:33:37-->CProject::threadEndOfOperation(Index=0)
11:33:37-->CProject::ChipEndofOperation(USBIndex=0)
11:33:37-->		m_hLibrary[USBIndex=0] is true
11:33:37-->boEndofOperation=true
11:33:37-->		!threadEndOfOperation  return true
11:33:37-->CProject::RangeProgram(AddrRange.start=0x1670000,AddrRange.end=0x1680000,USBIndex=0)
11:33:37-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:37-->CProject::ChipStartofOperation(USBIndex=0)
11:33:37-->		m_hLibrary[USBIndex=0] is true
11:33:37-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:37-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:37-->boStartofOperation=true
11:33:37-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:37-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:37-->CProject::ChipProtectBlock(Index=0)
11:33:37-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:37-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:37-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:37-->				cSR=0x2
11:33:37-->boProtectBlock=true
11:33:37-->		!threadProtectBlock  return true
11:33:37-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:37-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:37-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:37-->boStartofOperation=true
11:33:37-->		!threadEnable4ByteAddrMode  return true
11:33:37-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:37-->CProject::ChipEnableQuadIO(Index=0)
11:33:37-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:37-->boEnableQuadIO=true
11:33:37-->		!threadEnableQuadIO  return true
11:33:37-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1670000,AddrRange.end=0x1680000,USBIndex=0)
11:33:37-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1670000,AddrRange.end=0x1680000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:37-->		bool waitForWEL(USBIndex=0)
11:33:37-->		bool waitForWEL(USBIndex=0) return true;
11:33:37-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:37-->CProject::ChipEnableQuadIO(Index=0)
11:33:37-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:37-->boEnableQuadIO=true
11:33:37-->		!threadEnableQuadIO  return true
11:33:37-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:37-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:37-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:37-->boStartofOperation=true
11:33:37-->		!threadEnable4ByteAddrMode  return true
11:33:37-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:37-->CProject::ChipProtectBlock(Index=0)
11:33:37-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:37-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:37-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:37-->				cSR=0x2
11:33:37-->boProtectBlock=true
11:33:37-->		!threadProtectBlock  return true
11:33:37-->CProject::threadEndOfOperation(Index=0)
11:33:37-->CProject::ChipEndofOperation(USBIndex=0)
11:33:37-->		m_hLibrary[USBIndex=0] is true
11:33:37-->boEndofOperation=true
11:33:37-->		!threadEndOfOperation  return true
11:33:37-->CProject::RangeProgram(AddrRange.start=0x1680000,AddrRange.end=0x1690000,USBIndex=0)
11:33:37-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:37-->CProject::ChipStartofOperation(USBIndex=0)
11:33:37-->		m_hLibrary[USBIndex=0] is true
11:33:37-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:37-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:37-->boStartofOperation=true
11:33:37-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:37-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:37-->CProject::ChipProtectBlock(Index=0)
11:33:37-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:37-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:37-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:37-->				cSR=0x2
11:33:37-->boProtectBlock=true
11:33:37-->		!threadProtectBlock  return true
11:33:37-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:37-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:37-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:37-->boStartofOperation=true
11:33:37-->		!threadEnable4ByteAddrMode  return true
11:33:37-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:37-->CProject::ChipEnableQuadIO(Index=0)
11:33:37-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:37-->boEnableQuadIO=true
11:33:37-->		!threadEnableQuadIO  return true
11:33:37-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1680000,AddrRange.end=0x1690000,USBIndex=0)
11:33:37-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1680000,AddrRange.end=0x1690000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:37-->		bool waitForWEL(USBIndex=0)
11:33:38-->		bool waitForWEL(USBIndex=0) return true;
11:33:38-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:38-->CProject::ChipEnableQuadIO(Index=0)
11:33:38-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:38-->boEnableQuadIO=true
11:33:38-->		!threadEnableQuadIO  return true
11:33:38-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:38-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:38-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:38-->boStartofOperation=true
11:33:38-->		!threadEnable4ByteAddrMode  return true
11:33:38-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:38-->CProject::ChipProtectBlock(Index=0)
11:33:38-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:38-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:38-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:38-->				cSR=0x2
11:33:38-->boProtectBlock=true
11:33:38-->		!threadProtectBlock  return true
11:33:38-->CProject::threadEndOfOperation(Index=0)
11:33:38-->CProject::ChipEndofOperation(USBIndex=0)
11:33:38-->		m_hLibrary[USBIndex=0] is true
11:33:38-->boEndofOperation=true
11:33:38-->		!threadEndOfOperation  return true
11:33:38-->CProject::RangeProgram(AddrRange.start=0x1690000,AddrRange.end=0x16a0000,USBIndex=0)
11:33:38-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:38-->CProject::ChipStartofOperation(USBIndex=0)
11:33:38-->		m_hLibrary[USBIndex=0] is true
11:33:38-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:38-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:38-->boStartofOperation=true
11:33:38-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:38-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:38-->CProject::ChipProtectBlock(Index=0)
11:33:38-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:38-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:38-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:38-->				cSR=0x2
11:33:38-->boProtectBlock=true
11:33:38-->		!threadProtectBlock  return true
11:33:38-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:38-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:38-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:38-->boStartofOperation=true
11:33:38-->		!threadEnable4ByteAddrMode  return true
11:33:38-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:38-->CProject::ChipEnableQuadIO(Index=0)
11:33:38-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:38-->boEnableQuadIO=true
11:33:38-->		!threadEnableQuadIO  return true
11:33:38-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1690000,AddrRange.end=0x16a0000,USBIndex=0)
11:33:38-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1690000,AddrRange.end=0x16a0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:38-->		bool waitForWEL(USBIndex=0)
11:33:38-->		bool waitForWEL(USBIndex=0) return true;
11:33:38-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:38-->CProject::ChipEnableQuadIO(Index=0)
11:33:38-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:38-->boEnableQuadIO=true
11:33:38-->		!threadEnableQuadIO  return true
11:33:38-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:38-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:38-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:38-->boStartofOperation=true
11:33:38-->		!threadEnable4ByteAddrMode  return true
11:33:38-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:38-->CProject::ChipProtectBlock(Index=0)
11:33:38-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:38-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:38-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:38-->				cSR=0x2
11:33:38-->boProtectBlock=true
11:33:38-->		!threadProtectBlock  return true
11:33:38-->CProject::threadEndOfOperation(Index=0)
11:33:38-->CProject::ChipEndofOperation(USBIndex=0)
11:33:38-->		m_hLibrary[USBIndex=0] is true
11:33:38-->boEndofOperation=true
11:33:38-->		!threadEndOfOperation  return true
11:33:38-->CProject::RangeProgram(AddrRange.start=0x16a0000,AddrRange.end=0x16b0000,USBIndex=0)
11:33:38-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:38-->CProject::ChipStartofOperation(USBIndex=0)
11:33:38-->		m_hLibrary[USBIndex=0] is true
11:33:38-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:38-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:38-->boStartofOperation=true
11:33:38-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:38-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:38-->CProject::ChipProtectBlock(Index=0)
11:33:38-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:38-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:38-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:38-->				cSR=0x2
11:33:38-->boProtectBlock=true
11:33:38-->		!threadProtectBlock  return true
11:33:38-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:38-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:38-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:38-->boStartofOperation=true
11:33:38-->		!threadEnable4ByteAddrMode  return true
11:33:38-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:38-->CProject::ChipEnableQuadIO(Index=0)
11:33:38-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:38-->boEnableQuadIO=true
11:33:38-->		!threadEnableQuadIO  return true
11:33:38-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x16a0000,AddrRange.end=0x16b0000,USBIndex=0)
11:33:38-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x16a0000,AddrRange.end=0x16b0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:38-->		bool waitForWEL(USBIndex=0)
11:33:38-->		bool waitForWEL(USBIndex=0) return true;
11:33:39-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:39-->CProject::ChipEnableQuadIO(Index=0)
11:33:39-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:39-->boEnableQuadIO=true
11:33:39-->		!threadEnableQuadIO  return true
11:33:39-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:39-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:39-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:39-->boStartofOperation=true
11:33:39-->		!threadEnable4ByteAddrMode  return true
11:33:39-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:39-->CProject::ChipProtectBlock(Index=0)
11:33:39-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:39-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:39-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:39-->				cSR=0x2
11:33:39-->boProtectBlock=true
11:33:39-->		!threadProtectBlock  return true
11:33:39-->CProject::threadEndOfOperation(Index=0)
11:33:39-->CProject::ChipEndofOperation(USBIndex=0)
11:33:39-->		m_hLibrary[USBIndex=0] is true
11:33:39-->boEndofOperation=true
11:33:39-->		!threadEndOfOperation  return true
11:33:39-->CProject::RangeProgram(AddrRange.start=0x16b0000,AddrRange.end=0x16c0000,USBIndex=0)
11:33:39-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:39-->CProject::ChipStartofOperation(USBIndex=0)
11:33:39-->		m_hLibrary[USBIndex=0] is true
11:33:39-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:39-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:39-->boStartofOperation=true
11:33:39-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:39-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:39-->CProject::ChipProtectBlock(Index=0)
11:33:39-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:39-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:39-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:39-->				cSR=0x2
11:33:39-->boProtectBlock=true
11:33:39-->		!threadProtectBlock  return true
11:33:39-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:39-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:39-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:39-->boStartofOperation=true
11:33:39-->		!threadEnable4ByteAddrMode  return true
11:33:39-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:39-->CProject::ChipEnableQuadIO(Index=0)
11:33:39-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:39-->boEnableQuadIO=true
11:33:39-->		!threadEnableQuadIO  return true
11:33:39-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x16b0000,AddrRange.end=0x16c0000,USBIndex=0)
11:33:39-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x16b0000,AddrRange.end=0x16c0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:39-->		bool waitForWEL(USBIndex=0)
11:33:39-->		bool waitForWEL(USBIndex=0) return true;
11:33:39-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:39-->CProject::ChipEnableQuadIO(Index=0)
11:33:39-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:39-->boEnableQuadIO=true
11:33:39-->		!threadEnableQuadIO  return true
11:33:39-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:39-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:39-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:39-->boStartofOperation=true
11:33:39-->		!threadEnable4ByteAddrMode  return true
11:33:39-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:39-->CProject::ChipProtectBlock(Index=0)
11:33:39-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:39-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:39-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:39-->				cSR=0x2
11:33:39-->boProtectBlock=true
11:33:39-->		!threadProtectBlock  return true
11:33:39-->CProject::threadEndOfOperation(Index=0)
11:33:39-->CProject::ChipEndofOperation(USBIndex=0)
11:33:39-->		m_hLibrary[USBIndex=0] is true
11:33:39-->boEndofOperation=true
11:33:39-->		!threadEndOfOperation  return true
11:33:39-->CProject::RangeProgram(AddrRange.start=0x16c0000,AddrRange.end=0x16d0000,USBIndex=0)
11:33:39-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:39-->CProject::ChipStartofOperation(USBIndex=0)
11:33:39-->		m_hLibrary[USBIndex=0] is true
11:33:39-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:39-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:39-->boStartofOperation=true
11:33:39-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:39-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:39-->CProject::ChipProtectBlock(Index=0)
11:33:39-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:39-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:39-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:39-->				cSR=0x2
11:33:39-->boProtectBlock=true
11:33:39-->		!threadProtectBlock  return true
11:33:39-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:39-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:39-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:39-->boStartofOperation=true
11:33:39-->		!threadEnable4ByteAddrMode  return true
11:33:39-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:39-->CProject::ChipEnableQuadIO(Index=0)
11:33:39-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:39-->boEnableQuadIO=true
11:33:39-->		!threadEnableQuadIO  return true
11:33:39-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x16c0000,AddrRange.end=0x16d0000,USBIndex=0)
11:33:39-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x16c0000,AddrRange.end=0x16d0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:39-->		bool waitForWEL(USBIndex=0)
11:33:39-->		bool waitForWEL(USBIndex=0) return true;
11:33:39-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:39-->CProject::ChipEnableQuadIO(Index=0)
11:33:39-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:39-->boEnableQuadIO=true
11:33:39-->		!threadEnableQuadIO  return true
11:33:39-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:39-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:39-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:39-->boStartofOperation=true
11:33:39-->		!threadEnable4ByteAddrMode  return true
11:33:39-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:39-->CProject::ChipProtectBlock(Index=0)
11:33:39-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:39-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:39-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:39-->				cSR=0x2
11:33:39-->boProtectBlock=true
11:33:39-->		!threadProtectBlock  return true
11:33:39-->CProject::threadEndOfOperation(Index=0)
11:33:39-->CProject::ChipEndofOperation(USBIndex=0)
11:33:39-->		m_hLibrary[USBIndex=0] is true
11:33:39-->boEndofOperation=true
11:33:39-->		!threadEndOfOperation  return true
11:33:39-->CProject::RangeProgram(AddrRange.start=0x16d0000,AddrRange.end=0x16e0000,USBIndex=0)
11:33:39-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:39-->CProject::ChipStartofOperation(USBIndex=0)
11:33:39-->		m_hLibrary[USBIndex=0] is true
11:33:39-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:39-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:39-->boStartofOperation=true
11:33:39-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:39-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:39-->CProject::ChipProtectBlock(Index=0)
11:33:39-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:39-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:39-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:39-->				cSR=0x2
11:33:39-->boProtectBlock=true
11:33:39-->		!threadProtectBlock  return true
11:33:39-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:39-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:39-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:40-->boStartofOperation=true
11:33:40-->		!threadEnable4ByteAddrMode  return true
11:33:40-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:40-->CProject::ChipEnableQuadIO(Index=0)
11:33:40-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:40-->boEnableQuadIO=true
11:33:40-->		!threadEnableQuadIO  return true
11:33:40-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x16d0000,AddrRange.end=0x16e0000,USBIndex=0)
11:33:40-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x16d0000,AddrRange.end=0x16e0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:40-->		bool waitForWEL(USBIndex=0)
11:33:40-->		bool waitForWEL(USBIndex=0) return true;
11:33:40-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:40-->CProject::ChipEnableQuadIO(Index=0)
11:33:40-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:40-->boEnableQuadIO=true
11:33:40-->		!threadEnableQuadIO  return true
11:33:40-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:40-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:40-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:40-->boStartofOperation=true
11:33:40-->		!threadEnable4ByteAddrMode  return true
11:33:40-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:40-->CProject::ChipProtectBlock(Index=0)
11:33:40-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:40-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:40-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:40-->				cSR=0x2
11:33:40-->boProtectBlock=true
11:33:40-->		!threadProtectBlock  return true
11:33:40-->CProject::threadEndOfOperation(Index=0)
11:33:40-->CProject::ChipEndofOperation(USBIndex=0)
11:33:40-->		m_hLibrary[USBIndex=0] is true
11:33:40-->boEndofOperation=true
11:33:40-->		!threadEndOfOperation  return true
11:33:40-->CProject::RangeProgram(AddrRange.start=0x16e0000,AddrRange.end=0x16f0000,USBIndex=0)
11:33:40-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:40-->CProject::ChipStartofOperation(USBIndex=0)
11:33:40-->		m_hLibrary[USBIndex=0] is true
11:33:40-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:40-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:40-->boStartofOperation=true
11:33:40-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:40-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:40-->CProject::ChipProtectBlock(Index=0)
11:33:40-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:40-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:40-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:40-->				cSR=0x2
11:33:40-->boProtectBlock=true
11:33:40-->		!threadProtectBlock  return true
11:33:40-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:40-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:40-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:40-->boStartofOperation=true
11:33:40-->		!threadEnable4ByteAddrMode  return true
11:33:40-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:40-->CProject::ChipEnableQuadIO(Index=0)
11:33:40-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:40-->boEnableQuadIO=true
11:33:40-->		!threadEnableQuadIO  return true
11:33:40-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x16e0000,AddrRange.end=0x16f0000,USBIndex=0)
11:33:40-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x16e0000,AddrRange.end=0x16f0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:40-->		bool waitForWEL(USBIndex=0)
11:33:40-->		bool waitForWEL(USBIndex=0) return true;
11:33:40-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:40-->CProject::ChipEnableQuadIO(Index=0)
11:33:40-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:40-->boEnableQuadIO=true
11:33:40-->		!threadEnableQuadIO  return true
11:33:40-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:40-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:40-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:40-->boStartofOperation=true
11:33:40-->		!threadEnable4ByteAddrMode  return true
11:33:40-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:40-->CProject::ChipProtectBlock(Index=0)
11:33:40-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:40-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:40-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:40-->				cSR=0x2
11:33:40-->boProtectBlock=true
11:33:40-->		!threadProtectBlock  return true
11:33:40-->CProject::threadEndOfOperation(Index=0)
11:33:40-->CProject::ChipEndofOperation(USBIndex=0)
11:33:40-->		m_hLibrary[USBIndex=0] is true
11:33:40-->boEndofOperation=true
11:33:40-->		!threadEndOfOperation  return true
11:33:40-->CProject::RangeProgram(AddrRange.start=0x16f0000,AddrRange.end=0x1700000,USBIndex=0)
11:33:40-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:40-->CProject::ChipStartofOperation(USBIndex=0)
11:33:40-->		m_hLibrary[USBIndex=0] is true
11:33:40-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:40-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:40-->boStartofOperation=true
11:33:40-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:40-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:40-->CProject::ChipProtectBlock(Index=0)
11:33:40-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:40-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:40-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:40-->				cSR=0x2
11:33:40-->boProtectBlock=true
11:33:40-->		!threadProtectBlock  return true
11:33:40-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:40-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:40-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:40-->boStartofOperation=true
11:33:40-->		!threadEnable4ByteAddrMode  return true
11:33:40-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:40-->CProject::ChipEnableQuadIO(Index=0)
11:33:40-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:40-->boEnableQuadIO=true
11:33:40-->		!threadEnableQuadIO  return true
11:33:40-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x16f0000,AddrRange.end=0x1700000,USBIndex=0)
11:33:40-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x16f0000,AddrRange.end=0x1700000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:40-->		bool waitForWEL(USBIndex=0)
11:33:40-->		bool waitForWEL(USBIndex=0) return true;
11:33:41-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:41-->CProject::ChipEnableQuadIO(Index=0)
11:33:41-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:41-->boEnableQuadIO=true
11:33:41-->		!threadEnableQuadIO  return true
11:33:41-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:41-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:41-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:41-->boStartofOperation=true
11:33:41-->		!threadEnable4ByteAddrMode  return true
11:33:41-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:41-->CProject::ChipProtectBlock(Index=0)
11:33:41-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:41-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:41-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:41-->				cSR=0x2
11:33:41-->boProtectBlock=true
11:33:41-->		!threadProtectBlock  return true
11:33:41-->CProject::threadEndOfOperation(Index=0)
11:33:41-->CProject::ChipEndofOperation(USBIndex=0)
11:33:41-->		m_hLibrary[USBIndex=0] is true
11:33:41-->boEndofOperation=true
11:33:41-->		!threadEndOfOperation  return true
11:33:41-->CProject::RangeProgram(AddrRange.start=0x1700000,AddrRange.end=0x1710000,USBIndex=0)
11:33:41-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:41-->CProject::ChipStartofOperation(USBIndex=0)
11:33:41-->		m_hLibrary[USBIndex=0] is true
11:33:41-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:41-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:41-->boStartofOperation=true
11:33:41-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:41-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:41-->CProject::ChipProtectBlock(Index=0)
11:33:41-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:41-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:41-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:41-->				cSR=0x2
11:33:41-->boProtectBlock=true
11:33:41-->		!threadProtectBlock  return true
11:33:41-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:41-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:41-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:41-->boStartofOperation=true
11:33:41-->		!threadEnable4ByteAddrMode  return true
11:33:41-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:41-->CProject::ChipEnableQuadIO(Index=0)
11:33:41-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:41-->boEnableQuadIO=true
11:33:41-->		!threadEnableQuadIO  return true
11:33:41-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1700000,AddrRange.end=0x1710000,USBIndex=0)
11:33:41-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1700000,AddrRange.end=0x1710000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:41-->		bool waitForWEL(USBIndex=0)
11:33:41-->		bool waitForWEL(USBIndex=0) return true;
11:33:41-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:41-->CProject::ChipEnableQuadIO(Index=0)
11:33:41-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:41-->boEnableQuadIO=true
11:33:41-->		!threadEnableQuadIO  return true
11:33:41-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:41-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:41-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:41-->boStartofOperation=true
11:33:41-->		!threadEnable4ByteAddrMode  return true
11:33:41-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:41-->CProject::ChipProtectBlock(Index=0)
11:33:41-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:41-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:41-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:41-->				cSR=0x2
11:33:41-->boProtectBlock=true
11:33:41-->		!threadProtectBlock  return true
11:33:41-->CProject::threadEndOfOperation(Index=0)
11:33:41-->CProject::ChipEndofOperation(USBIndex=0)
11:33:41-->		m_hLibrary[USBIndex=0] is true
11:33:41-->boEndofOperation=true
11:33:41-->		!threadEndOfOperation  return true
11:33:41-->CProject::RangeProgram(AddrRange.start=0x1710000,AddrRange.end=0x1720000,USBIndex=0)
11:33:41-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:41-->CProject::ChipStartofOperation(USBIndex=0)
11:33:41-->		m_hLibrary[USBIndex=0] is true
11:33:41-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:41-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:41-->boStartofOperation=true
11:33:41-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:41-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:41-->CProject::ChipProtectBlock(Index=0)
11:33:41-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:41-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:41-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:41-->				cSR=0x2
11:33:41-->boProtectBlock=true
11:33:41-->		!threadProtectBlock  return true
11:33:41-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:41-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:41-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:41-->boStartofOperation=true
11:33:41-->		!threadEnable4ByteAddrMode  return true
11:33:41-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:41-->CProject::ChipEnableQuadIO(Index=0)
11:33:41-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:41-->boEnableQuadIO=true
11:33:41-->		!threadEnableQuadIO  return true
11:33:41-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1710000,AddrRange.end=0x1720000,USBIndex=0)
11:33:41-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1710000,AddrRange.end=0x1720000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:41-->		bool waitForWEL(USBIndex=0)
11:33:41-->		bool waitForWEL(USBIndex=0) return true;
11:33:41-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:41-->CProject::ChipEnableQuadIO(Index=0)
11:33:41-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:41-->boEnableQuadIO=true
11:33:41-->		!threadEnableQuadIO  return true
11:33:41-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:41-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:41-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:41-->boStartofOperation=true
11:33:41-->		!threadEnable4ByteAddrMode  return true
11:33:41-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:41-->CProject::ChipProtectBlock(Index=0)
11:33:41-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:41-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:41-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:41-->				cSR=0x2
11:33:41-->boProtectBlock=true
11:33:41-->		!threadProtectBlock  return true
11:33:41-->CProject::threadEndOfOperation(Index=0)
11:33:41-->CProject::ChipEndofOperation(USBIndex=0)
11:33:41-->		m_hLibrary[USBIndex=0] is true
11:33:41-->boEndofOperation=true
11:33:41-->		!threadEndOfOperation  return true
11:33:41-->CProject::RangeProgram(AddrRange.start=0x1720000,AddrRange.end=0x1730000,USBIndex=0)
11:33:41-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:41-->CProject::ChipStartofOperation(USBIndex=0)
11:33:41-->		m_hLibrary[USBIndex=0] is true
11:33:41-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:41-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:41-->boStartofOperation=true
11:33:41-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:41-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:41-->CProject::ChipProtectBlock(Index=0)
11:33:41-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:41-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:41-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:42-->				cSR=0x2
11:33:42-->boProtectBlock=true
11:33:42-->		!threadProtectBlock  return true
11:33:42-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:42-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:42-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:42-->boStartofOperation=true
11:33:42-->		!threadEnable4ByteAddrMode  return true
11:33:42-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:42-->CProject::ChipEnableQuadIO(Index=0)
11:33:42-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:42-->boEnableQuadIO=true
11:33:42-->		!threadEnableQuadIO  return true
11:33:42-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1720000,AddrRange.end=0x1730000,USBIndex=0)
11:33:42-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1720000,AddrRange.end=0x1730000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:42-->		bool waitForWEL(USBIndex=0)
11:33:42-->		bool waitForWEL(USBIndex=0) return true;
11:33:42-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:42-->CProject::ChipEnableQuadIO(Index=0)
11:33:42-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:42-->boEnableQuadIO=true
11:33:42-->		!threadEnableQuadIO  return true
11:33:42-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:42-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:42-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:42-->boStartofOperation=true
11:33:42-->		!threadEnable4ByteAddrMode  return true
11:33:42-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:42-->CProject::ChipProtectBlock(Index=0)
11:33:42-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:42-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:42-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:42-->				cSR=0x2
11:33:42-->boProtectBlock=true
11:33:42-->		!threadProtectBlock  return true
11:33:42-->CProject::threadEndOfOperation(Index=0)
11:33:42-->CProject::ChipEndofOperation(USBIndex=0)
11:33:42-->		m_hLibrary[USBIndex=0] is true
11:33:42-->boEndofOperation=true
11:33:42-->		!threadEndOfOperation  return true
11:33:42-->CProject::RangeProgram(AddrRange.start=0x1730000,AddrRange.end=0x1740000,USBIndex=0)
11:33:42-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:42-->CProject::ChipStartofOperation(USBIndex=0)
11:33:42-->		m_hLibrary[USBIndex=0] is true
11:33:42-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:42-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:42-->boStartofOperation=true
11:33:42-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:42-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:42-->CProject::ChipProtectBlock(Index=0)
11:33:42-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:42-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:42-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:42-->				cSR=0x2
11:33:42-->boProtectBlock=true
11:33:42-->		!threadProtectBlock  return true
11:33:42-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:42-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:42-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:42-->boStartofOperation=true
11:33:42-->		!threadEnable4ByteAddrMode  return true
11:33:42-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:42-->CProject::ChipEnableQuadIO(Index=0)
11:33:42-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:42-->boEnableQuadIO=true
11:33:42-->		!threadEnableQuadIO  return true
11:33:42-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1730000,AddrRange.end=0x1740000,USBIndex=0)
11:33:42-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1730000,AddrRange.end=0x1740000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:42-->		bool waitForWEL(USBIndex=0)
11:33:42-->		bool waitForWEL(USBIndex=0) return true;
11:33:42-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:42-->CProject::ChipEnableQuadIO(Index=0)
11:33:42-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:42-->boEnableQuadIO=true
11:33:42-->		!threadEnableQuadIO  return true
11:33:42-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:42-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:42-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:42-->boStartofOperation=true
11:33:42-->		!threadEnable4ByteAddrMode  return true
11:33:42-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:42-->CProject::ChipProtectBlock(Index=0)
11:33:42-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:42-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:42-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:42-->				cSR=0x2
11:33:42-->boProtectBlock=true
11:33:42-->		!threadProtectBlock  return true
11:33:42-->CProject::threadEndOfOperation(Index=0)
11:33:42-->CProject::ChipEndofOperation(USBIndex=0)
11:33:42-->		m_hLibrary[USBIndex=0] is true
11:33:42-->boEndofOperation=true
11:33:42-->		!threadEndOfOperation  return true
11:33:42-->CProject::RangeProgram(AddrRange.start=0x1740000,AddrRange.end=0x1750000,USBIndex=0)
11:33:42-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:42-->CProject::ChipStartofOperation(USBIndex=0)
11:33:42-->		m_hLibrary[USBIndex=0] is true
11:33:42-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:42-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:42-->boStartofOperation=true
11:33:42-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:42-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:42-->CProject::ChipProtectBlock(Index=0)
11:33:42-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:42-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:42-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:42-->				cSR=0x2
11:33:42-->boProtectBlock=true
11:33:42-->		!threadProtectBlock  return true
11:33:42-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:42-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:42-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:42-->boStartofOperation=true
11:33:42-->		!threadEnable4ByteAddrMode  return true
11:33:42-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:42-->CProject::ChipEnableQuadIO(Index=0)
11:33:42-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:42-->boEnableQuadIO=true
11:33:42-->		!threadEnableQuadIO  return true
11:33:42-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1740000,AddrRange.end=0x1750000,USBIndex=0)
11:33:42-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1740000,AddrRange.end=0x1750000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:42-->		bool waitForWEL(USBIndex=0)
11:33:42-->		bool waitForWEL(USBIndex=0) return true;
11:33:43-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:43-->CProject::ChipEnableQuadIO(Index=0)
11:33:43-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:43-->boEnableQuadIO=true
11:33:43-->		!threadEnableQuadIO  return true
11:33:43-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:43-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:43-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:43-->boStartofOperation=true
11:33:43-->		!threadEnable4ByteAddrMode  return true
11:33:43-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:43-->CProject::ChipProtectBlock(Index=0)
11:33:43-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:43-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:43-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:43-->				cSR=0x2
11:33:43-->boProtectBlock=true
11:33:43-->		!threadProtectBlock  return true
11:33:43-->CProject::threadEndOfOperation(Index=0)
11:33:43-->CProject::ChipEndofOperation(USBIndex=0)
11:33:43-->		m_hLibrary[USBIndex=0] is true
11:33:43-->boEndofOperation=true
11:33:43-->		!threadEndOfOperation  return true
11:33:43-->CProject::RangeProgram(AddrRange.start=0x1750000,AddrRange.end=0x1760000,USBIndex=0)
11:33:43-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:43-->CProject::ChipStartofOperation(USBIndex=0)
11:33:43-->		m_hLibrary[USBIndex=0] is true
11:33:43-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:43-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:43-->boStartofOperation=true
11:33:43-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:43-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:43-->CProject::ChipProtectBlock(Index=0)
11:33:43-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:43-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:43-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:43-->				cSR=0x2
11:33:43-->boProtectBlock=true
11:33:43-->		!threadProtectBlock  return true
11:33:43-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:43-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:43-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:43-->boStartofOperation=true
11:33:43-->		!threadEnable4ByteAddrMode  return true
11:33:43-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:43-->CProject::ChipEnableQuadIO(Index=0)
11:33:43-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:43-->boEnableQuadIO=true
11:33:43-->		!threadEnableQuadIO  return true
11:33:43-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1750000,AddrRange.end=0x1760000,USBIndex=0)
11:33:43-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1750000,AddrRange.end=0x1760000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:43-->		bool waitForWEL(USBIndex=0)
11:33:43-->		bool waitForWEL(USBIndex=0) return true;
11:33:43-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:43-->CProject::ChipEnableQuadIO(Index=0)
11:33:43-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:43-->boEnableQuadIO=true
11:33:43-->		!threadEnableQuadIO  return true
11:33:43-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:43-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:43-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:43-->boStartofOperation=true
11:33:43-->		!threadEnable4ByteAddrMode  return true
11:33:43-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:43-->CProject::ChipProtectBlock(Index=0)
11:33:43-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:43-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:43-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:43-->				cSR=0x2
11:33:43-->boProtectBlock=true
11:33:43-->		!threadProtectBlock  return true
11:33:43-->CProject::threadEndOfOperation(Index=0)
11:33:43-->CProject::ChipEndofOperation(USBIndex=0)
11:33:43-->		m_hLibrary[USBIndex=0] is true
11:33:43-->boEndofOperation=true
11:33:43-->		!threadEndOfOperation  return true
11:33:43-->CProject::RangeProgram(AddrRange.start=0x1760000,AddrRange.end=0x1770000,USBIndex=0)
11:33:43-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:43-->CProject::ChipStartofOperation(USBIndex=0)
11:33:43-->		m_hLibrary[USBIndex=0] is true
11:33:43-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:43-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:43-->boStartofOperation=true
11:33:43-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:43-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:43-->CProject::ChipProtectBlock(Index=0)
11:33:43-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:43-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:43-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:43-->				cSR=0x2
11:33:43-->boProtectBlock=true
11:33:43-->		!threadProtectBlock  return true
11:33:43-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:43-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:43-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:43-->boStartofOperation=true
11:33:43-->		!threadEnable4ByteAddrMode  return true
11:33:43-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:43-->CProject::ChipEnableQuadIO(Index=0)
11:33:43-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:43-->boEnableQuadIO=true
11:33:43-->		!threadEnableQuadIO  return true
11:33:43-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1760000,AddrRange.end=0x1770000,USBIndex=0)
11:33:43-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1760000,AddrRange.end=0x1770000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:43-->		bool waitForWEL(USBIndex=0)
11:33:43-->		bool waitForWEL(USBIndex=0) return true;
11:33:43-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:43-->CProject::ChipEnableQuadIO(Index=0)
11:33:43-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:43-->boEnableQuadIO=true
11:33:43-->		!threadEnableQuadIO  return true
11:33:43-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:43-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:43-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:43-->boStartofOperation=true
11:33:43-->		!threadEnable4ByteAddrMode  return true
11:33:43-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:43-->CProject::ChipProtectBlock(Index=0)
11:33:43-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:43-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:43-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:43-->				cSR=0x2
11:33:43-->boProtectBlock=true
11:33:43-->		!threadProtectBlock  return true
11:33:43-->CProject::threadEndOfOperation(Index=0)
11:33:43-->CProject::ChipEndofOperation(USBIndex=0)
11:33:43-->		m_hLibrary[USBIndex=0] is true
11:33:43-->boEndofOperation=true
11:33:43-->		!threadEndOfOperation  return true
11:33:43-->CProject::RangeProgram(AddrRange.start=0x17c0000,AddrRange.end=0x17d0000,USBIndex=0)
11:33:43-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:43-->CProject::ChipStartofOperation(USBIndex=0)
11:33:43-->		m_hLibrary[USBIndex=0] is true
11:33:43-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:43-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:43-->boStartofOperation=true
11:33:43-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:43-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:43-->CProject::ChipProtectBlock(Index=0)
11:33:43-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:43-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:43-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:43-->				cSR=0x2
11:33:43-->boProtectBlock=true
11:33:43-->		!threadProtectBlock  return true
11:33:43-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:43-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:43-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:43-->boStartofOperation=true
11:33:43-->		!threadEnable4ByteAddrMode  return true
11:33:43-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:43-->CProject::ChipEnableQuadIO(Index=0)
11:33:43-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:43-->boEnableQuadIO=true
11:33:43-->		!threadEnableQuadIO  return true
11:33:43-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x17c0000,AddrRange.end=0x17d0000,USBIndex=0)
11:33:43-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x17c0000,AddrRange.end=0x17d0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:43-->		bool waitForWEL(USBIndex=0)
11:33:43-->		bool waitForWEL(USBIndex=0) return true;
11:33:44-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:44-->CProject::ChipEnableQuadIO(Index=0)
11:33:44-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:44-->boEnableQuadIO=true
11:33:44-->		!threadEnableQuadIO  return true
11:33:44-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:44-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:44-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:44-->boStartofOperation=true
11:33:44-->		!threadEnable4ByteAddrMode  return true
11:33:44-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:44-->CProject::ChipProtectBlock(Index=0)
11:33:44-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:44-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:44-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:44-->				cSR=0x2
11:33:44-->boProtectBlock=true
11:33:44-->		!threadProtectBlock  return true
11:33:44-->CProject::threadEndOfOperation(Index=0)
11:33:44-->CProject::ChipEndofOperation(USBIndex=0)
11:33:44-->		m_hLibrary[USBIndex=0] is true
11:33:44-->boEndofOperation=true
11:33:44-->		!threadEndOfOperation  return true
11:33:44-->CProject::RangeProgram(AddrRange.start=0x17d0000,AddrRange.end=0x17e0000,USBIndex=0)
11:33:44-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:44-->CProject::ChipStartofOperation(USBIndex=0)
11:33:44-->		m_hLibrary[USBIndex=0] is true
11:33:44-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:44-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:44-->boStartofOperation=true
11:33:44-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:44-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:44-->CProject::ChipProtectBlock(Index=0)
11:33:44-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:44-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:44-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:44-->				cSR=0x2
11:33:44-->boProtectBlock=true
11:33:44-->		!threadProtectBlock  return true
11:33:44-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:44-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:44-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:44-->boStartofOperation=true
11:33:44-->		!threadEnable4ByteAddrMode  return true
11:33:44-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:44-->CProject::ChipEnableQuadIO(Index=0)
11:33:44-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:44-->boEnableQuadIO=true
11:33:44-->		!threadEnableQuadIO  return true
11:33:44-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x17d0000,AddrRange.end=0x17e0000,USBIndex=0)
11:33:44-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x17d0000,AddrRange.end=0x17e0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:44-->		bool waitForWEL(USBIndex=0)
11:33:44-->		bool waitForWEL(USBIndex=0) return true;
11:33:44-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:44-->CProject::ChipEnableQuadIO(Index=0)
11:33:44-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:44-->boEnableQuadIO=true
11:33:44-->		!threadEnableQuadIO  return true
11:33:44-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:44-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:44-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:44-->boStartofOperation=true
11:33:44-->		!threadEnable4ByteAddrMode  return true
11:33:44-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:44-->CProject::ChipProtectBlock(Index=0)
11:33:44-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:44-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:44-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:44-->				cSR=0x2
11:33:44-->boProtectBlock=true
11:33:44-->		!threadProtectBlock  return true
11:33:44-->CProject::threadEndOfOperation(Index=0)
11:33:44-->CProject::ChipEndofOperation(USBIndex=0)
11:33:44-->		m_hLibrary[USBIndex=0] is true
11:33:44-->boEndofOperation=true
11:33:44-->		!threadEndOfOperation  return true
11:33:44-->CProject::RangeProgram(AddrRange.start=0x17e0000,AddrRange.end=0x17f0000,USBIndex=0)
11:33:44-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:44-->CProject::ChipStartofOperation(USBIndex=0)
11:33:44-->		m_hLibrary[USBIndex=0] is true
11:33:44-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:44-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:44-->boStartofOperation=true
11:33:44-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:44-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:44-->CProject::ChipProtectBlock(Index=0)
11:33:44-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:44-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:44-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:44-->				cSR=0x2
11:33:44-->boProtectBlock=true
11:33:44-->		!threadProtectBlock  return true
11:33:44-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:44-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:44-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:44-->boStartofOperation=true
11:33:44-->		!threadEnable4ByteAddrMode  return true
11:33:44-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:44-->CProject::ChipEnableQuadIO(Index=0)
11:33:44-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:44-->boEnableQuadIO=true
11:33:44-->		!threadEnableQuadIO  return true
11:33:44-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x17e0000,AddrRange.end=0x17f0000,USBIndex=0)
11:33:44-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x17e0000,AddrRange.end=0x17f0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:44-->		bool waitForWEL(USBIndex=0)
11:33:44-->		bool waitForWEL(USBIndex=0) return true;
11:33:44-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:44-->CProject::ChipEnableQuadIO(Index=0)
11:33:44-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:44-->boEnableQuadIO=true
11:33:44-->		!threadEnableQuadIO  return true
11:33:44-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:44-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:44-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:44-->boStartofOperation=true
11:33:44-->		!threadEnable4ByteAddrMode  return true
11:33:44-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:44-->CProject::ChipProtectBlock(Index=0)
11:33:44-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:44-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:44-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:44-->				cSR=0x2
11:33:44-->boProtectBlock=true
11:33:44-->		!threadProtectBlock  return true
11:33:44-->CProject::threadEndOfOperation(Index=0)
11:33:44-->CProject::ChipEndofOperation(USBIndex=0)
11:33:44-->		m_hLibrary[USBIndex=0] is true
11:33:44-->boEndofOperation=true
11:33:44-->		!threadEndOfOperation  return true
11:33:44-->CProject::RangeProgram(AddrRange.start=0x1810000,AddrRange.end=0x1820000,USBIndex=0)
11:33:44-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:44-->CProject::ChipStartofOperation(USBIndex=0)
11:33:44-->		m_hLibrary[USBIndex=0] is true
11:33:44-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:44-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:44-->boStartofOperation=true
11:33:44-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:44-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:44-->CProject::ChipProtectBlock(Index=0)
11:33:44-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:44-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:44-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:45-->				cSR=0x2
11:33:45-->boProtectBlock=true
11:33:45-->		!threadProtectBlock  return true
11:33:45-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:45-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:45-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:45-->boStartofOperation=true
11:33:45-->		!threadEnable4ByteAddrMode  return true
11:33:45-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:45-->CProject::ChipEnableQuadIO(Index=0)
11:33:45-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:45-->boEnableQuadIO=true
11:33:45-->		!threadEnableQuadIO  return true
11:33:45-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1810000,AddrRange.end=0x1820000,USBIndex=0)
11:33:45-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1810000,AddrRange.end=0x1820000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:45-->		bool waitForWEL(USBIndex=0)
11:33:45-->		bool waitForWEL(USBIndex=0) return true;
11:33:45-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:45-->CProject::ChipEnableQuadIO(Index=0)
11:33:45-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:45-->boEnableQuadIO=true
11:33:45-->		!threadEnableQuadIO  return true
11:33:45-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:45-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:45-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:45-->boStartofOperation=true
11:33:45-->		!threadEnable4ByteAddrMode  return true
11:33:45-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:45-->CProject::ChipProtectBlock(Index=0)
11:33:45-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:45-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:45-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:45-->				cSR=0x2
11:33:45-->boProtectBlock=true
11:33:45-->		!threadProtectBlock  return true
11:33:45-->CProject::threadEndOfOperation(Index=0)
11:33:45-->CProject::ChipEndofOperation(USBIndex=0)
11:33:45-->		m_hLibrary[USBIndex=0] is true
11:33:45-->boEndofOperation=true
11:33:45-->		!threadEndOfOperation  return true
11:33:45-->CProject::RangeProgram(AddrRange.start=0x1820000,AddrRange.end=0x1830000,USBIndex=0)
11:33:45-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:45-->CProject::ChipStartofOperation(USBIndex=0)
11:33:45-->		m_hLibrary[USBIndex=0] is true
11:33:45-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:45-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:45-->boStartofOperation=true
11:33:45-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:45-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:45-->CProject::ChipProtectBlock(Index=0)
11:33:45-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:45-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:45-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:45-->				cSR=0x2
11:33:45-->boProtectBlock=true
11:33:45-->		!threadProtectBlock  return true
11:33:45-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:45-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:45-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:45-->boStartofOperation=true
11:33:45-->		!threadEnable4ByteAddrMode  return true
11:33:45-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:45-->CProject::ChipEnableQuadIO(Index=0)
11:33:45-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:45-->boEnableQuadIO=true
11:33:45-->		!threadEnableQuadIO  return true
11:33:45-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1820000,AddrRange.end=0x1830000,USBIndex=0)
11:33:45-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1820000,AddrRange.end=0x1830000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:45-->		bool waitForWEL(USBIndex=0)
11:33:45-->		bool waitForWEL(USBIndex=0) return true;
11:33:45-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:45-->CProject::ChipEnableQuadIO(Index=0)
11:33:45-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:45-->boEnableQuadIO=true
11:33:45-->		!threadEnableQuadIO  return true
11:33:45-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:45-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:45-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:45-->boStartofOperation=true
11:33:45-->		!threadEnable4ByteAddrMode  return true
11:33:45-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:45-->CProject::ChipProtectBlock(Index=0)
11:33:45-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:45-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:45-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:45-->				cSR=0x2
11:33:45-->boProtectBlock=true
11:33:45-->		!threadProtectBlock  return true
11:33:45-->CProject::threadEndOfOperation(Index=0)
11:33:45-->CProject::ChipEndofOperation(USBIndex=0)
11:33:45-->		m_hLibrary[USBIndex=0] is true
11:33:45-->boEndofOperation=true
11:33:45-->		!threadEndOfOperation  return true
11:33:45-->CProject::RangeProgram(AddrRange.start=0x1830000,AddrRange.end=0x1840000,USBIndex=0)
11:33:45-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:45-->CProject::ChipStartofOperation(USBIndex=0)
11:33:45-->		m_hLibrary[USBIndex=0] is true
11:33:45-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:45-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:45-->boStartofOperation=true
11:33:45-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:45-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:45-->CProject::ChipProtectBlock(Index=0)
11:33:45-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:45-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:45-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:45-->				cSR=0x2
11:33:45-->boProtectBlock=true
11:33:45-->		!threadProtectBlock  return true
11:33:45-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:45-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:45-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:45-->boStartofOperation=true
11:33:45-->		!threadEnable4ByteAddrMode  return true
11:33:45-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:45-->CProject::ChipEnableQuadIO(Index=0)
11:33:45-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:45-->boEnableQuadIO=true
11:33:45-->		!threadEnableQuadIO  return true
11:33:45-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1830000,AddrRange.end=0x1840000,USBIndex=0)
11:33:45-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1830000,AddrRange.end=0x1840000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:45-->		bool waitForWEL(USBIndex=0)
11:33:45-->		bool waitForWEL(USBIndex=0) return true;
11:33:45-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:45-->CProject::ChipEnableQuadIO(Index=0)
11:33:45-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:45-->boEnableQuadIO=true
11:33:45-->		!threadEnableQuadIO  return true
11:33:45-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:45-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:45-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:45-->boStartofOperation=true
11:33:45-->		!threadEnable4ByteAddrMode  return true
11:33:45-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:45-->CProject::ChipProtectBlock(Index=0)
11:33:45-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:45-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:45-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:45-->				cSR=0x2
11:33:45-->boProtectBlock=true
11:33:45-->		!threadProtectBlock  return true
11:33:45-->CProject::threadEndOfOperation(Index=0)
11:33:45-->CProject::ChipEndofOperation(USBIndex=0)
11:33:45-->		m_hLibrary[USBIndex=0] is true
11:33:45-->boEndofOperation=true
11:33:45-->		!threadEndOfOperation  return true
11:33:45-->CProject::RangeProgram(AddrRange.start=0x18b0000,AddrRange.end=0x18c0000,USBIndex=0)
11:33:45-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:45-->CProject::ChipStartofOperation(USBIndex=0)
11:33:45-->		m_hLibrary[USBIndex=0] is true
11:33:45-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:45-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:45-->boStartofOperation=true
11:33:45-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:45-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:45-->CProject::ChipProtectBlock(Index=0)
11:33:45-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:45-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:45-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:46-->				cSR=0x2
11:33:46-->boProtectBlock=true
11:33:46-->		!threadProtectBlock  return true
11:33:46-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:46-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:46-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:46-->boStartofOperation=true
11:33:46-->		!threadEnable4ByteAddrMode  return true
11:33:46-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:46-->CProject::ChipEnableQuadIO(Index=0)
11:33:46-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:46-->boEnableQuadIO=true
11:33:46-->		!threadEnableQuadIO  return true
11:33:46-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x18b0000,AddrRange.end=0x18c0000,USBIndex=0)
11:33:46-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x18b0000,AddrRange.end=0x18c0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:46-->		bool waitForWEL(USBIndex=0)
11:33:46-->		bool waitForWEL(USBIndex=0) return true;
11:33:46-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:46-->CProject::ChipEnableQuadIO(Index=0)
11:33:46-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:46-->boEnableQuadIO=true
11:33:46-->		!threadEnableQuadIO  return true
11:33:46-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:46-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:46-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:46-->boStartofOperation=true
11:33:46-->		!threadEnable4ByteAddrMode  return true
11:33:46-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:46-->CProject::ChipProtectBlock(Index=0)
11:33:46-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:46-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:46-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:46-->				cSR=0x2
11:33:46-->boProtectBlock=true
11:33:46-->		!threadProtectBlock  return true
11:33:46-->CProject::threadEndOfOperation(Index=0)
11:33:46-->CProject::ChipEndofOperation(USBIndex=0)
11:33:46-->		m_hLibrary[USBIndex=0] is true
11:33:46-->boEndofOperation=true
11:33:46-->		!threadEndOfOperation  return true
11:33:46-->CProject::RangeProgram(AddrRange.start=0x18c0000,AddrRange.end=0x18d0000,USBIndex=0)
11:33:46-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:46-->CProject::ChipStartofOperation(USBIndex=0)
11:33:46-->		m_hLibrary[USBIndex=0] is true
11:33:46-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:46-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:46-->boStartofOperation=true
11:33:46-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:46-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:46-->CProject::ChipProtectBlock(Index=0)
11:33:46-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:46-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:46-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:46-->				cSR=0x2
11:33:46-->boProtectBlock=true
11:33:46-->		!threadProtectBlock  return true
11:33:46-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:46-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:46-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:46-->boStartofOperation=true
11:33:46-->		!threadEnable4ByteAddrMode  return true
11:33:46-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:46-->CProject::ChipEnableQuadIO(Index=0)
11:33:46-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:46-->boEnableQuadIO=true
11:33:46-->		!threadEnableQuadIO  return true
11:33:46-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x18c0000,AddrRange.end=0x18d0000,USBIndex=0)
11:33:46-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x18c0000,AddrRange.end=0x18d0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:46-->		bool waitForWEL(USBIndex=0)
11:33:46-->		bool waitForWEL(USBIndex=0) return true;
11:33:46-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:46-->CProject::ChipEnableQuadIO(Index=0)
11:33:46-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:46-->boEnableQuadIO=true
11:33:46-->		!threadEnableQuadIO  return true
11:33:46-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:46-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:46-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:46-->boStartofOperation=true
11:33:46-->		!threadEnable4ByteAddrMode  return true
11:33:46-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:46-->CProject::ChipProtectBlock(Index=0)
11:33:46-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:46-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:46-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:46-->				cSR=0x2
11:33:46-->boProtectBlock=true
11:33:46-->		!threadProtectBlock  return true
11:33:46-->CProject::threadEndOfOperation(Index=0)
11:33:46-->CProject::ChipEndofOperation(USBIndex=0)
11:33:46-->		m_hLibrary[USBIndex=0] is true
11:33:46-->boEndofOperation=true
11:33:46-->		!threadEndOfOperation  return true
11:33:46-->CProject::RangeProgram(AddrRange.start=0x18d0000,AddrRange.end=0x18e0000,USBIndex=0)
11:33:46-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:46-->CProject::ChipStartofOperation(USBIndex=0)
11:33:46-->		m_hLibrary[USBIndex=0] is true
11:33:46-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:46-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:46-->boStartofOperation=true
11:33:46-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:46-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:46-->CProject::ChipProtectBlock(Index=0)
11:33:46-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:46-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:46-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:46-->				cSR=0x2
11:33:46-->boProtectBlock=true
11:33:46-->		!threadProtectBlock  return true
11:33:46-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:46-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:46-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:46-->boStartofOperation=true
11:33:46-->		!threadEnable4ByteAddrMode  return true
11:33:46-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:46-->CProject::ChipEnableQuadIO(Index=0)
11:33:46-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:46-->boEnableQuadIO=true
11:33:46-->		!threadEnableQuadIO  return true
11:33:46-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x18d0000,AddrRange.end=0x18e0000,USBIndex=0)
11:33:46-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x18d0000,AddrRange.end=0x18e0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:46-->		bool waitForWEL(USBIndex=0)
11:33:46-->		bool waitForWEL(USBIndex=0) return true;
11:33:47-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:47-->CProject::ChipEnableQuadIO(Index=0)
11:33:47-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:47-->boEnableQuadIO=true
11:33:47-->		!threadEnableQuadIO  return true
11:33:47-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:47-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:47-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:47-->boStartofOperation=true
11:33:47-->		!threadEnable4ByteAddrMode  return true
11:33:47-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:47-->CProject::ChipProtectBlock(Index=0)
11:33:47-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:47-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:47-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:47-->				cSR=0x2
11:33:47-->boProtectBlock=true
11:33:47-->		!threadProtectBlock  return true
11:33:47-->CProject::threadEndOfOperation(Index=0)
11:33:47-->CProject::ChipEndofOperation(USBIndex=0)
11:33:47-->		m_hLibrary[USBIndex=0] is true
11:33:47-->boEndofOperation=true
11:33:47-->		!threadEndOfOperation  return true
11:33:47-->CProject::RangeProgram(AddrRange.start=0x18e0000,AddrRange.end=0x18f0000,USBIndex=0)
11:33:47-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:47-->CProject::ChipStartofOperation(USBIndex=0)
11:33:47-->		m_hLibrary[USBIndex=0] is true
11:33:47-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:47-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:47-->boStartofOperation=true
11:33:47-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:47-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:47-->CProject::ChipProtectBlock(Index=0)
11:33:47-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:47-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:47-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:47-->				cSR=0x2
11:33:47-->boProtectBlock=true
11:33:47-->		!threadProtectBlock  return true
11:33:47-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:47-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:47-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:47-->boStartofOperation=true
11:33:47-->		!threadEnable4ByteAddrMode  return true
11:33:47-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:47-->CProject::ChipEnableQuadIO(Index=0)
11:33:47-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:47-->boEnableQuadIO=true
11:33:47-->		!threadEnableQuadIO  return true
11:33:47-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x18e0000,AddrRange.end=0x18f0000,USBIndex=0)
11:33:47-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x18e0000,AddrRange.end=0x18f0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:47-->		bool waitForWEL(USBIndex=0)
11:33:47-->		bool waitForWEL(USBIndex=0) return true;
11:33:47-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:47-->CProject::ChipEnableQuadIO(Index=0)
11:33:47-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:47-->boEnableQuadIO=true
11:33:47-->		!threadEnableQuadIO  return true
11:33:47-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:47-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:47-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:47-->boStartofOperation=true
11:33:47-->		!threadEnable4ByteAddrMode  return true
11:33:47-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:47-->CProject::ChipProtectBlock(Index=0)
11:33:47-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:47-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:47-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:47-->				cSR=0x2
11:33:47-->boProtectBlock=true
11:33:47-->		!threadProtectBlock  return true
11:33:47-->CProject::threadEndOfOperation(Index=0)
11:33:47-->CProject::ChipEndofOperation(USBIndex=0)
11:33:47-->		m_hLibrary[USBIndex=0] is true
11:33:47-->boEndofOperation=true
11:33:47-->		!threadEndOfOperation  return true
11:33:47-->CProject::RangeProgram(AddrRange.start=0x18f0000,AddrRange.end=0x1900000,USBIndex=0)
11:33:47-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:47-->CProject::ChipStartofOperation(USBIndex=0)
11:33:47-->		m_hLibrary[USBIndex=0] is true
11:33:47-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:47-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:47-->boStartofOperation=true
11:33:47-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:47-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:47-->CProject::ChipProtectBlock(Index=0)
11:33:47-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:47-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:47-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:47-->				cSR=0x2
11:33:47-->boProtectBlock=true
11:33:47-->		!threadProtectBlock  return true
11:33:47-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:47-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:47-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:47-->boStartofOperation=true
11:33:47-->		!threadEnable4ByteAddrMode  return true
11:33:47-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:47-->CProject::ChipEnableQuadIO(Index=0)
11:33:47-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:47-->boEnableQuadIO=true
11:33:47-->		!threadEnableQuadIO  return true
11:33:47-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x18f0000,AddrRange.end=0x1900000,USBIndex=0)
11:33:47-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x18f0000,AddrRange.end=0x1900000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:47-->		bool waitForWEL(USBIndex=0)
11:33:47-->		bool waitForWEL(USBIndex=0) return true;
11:33:47-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:47-->CProject::ChipEnableQuadIO(Index=0)
11:33:47-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:47-->boEnableQuadIO=true
11:33:47-->		!threadEnableQuadIO  return true
11:33:47-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:47-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:47-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:47-->boStartofOperation=true
11:33:47-->		!threadEnable4ByteAddrMode  return true
11:33:47-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:47-->CProject::ChipProtectBlock(Index=0)
11:33:47-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:47-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:47-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:47-->				cSR=0x2
11:33:47-->boProtectBlock=true
11:33:47-->		!threadProtectBlock  return true
11:33:47-->CProject::threadEndOfOperation(Index=0)
11:33:47-->CProject::ChipEndofOperation(USBIndex=0)
11:33:47-->		m_hLibrary[USBIndex=0] is true
11:33:47-->boEndofOperation=true
11:33:47-->		!threadEndOfOperation  return true
11:33:47-->CProject::RangeProgram(AddrRange.start=0x1900000,AddrRange.end=0x1910000,USBIndex=0)
11:33:47-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:47-->CProject::ChipStartofOperation(USBIndex=0)
11:33:47-->		m_hLibrary[USBIndex=0] is true
11:33:47-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:47-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:47-->boStartofOperation=true
11:33:47-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:47-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:47-->CProject::ChipProtectBlock(Index=0)
11:33:47-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:47-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:47-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:47-->				cSR=0x2
11:33:47-->boProtectBlock=true
11:33:47-->		!threadProtectBlock  return true
11:33:47-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:47-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:47-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:47-->boStartofOperation=true
11:33:47-->		!threadEnable4ByteAddrMode  return true
11:33:47-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:47-->CProject::ChipEnableQuadIO(Index=0)
11:33:47-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:47-->boEnableQuadIO=true
11:33:47-->		!threadEnableQuadIO  return true
11:33:47-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1900000,AddrRange.end=0x1910000,USBIndex=0)
11:33:47-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1900000,AddrRange.end=0x1910000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:47-->		bool waitForWEL(USBIndex=0)
11:33:48-->		bool waitForWEL(USBIndex=0) return true;
11:33:48-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:48-->CProject::ChipEnableQuadIO(Index=0)
11:33:48-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:48-->boEnableQuadIO=true
11:33:48-->		!threadEnableQuadIO  return true
11:33:48-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:48-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:48-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:48-->boStartofOperation=true
11:33:48-->		!threadEnable4ByteAddrMode  return true
11:33:48-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:48-->CProject::ChipProtectBlock(Index=0)
11:33:48-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:48-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:48-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:48-->				cSR=0x2
11:33:48-->boProtectBlock=true
11:33:48-->		!threadProtectBlock  return true
11:33:48-->CProject::threadEndOfOperation(Index=0)
11:33:48-->CProject::ChipEndofOperation(USBIndex=0)
11:33:48-->		m_hLibrary[USBIndex=0] is true
11:33:48-->boEndofOperation=true
11:33:48-->		!threadEndOfOperation  return true
11:33:48-->CProject::RangeProgram(AddrRange.start=0x1910000,AddrRange.end=0x1920000,USBIndex=0)
11:33:48-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:48-->CProject::ChipStartofOperation(USBIndex=0)
11:33:48-->		m_hLibrary[USBIndex=0] is true
11:33:48-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:48-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:48-->boStartofOperation=true
11:33:48-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:48-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:48-->CProject::ChipProtectBlock(Index=0)
11:33:48-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:48-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:48-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:48-->				cSR=0x2
11:33:48-->boProtectBlock=true
11:33:48-->		!threadProtectBlock  return true
11:33:48-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:48-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:48-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:48-->boStartofOperation=true
11:33:48-->		!threadEnable4ByteAddrMode  return true
11:33:48-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:48-->CProject::ChipEnableQuadIO(Index=0)
11:33:48-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:48-->boEnableQuadIO=true
11:33:48-->		!threadEnableQuadIO  return true
11:33:48-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1910000,AddrRange.end=0x1920000,USBIndex=0)
11:33:48-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1910000,AddrRange.end=0x1920000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:48-->		bool waitForWEL(USBIndex=0)
11:33:48-->		bool waitForWEL(USBIndex=0) return true;
11:33:48-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:48-->CProject::ChipEnableQuadIO(Index=0)
11:33:48-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:48-->boEnableQuadIO=true
11:33:48-->		!threadEnableQuadIO  return true
11:33:48-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:48-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:48-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:48-->boStartofOperation=true
11:33:48-->		!threadEnable4ByteAddrMode  return true
11:33:48-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:48-->CProject::ChipProtectBlock(Index=0)
11:33:48-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:48-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:48-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:48-->				cSR=0x2
11:33:48-->boProtectBlock=true
11:33:48-->		!threadProtectBlock  return true
11:33:48-->CProject::threadEndOfOperation(Index=0)
11:33:48-->CProject::ChipEndofOperation(USBIndex=0)
11:33:48-->		m_hLibrary[USBIndex=0] is true
11:33:48-->boEndofOperation=true
11:33:48-->		!threadEndOfOperation  return true
11:33:48-->CProject::RangeProgram(AddrRange.start=0x1920000,AddrRange.end=0x1930000,USBIndex=0)
11:33:48-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:48-->CProject::ChipStartofOperation(USBIndex=0)
11:33:48-->		m_hLibrary[USBIndex=0] is true
11:33:48-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:48-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:48-->boStartofOperation=true
11:33:48-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:48-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:48-->CProject::ChipProtectBlock(Index=0)
11:33:48-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:48-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:48-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:48-->				cSR=0x2
11:33:48-->boProtectBlock=true
11:33:48-->		!threadProtectBlock  return true
11:33:48-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:48-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:48-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:48-->boStartofOperation=true
11:33:48-->		!threadEnable4ByteAddrMode  return true
11:33:48-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:48-->CProject::ChipEnableQuadIO(Index=0)
11:33:48-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:48-->boEnableQuadIO=true
11:33:48-->		!threadEnableQuadIO  return true
11:33:48-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1920000,AddrRange.end=0x1930000,USBIndex=0)
11:33:48-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1920000,AddrRange.end=0x1930000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:48-->		bool waitForWEL(USBIndex=0)
11:33:48-->		bool waitForWEL(USBIndex=0) return true;
11:33:49-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:49-->CProject::ChipEnableQuadIO(Index=0)
11:33:49-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:49-->boEnableQuadIO=true
11:33:49-->		!threadEnableQuadIO  return true
11:33:49-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:49-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:49-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:49-->boStartofOperation=true
11:33:49-->		!threadEnable4ByteAddrMode  return true
11:33:49-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:49-->CProject::ChipProtectBlock(Index=0)
11:33:49-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:49-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:49-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:49-->				cSR=0x2
11:33:49-->boProtectBlock=true
11:33:49-->		!threadProtectBlock  return true
11:33:49-->CProject::threadEndOfOperation(Index=0)
11:33:49-->CProject::ChipEndofOperation(USBIndex=0)
11:33:49-->		m_hLibrary[USBIndex=0] is true
11:33:49-->boEndofOperation=true
11:33:49-->		!threadEndOfOperation  return true
11:33:49-->CProject::RangeProgram(AddrRange.start=0x1930000,AddrRange.end=0x1940000,USBIndex=0)
11:33:49-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:49-->CProject::ChipStartofOperation(USBIndex=0)
11:33:49-->		m_hLibrary[USBIndex=0] is true
11:33:49-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:49-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:49-->boStartofOperation=true
11:33:49-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:49-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:49-->CProject::ChipProtectBlock(Index=0)
11:33:49-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:49-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:49-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:49-->				cSR=0x2
11:33:49-->boProtectBlock=true
11:33:49-->		!threadProtectBlock  return true
11:33:49-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:49-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:49-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:49-->boStartofOperation=true
11:33:49-->		!threadEnable4ByteAddrMode  return true
11:33:49-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:49-->CProject::ChipEnableQuadIO(Index=0)
11:33:49-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:49-->boEnableQuadIO=true
11:33:49-->		!threadEnableQuadIO  return true
11:33:49-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1930000,AddrRange.end=0x1940000,USBIndex=0)
11:33:49-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1930000,AddrRange.end=0x1940000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:49-->		bool waitForWEL(USBIndex=0)
11:33:49-->		bool waitForWEL(USBIndex=0) return true;
11:33:49-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:49-->CProject::ChipEnableQuadIO(Index=0)
11:33:49-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:49-->boEnableQuadIO=true
11:33:49-->		!threadEnableQuadIO  return true
11:33:49-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:49-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:49-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:49-->boStartofOperation=true
11:33:49-->		!threadEnable4ByteAddrMode  return true
11:33:49-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:49-->CProject::ChipProtectBlock(Index=0)
11:33:49-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:49-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:49-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:49-->				cSR=0x2
11:33:49-->boProtectBlock=true
11:33:49-->		!threadProtectBlock  return true
11:33:49-->CProject::threadEndOfOperation(Index=0)
11:33:49-->CProject::ChipEndofOperation(USBIndex=0)
11:33:49-->		m_hLibrary[USBIndex=0] is true
11:33:49-->boEndofOperation=true
11:33:49-->		!threadEndOfOperation  return true
11:33:49-->CProject::RangeProgram(AddrRange.start=0x1940000,AddrRange.end=0x1950000,USBIndex=0)
11:33:49-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:49-->CProject::ChipStartofOperation(USBIndex=0)
11:33:49-->		m_hLibrary[USBIndex=0] is true
11:33:49-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:49-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:49-->boStartofOperation=true
11:33:49-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:49-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:49-->CProject::ChipProtectBlock(Index=0)
11:33:49-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:49-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:49-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:49-->				cSR=0x2
11:33:49-->boProtectBlock=true
11:33:49-->		!threadProtectBlock  return true
11:33:49-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:49-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:49-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:49-->boStartofOperation=true
11:33:49-->		!threadEnable4ByteAddrMode  return true
11:33:49-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:49-->CProject::ChipEnableQuadIO(Index=0)
11:33:49-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:49-->boEnableQuadIO=true
11:33:49-->		!threadEnableQuadIO  return true
11:33:49-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1940000,AddrRange.end=0x1950000,USBIndex=0)
11:33:49-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1940000,AddrRange.end=0x1950000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:49-->		bool waitForWEL(USBIndex=0)
11:33:49-->		bool waitForWEL(USBIndex=0) return true;
11:33:49-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:49-->CProject::ChipEnableQuadIO(Index=0)
11:33:49-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:49-->boEnableQuadIO=true
11:33:49-->		!threadEnableQuadIO  return true
11:33:49-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:49-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:49-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:49-->boStartofOperation=true
11:33:49-->		!threadEnable4ByteAddrMode  return true
11:33:49-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:49-->CProject::ChipProtectBlock(Index=0)
11:33:49-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:49-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:49-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:49-->				cSR=0x2
11:33:49-->boProtectBlock=true
11:33:49-->		!threadProtectBlock  return true
11:33:49-->CProject::threadEndOfOperation(Index=0)
11:33:49-->CProject::ChipEndofOperation(USBIndex=0)
11:33:49-->		m_hLibrary[USBIndex=0] is true
11:33:49-->boEndofOperation=true
11:33:49-->		!threadEndOfOperation  return true
11:33:49-->CProject::RangeProgram(AddrRange.start=0x1950000,AddrRange.end=0x1960000,USBIndex=0)
11:33:49-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:49-->CProject::ChipStartofOperation(USBIndex=0)
11:33:49-->		m_hLibrary[USBIndex=0] is true
11:33:49-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:49-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:49-->boStartofOperation=true
11:33:49-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:49-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:49-->CProject::ChipProtectBlock(Index=0)
11:33:49-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:49-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:49-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:50-->				cSR=0x2
11:33:50-->boProtectBlock=true
11:33:50-->		!threadProtectBlock  return true
11:33:50-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:50-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:50-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:50-->boStartofOperation=true
11:33:50-->		!threadEnable4ByteAddrMode  return true
11:33:50-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:50-->CProject::ChipEnableQuadIO(Index=0)
11:33:50-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:50-->boEnableQuadIO=true
11:33:50-->		!threadEnableQuadIO  return true
11:33:50-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1950000,AddrRange.end=0x1960000,USBIndex=0)
11:33:50-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1950000,AddrRange.end=0x1960000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:50-->		bool waitForWEL(USBIndex=0)
11:33:50-->		bool waitForWEL(USBIndex=0) return true;
11:33:50-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:50-->CProject::ChipEnableQuadIO(Index=0)
11:33:50-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:50-->boEnableQuadIO=true
11:33:50-->		!threadEnableQuadIO  return true
11:33:50-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:50-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:50-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:50-->boStartofOperation=true
11:33:50-->		!threadEnable4ByteAddrMode  return true
11:33:50-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:50-->CProject::ChipProtectBlock(Index=0)
11:33:50-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:50-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:50-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:50-->				cSR=0x2
11:33:50-->boProtectBlock=true
11:33:50-->		!threadProtectBlock  return true
11:33:50-->CProject::threadEndOfOperation(Index=0)
11:33:50-->CProject::ChipEndofOperation(USBIndex=0)
11:33:50-->		m_hLibrary[USBIndex=0] is true
11:33:50-->boEndofOperation=true
11:33:50-->		!threadEndOfOperation  return true
11:33:50-->CProject::RangeProgram(AddrRange.start=0x19f0000,AddrRange.end=0x1a00000,USBIndex=0)
11:33:50-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:50-->CProject::ChipStartofOperation(USBIndex=0)
11:33:50-->		m_hLibrary[USBIndex=0] is true
11:33:50-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:50-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:50-->boStartofOperation=true
11:33:50-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:50-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:50-->CProject::ChipProtectBlock(Index=0)
11:33:50-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:50-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:50-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:50-->				cSR=0x2
11:33:50-->boProtectBlock=true
11:33:50-->		!threadProtectBlock  return true
11:33:50-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:50-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:50-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:50-->boStartofOperation=true
11:33:50-->		!threadEnable4ByteAddrMode  return true
11:33:50-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:50-->CProject::ChipEnableQuadIO(Index=0)
11:33:50-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:50-->boEnableQuadIO=true
11:33:50-->		!threadEnableQuadIO  return true
11:33:50-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x19f0000,AddrRange.end=0x1a00000,USBIndex=0)
11:33:50-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x19f0000,AddrRange.end=0x1a00000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:50-->		bool waitForWEL(USBIndex=0)
11:33:50-->		bool waitForWEL(USBIndex=0) return true;
11:33:50-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:50-->CProject::ChipEnableQuadIO(Index=0)
11:33:50-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:50-->boEnableQuadIO=true
11:33:50-->		!threadEnableQuadIO  return true
11:33:50-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:50-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:50-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:50-->boStartofOperation=true
11:33:50-->		!threadEnable4ByteAddrMode  return true
11:33:50-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:50-->CProject::ChipProtectBlock(Index=0)
11:33:50-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:50-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:50-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:50-->				cSR=0x2
11:33:50-->boProtectBlock=true
11:33:50-->		!threadProtectBlock  return true
11:33:50-->CProject::threadEndOfOperation(Index=0)
11:33:50-->CProject::ChipEndofOperation(USBIndex=0)
11:33:50-->		m_hLibrary[USBIndex=0] is true
11:33:50-->boEndofOperation=true
11:33:50-->		!threadEndOfOperation  return true
11:33:50-->CProject::RangeProgram(AddrRange.start=0x1a00000,AddrRange.end=0x1a10000,USBIndex=0)
11:33:50-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:50-->CProject::ChipStartofOperation(USBIndex=0)
11:33:50-->		m_hLibrary[USBIndex=0] is true
11:33:50-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:50-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:50-->boStartofOperation=true
11:33:50-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:50-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:50-->CProject::ChipProtectBlock(Index=0)
11:33:50-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:50-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:50-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:50-->				cSR=0x2
11:33:50-->boProtectBlock=true
11:33:50-->		!threadProtectBlock  return true
11:33:50-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:50-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:50-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:50-->boStartofOperation=true
11:33:50-->		!threadEnable4ByteAddrMode  return true
11:33:50-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:50-->CProject::ChipEnableQuadIO(Index=0)
11:33:50-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:50-->boEnableQuadIO=true
11:33:50-->		!threadEnableQuadIO  return true
11:33:50-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1a00000,AddrRange.end=0x1a10000,USBIndex=0)
11:33:50-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1a00000,AddrRange.end=0x1a10000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:50-->		bool waitForWEL(USBIndex=0)
11:33:50-->		bool waitForWEL(USBIndex=0) return true;
11:33:50-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:50-->CProject::ChipEnableQuadIO(Index=0)
11:33:50-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:50-->boEnableQuadIO=true
11:33:50-->		!threadEnableQuadIO  return true
11:33:50-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:50-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:50-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:51-->boStartofOperation=true
11:33:51-->		!threadEnable4ByteAddrMode  return true
11:33:51-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:51-->CProject::ChipProtectBlock(Index=0)
11:33:51-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:51-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:51-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:51-->				cSR=0x2
11:33:51-->boProtectBlock=true
11:33:51-->		!threadProtectBlock  return true
11:33:51-->CProject::threadEndOfOperation(Index=0)
11:33:51-->CProject::ChipEndofOperation(USBIndex=0)
11:33:51-->		m_hLibrary[USBIndex=0] is true
11:33:51-->boEndofOperation=true
11:33:51-->		!threadEndOfOperation  return true
11:33:51-->CProject::RangeProgram(AddrRange.start=0x1a10000,AddrRange.end=0x1a20000,USBIndex=0)
11:33:51-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:51-->CProject::ChipStartofOperation(USBIndex=0)
11:33:51-->		m_hLibrary[USBIndex=0] is true
11:33:51-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:51-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:51-->boStartofOperation=true
11:33:51-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:51-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:51-->CProject::ChipProtectBlock(Index=0)
11:33:51-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:51-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:51-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:51-->				cSR=0x2
11:33:51-->boProtectBlock=true
11:33:51-->		!threadProtectBlock  return true
11:33:51-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:51-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:51-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:51-->boStartofOperation=true
11:33:51-->		!threadEnable4ByteAddrMode  return true
11:33:51-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:51-->CProject::ChipEnableQuadIO(Index=0)
11:33:51-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:51-->boEnableQuadIO=true
11:33:51-->		!threadEnableQuadIO  return true
11:33:51-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1a10000,AddrRange.end=0x1a20000,USBIndex=0)
11:33:51-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1a10000,AddrRange.end=0x1a20000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:51-->		bool waitForWEL(USBIndex=0)
11:33:51-->		bool waitForWEL(USBIndex=0) return true;
11:33:51-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:51-->CProject::ChipEnableQuadIO(Index=0)
11:33:51-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:51-->boEnableQuadIO=true
11:33:51-->		!threadEnableQuadIO  return true
11:33:51-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:51-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:51-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:51-->boStartofOperation=true
11:33:51-->		!threadEnable4ByteAddrMode  return true
11:33:51-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:51-->CProject::ChipProtectBlock(Index=0)
11:33:51-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:51-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:51-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:51-->				cSR=0x2
11:33:51-->boProtectBlock=true
11:33:51-->		!threadProtectBlock  return true
11:33:51-->CProject::threadEndOfOperation(Index=0)
11:33:51-->CProject::ChipEndofOperation(USBIndex=0)
11:33:51-->		m_hLibrary[USBIndex=0] is true
11:33:51-->boEndofOperation=true
11:33:51-->		!threadEndOfOperation  return true
11:33:51-->CProject::RangeProgram(AddrRange.start=0x1a20000,AddrRange.end=0x1a30000,USBIndex=0)
11:33:51-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:51-->CProject::ChipStartofOperation(USBIndex=0)
11:33:51-->		m_hLibrary[USBIndex=0] is true
11:33:51-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:51-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:51-->boStartofOperation=true
11:33:51-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:51-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:51-->CProject::ChipProtectBlock(Index=0)
11:33:51-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:51-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:51-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:51-->				cSR=0x2
11:33:51-->boProtectBlock=true
11:33:51-->		!threadProtectBlock  return true
11:33:51-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:51-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:51-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:51-->boStartofOperation=true
11:33:51-->		!threadEnable4ByteAddrMode  return true
11:33:51-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:51-->CProject::ChipEnableQuadIO(Index=0)
11:33:51-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:51-->boEnableQuadIO=true
11:33:51-->		!threadEnableQuadIO  return true
11:33:51-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1a20000,AddrRange.end=0x1a30000,USBIndex=0)
11:33:51-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1a20000,AddrRange.end=0x1a30000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:51-->		bool waitForWEL(USBIndex=0)
11:33:51-->		bool waitForWEL(USBIndex=0) return true;
11:33:51-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:51-->CProject::ChipEnableQuadIO(Index=0)
11:33:51-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:51-->boEnableQuadIO=true
11:33:51-->		!threadEnableQuadIO  return true
11:33:51-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:51-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:51-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:51-->boStartofOperation=true
11:33:51-->		!threadEnable4ByteAddrMode  return true
11:33:51-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:51-->CProject::ChipProtectBlock(Index=0)
11:33:51-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:51-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:51-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:51-->				cSR=0x2
11:33:51-->boProtectBlock=true
11:33:51-->		!threadProtectBlock  return true
11:33:51-->CProject::threadEndOfOperation(Index=0)
11:33:51-->CProject::ChipEndofOperation(USBIndex=0)
11:33:51-->		m_hLibrary[USBIndex=0] is true
11:33:51-->boEndofOperation=true
11:33:51-->		!threadEndOfOperation  return true
11:33:51-->CProject::RangeProgram(AddrRange.start=0x1a30000,AddrRange.end=0x1a40000,USBIndex=0)
11:33:51-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:51-->CProject::ChipStartofOperation(USBIndex=0)
11:33:51-->		m_hLibrary[USBIndex=0] is true
11:33:51-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:51-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:51-->boStartofOperation=true
11:33:51-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:51-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:51-->CProject::ChipProtectBlock(Index=0)
11:33:51-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:51-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:51-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:51-->				cSR=0x2
11:33:51-->boProtectBlock=true
11:33:51-->		!threadProtectBlock  return true
11:33:51-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:51-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:51-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:51-->boStartofOperation=true
11:33:51-->		!threadEnable4ByteAddrMode  return true
11:33:51-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:51-->CProject::ChipEnableQuadIO(Index=0)
11:33:51-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:51-->boEnableQuadIO=true
11:33:51-->		!threadEnableQuadIO  return true
11:33:51-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1a30000,AddrRange.end=0x1a40000,USBIndex=0)
11:33:51-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1a30000,AddrRange.end=0x1a40000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:51-->		bool waitForWEL(USBIndex=0)
11:33:52-->		bool waitForWEL(USBIndex=0) return true;
11:33:52-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:52-->CProject::ChipEnableQuadIO(Index=0)
11:33:52-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:52-->boEnableQuadIO=true
11:33:52-->		!threadEnableQuadIO  return true
11:33:52-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:52-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:52-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:52-->boStartofOperation=true
11:33:52-->		!threadEnable4ByteAddrMode  return true
11:33:52-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:52-->CProject::ChipProtectBlock(Index=0)
11:33:52-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:52-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:52-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:52-->				cSR=0x2
11:33:52-->boProtectBlock=true
11:33:52-->		!threadProtectBlock  return true
11:33:52-->CProject::threadEndOfOperation(Index=0)
11:33:52-->CProject::ChipEndofOperation(USBIndex=0)
11:33:52-->		m_hLibrary[USBIndex=0] is true
11:33:52-->boEndofOperation=true
11:33:52-->		!threadEndOfOperation  return true
11:33:52-->CProject::RangeProgram(AddrRange.start=0x1a40000,AddrRange.end=0x1a50000,USBIndex=0)
11:33:52-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:52-->CProject::ChipStartofOperation(USBIndex=0)
11:33:52-->		m_hLibrary[USBIndex=0] is true
11:33:52-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:52-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:52-->boStartofOperation=true
11:33:52-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:52-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:52-->CProject::ChipProtectBlock(Index=0)
11:33:52-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:52-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:52-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:52-->				cSR=0x2
11:33:52-->boProtectBlock=true
11:33:52-->		!threadProtectBlock  return true
11:33:52-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:52-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:52-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:52-->boStartofOperation=true
11:33:52-->		!threadEnable4ByteAddrMode  return true
11:33:52-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:52-->CProject::ChipEnableQuadIO(Index=0)
11:33:52-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:52-->boEnableQuadIO=true
11:33:52-->		!threadEnableQuadIO  return true
11:33:52-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1a40000,AddrRange.end=0x1a50000,USBIndex=0)
11:33:52-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1a40000,AddrRange.end=0x1a50000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:52-->		bool waitForWEL(USBIndex=0)
11:33:52-->		bool waitForWEL(USBIndex=0) return true;
11:33:52-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:52-->CProject::ChipEnableQuadIO(Index=0)
11:33:52-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:52-->boEnableQuadIO=true
11:33:52-->		!threadEnableQuadIO  return true
11:33:52-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:52-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:52-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:52-->boStartofOperation=true
11:33:52-->		!threadEnable4ByteAddrMode  return true
11:33:52-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:52-->CProject::ChipProtectBlock(Index=0)
11:33:52-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:52-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:52-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:52-->				cSR=0x2
11:33:52-->boProtectBlock=true
11:33:52-->		!threadProtectBlock  return true
11:33:52-->CProject::threadEndOfOperation(Index=0)
11:33:52-->CProject::ChipEndofOperation(USBIndex=0)
11:33:52-->		m_hLibrary[USBIndex=0] is true
11:33:52-->boEndofOperation=true
11:33:52-->		!threadEndOfOperation  return true
11:33:52-->CProject::RangeProgram(AddrRange.start=0x1a50000,AddrRange.end=0x1a60000,USBIndex=0)
11:33:52-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:52-->CProject::ChipStartofOperation(USBIndex=0)
11:33:52-->		m_hLibrary[USBIndex=0] is true
11:33:52-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:52-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:52-->boStartofOperation=true
11:33:52-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:52-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:52-->CProject::ChipProtectBlock(Index=0)
11:33:52-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:52-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:52-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:52-->				cSR=0x2
11:33:52-->boProtectBlock=true
11:33:52-->		!threadProtectBlock  return true
11:33:52-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:52-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:52-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:52-->boStartofOperation=true
11:33:52-->		!threadEnable4ByteAddrMode  return true
11:33:52-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:52-->CProject::ChipEnableQuadIO(Index=0)
11:33:52-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:52-->boEnableQuadIO=true
11:33:52-->		!threadEnableQuadIO  return true
11:33:52-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1a50000,AddrRange.end=0x1a60000,USBIndex=0)
11:33:52-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1a50000,AddrRange.end=0x1a60000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:52-->		bool waitForWEL(USBIndex=0)
11:33:52-->		bool waitForWEL(USBIndex=0) return true;
11:33:52-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:52-->CProject::ChipEnableQuadIO(Index=0)
11:33:52-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:52-->boEnableQuadIO=true
11:33:52-->		!threadEnableQuadIO  return true
11:33:52-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:52-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:52-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:52-->boStartofOperation=true
11:33:52-->		!threadEnable4ByteAddrMode  return true
11:33:52-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:52-->CProject::ChipProtectBlock(Index=0)
11:33:52-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:52-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:52-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:52-->				cSR=0x2
11:33:52-->boProtectBlock=true
11:33:52-->		!threadProtectBlock  return true
11:33:52-->CProject::threadEndOfOperation(Index=0)
11:33:52-->CProject::ChipEndofOperation(USBIndex=0)
11:33:52-->		m_hLibrary[USBIndex=0] is true
11:33:52-->boEndofOperation=true
11:33:52-->		!threadEndOfOperation  return true
11:33:52-->CProject::RangeProgram(AddrRange.start=0x1a60000,AddrRange.end=0x1a70000,USBIndex=0)
11:33:52-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:52-->CProject::ChipStartofOperation(USBIndex=0)
11:33:52-->		m_hLibrary[USBIndex=0] is true
11:33:52-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:52-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:52-->boStartofOperation=true
11:33:52-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:52-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:52-->CProject::ChipProtectBlock(Index=0)
11:33:52-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:52-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:52-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:52-->				cSR=0x2
11:33:52-->boProtectBlock=true
11:33:52-->		!threadProtectBlock  return true
11:33:52-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:52-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:52-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:52-->boStartofOperation=true
11:33:52-->		!threadEnable4ByteAddrMode  return true
11:33:52-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:52-->CProject::ChipEnableQuadIO(Index=0)
11:33:52-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:52-->boEnableQuadIO=true
11:33:52-->		!threadEnableQuadIO  return true
11:33:52-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1a60000,AddrRange.end=0x1a70000,USBIndex=0)
11:33:52-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1a60000,AddrRange.end=0x1a70000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:52-->		bool waitForWEL(USBIndex=0)
11:33:53-->		bool waitForWEL(USBIndex=0) return true;
11:33:53-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:53-->CProject::ChipEnableQuadIO(Index=0)
11:33:53-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:53-->boEnableQuadIO=true
11:33:53-->		!threadEnableQuadIO  return true
11:33:53-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:53-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:53-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:53-->boStartofOperation=true
11:33:53-->		!threadEnable4ByteAddrMode  return true
11:33:53-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:53-->CProject::ChipProtectBlock(Index=0)
11:33:53-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:53-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:53-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:53-->				cSR=0x2
11:33:53-->boProtectBlock=true
11:33:53-->		!threadProtectBlock  return true
11:33:53-->CProject::threadEndOfOperation(Index=0)
11:33:53-->CProject::ChipEndofOperation(USBIndex=0)
11:33:53-->		m_hLibrary[USBIndex=0] is true
11:33:53-->boEndofOperation=true
11:33:53-->		!threadEndOfOperation  return true
11:33:53-->CProject::RangeProgram(AddrRange.start=0x1a70000,AddrRange.end=0x1a80000,USBIndex=0)
11:33:53-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:53-->CProject::ChipStartofOperation(USBIndex=0)
11:33:53-->		m_hLibrary[USBIndex=0] is true
11:33:53-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:53-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:53-->boStartofOperation=true
11:33:53-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:53-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:53-->CProject::ChipProtectBlock(Index=0)
11:33:53-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:53-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:53-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:53-->				cSR=0x2
11:33:53-->boProtectBlock=true
11:33:53-->		!threadProtectBlock  return true
11:33:53-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:53-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:53-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:53-->boStartofOperation=true
11:33:53-->		!threadEnable4ByteAddrMode  return true
11:33:53-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:53-->CProject::ChipEnableQuadIO(Index=0)
11:33:53-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:53-->boEnableQuadIO=true
11:33:53-->		!threadEnableQuadIO  return true
11:33:53-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1a70000,AddrRange.end=0x1a80000,USBIndex=0)
11:33:53-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1a70000,AddrRange.end=0x1a80000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:53-->		bool waitForWEL(USBIndex=0)
11:33:53-->		bool waitForWEL(USBIndex=0) return true;
11:33:53-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:53-->CProject::ChipEnableQuadIO(Index=0)
11:33:53-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:53-->boEnableQuadIO=true
11:33:53-->		!threadEnableQuadIO  return true
11:33:53-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:53-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:53-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:53-->boStartofOperation=true
11:33:53-->		!threadEnable4ByteAddrMode  return true
11:33:53-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:53-->CProject::ChipProtectBlock(Index=0)
11:33:53-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:53-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:53-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:53-->				cSR=0x2
11:33:53-->boProtectBlock=true
11:33:53-->		!threadProtectBlock  return true
11:33:53-->CProject::threadEndOfOperation(Index=0)
11:33:53-->CProject::ChipEndofOperation(USBIndex=0)
11:33:53-->		m_hLibrary[USBIndex=0] is true
11:33:53-->boEndofOperation=true
11:33:53-->		!threadEndOfOperation  return true
11:33:53-->CProject::RangeProgram(AddrRange.start=0x1a80000,AddrRange.end=0x1a90000,USBIndex=0)
11:33:53-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:53-->CProject::ChipStartofOperation(USBIndex=0)
11:33:53-->		m_hLibrary[USBIndex=0] is true
11:33:53-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:53-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:53-->boStartofOperation=true
11:33:53-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:53-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:53-->CProject::ChipProtectBlock(Index=0)
11:33:53-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:53-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:53-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:53-->				cSR=0x2
11:33:53-->boProtectBlock=true
11:33:53-->		!threadProtectBlock  return true
11:33:53-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:53-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:53-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:53-->boStartofOperation=true
11:33:53-->		!threadEnable4ByteAddrMode  return true
11:33:53-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:53-->CProject::ChipEnableQuadIO(Index=0)
11:33:53-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:53-->boEnableQuadIO=true
11:33:53-->		!threadEnableQuadIO  return true
11:33:53-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1a80000,AddrRange.end=0x1a90000,USBIndex=0)
11:33:53-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1a80000,AddrRange.end=0x1a90000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:53-->		bool waitForWEL(USBIndex=0)
11:33:53-->		bool waitForWEL(USBIndex=0) return true;
11:33:53-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:53-->CProject::ChipEnableQuadIO(Index=0)
11:33:53-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:53-->boEnableQuadIO=true
11:33:53-->		!threadEnableQuadIO  return true
11:33:53-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:53-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:53-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:53-->boStartofOperation=true
11:33:53-->		!threadEnable4ByteAddrMode  return true
11:33:53-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:53-->CProject::ChipProtectBlock(Index=0)
11:33:53-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:53-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:53-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:53-->				cSR=0x2
11:33:53-->boProtectBlock=true
11:33:53-->		!threadProtectBlock  return true
11:33:53-->CProject::threadEndOfOperation(Index=0)
11:33:53-->CProject::ChipEndofOperation(USBIndex=0)
11:33:53-->		m_hLibrary[USBIndex=0] is true
11:33:53-->boEndofOperation=true
11:33:53-->		!threadEndOfOperation  return true
11:33:53-->CProject::RangeProgram(AddrRange.start=0x1a90000,AddrRange.end=0x1aa0000,USBIndex=0)
11:33:53-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:53-->CProject::ChipStartofOperation(USBIndex=0)
11:33:53-->		m_hLibrary[USBIndex=0] is true
11:33:53-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:53-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:53-->boStartofOperation=true
11:33:53-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:53-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:53-->CProject::ChipProtectBlock(Index=0)
11:33:53-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:53-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:53-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:53-->				cSR=0x2
11:33:53-->boProtectBlock=true
11:33:53-->		!threadProtectBlock  return true
11:33:53-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:53-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:53-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:53-->boStartofOperation=true
11:33:53-->		!threadEnable4ByteAddrMode  return true
11:33:53-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:53-->CProject::ChipEnableQuadIO(Index=0)
11:33:53-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:53-->boEnableQuadIO=true
11:33:53-->		!threadEnableQuadIO  return true
11:33:53-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1a90000,AddrRange.end=0x1aa0000,USBIndex=0)
11:33:53-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1a90000,AddrRange.end=0x1aa0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:53-->		bool waitForWEL(USBIndex=0)
11:33:54-->		bool waitForWEL(USBIndex=0) return true;
11:33:54-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:54-->CProject::ChipEnableQuadIO(Index=0)
11:33:54-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:54-->boEnableQuadIO=true
11:33:54-->		!threadEnableQuadIO  return true
11:33:54-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:54-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:54-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:54-->boStartofOperation=true
11:33:54-->		!threadEnable4ByteAddrMode  return true
11:33:54-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:54-->CProject::ChipProtectBlock(Index=0)
11:33:54-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:54-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:54-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:54-->				cSR=0x2
11:33:54-->boProtectBlock=true
11:33:54-->		!threadProtectBlock  return true
11:33:54-->CProject::threadEndOfOperation(Index=0)
11:33:54-->CProject::ChipEndofOperation(USBIndex=0)
11:33:54-->		m_hLibrary[USBIndex=0] is true
11:33:54-->boEndofOperation=true
11:33:54-->		!threadEndOfOperation  return true
11:33:54-->CProject::RangeProgram(AddrRange.start=0x1aa0000,AddrRange.end=0x1ab0000,USBIndex=0)
11:33:54-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:54-->CProject::ChipStartofOperation(USBIndex=0)
11:33:54-->		m_hLibrary[USBIndex=0] is true
11:33:54-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:54-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:54-->boStartofOperation=true
11:33:54-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:54-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:54-->CProject::ChipProtectBlock(Index=0)
11:33:54-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:54-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:54-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:54-->				cSR=0x2
11:33:54-->boProtectBlock=true
11:33:54-->		!threadProtectBlock  return true
11:33:54-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:54-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:54-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:54-->boStartofOperation=true
11:33:54-->		!threadEnable4ByteAddrMode  return true
11:33:54-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:54-->CProject::ChipEnableQuadIO(Index=0)
11:33:54-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:54-->boEnableQuadIO=true
11:33:54-->		!threadEnableQuadIO  return true
11:33:54-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1aa0000,AddrRange.end=0x1ab0000,USBIndex=0)
11:33:54-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1aa0000,AddrRange.end=0x1ab0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:54-->		bool waitForWEL(USBIndex=0)
11:33:54-->		bool waitForWEL(USBIndex=0) return true;
11:33:54-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:54-->CProject::ChipEnableQuadIO(Index=0)
11:33:54-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:54-->boEnableQuadIO=true
11:33:54-->		!threadEnableQuadIO  return true
11:33:54-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:54-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:54-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:54-->boStartofOperation=true
11:33:54-->		!threadEnable4ByteAddrMode  return true
11:33:54-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:54-->CProject::ChipProtectBlock(Index=0)
11:33:54-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:54-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:54-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:54-->				cSR=0x2
11:33:54-->boProtectBlock=true
11:33:54-->		!threadProtectBlock  return true
11:33:54-->CProject::threadEndOfOperation(Index=0)
11:33:54-->CProject::ChipEndofOperation(USBIndex=0)
11:33:54-->		m_hLibrary[USBIndex=0] is true
11:33:54-->boEndofOperation=true
11:33:54-->		!threadEndOfOperation  return true
11:33:54-->CProject::RangeProgram(AddrRange.start=0x1ab0000,AddrRange.end=0x1ac0000,USBIndex=0)
11:33:54-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:54-->CProject::ChipStartofOperation(USBIndex=0)
11:33:54-->		m_hLibrary[USBIndex=0] is true
11:33:54-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:54-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:54-->boStartofOperation=true
11:33:54-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:54-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:54-->CProject::ChipProtectBlock(Index=0)
11:33:54-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:54-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:54-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:54-->				cSR=0x2
11:33:54-->boProtectBlock=true
11:33:54-->		!threadProtectBlock  return true
11:33:54-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:54-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:54-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:54-->boStartofOperation=true
11:33:54-->		!threadEnable4ByteAddrMode  return true
11:33:54-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:54-->CProject::ChipEnableQuadIO(Index=0)
11:33:54-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:54-->boEnableQuadIO=true
11:33:54-->		!threadEnableQuadIO  return true
11:33:54-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1ab0000,AddrRange.end=0x1ac0000,USBIndex=0)
11:33:54-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1ab0000,AddrRange.end=0x1ac0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:54-->		bool waitForWEL(USBIndex=0)
11:33:54-->		bool waitForWEL(USBIndex=0) return true;
11:33:54-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:54-->CProject::ChipEnableQuadIO(Index=0)
11:33:54-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:54-->boEnableQuadIO=true
11:33:54-->		!threadEnableQuadIO  return true
11:33:54-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:54-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:54-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:54-->boStartofOperation=true
11:33:54-->		!threadEnable4ByteAddrMode  return true
11:33:54-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:54-->CProject::ChipProtectBlock(Index=0)
11:33:54-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:54-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:54-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:54-->				cSR=0x2
11:33:54-->boProtectBlock=true
11:33:54-->		!threadProtectBlock  return true
11:33:54-->CProject::threadEndOfOperation(Index=0)
11:33:54-->CProject::ChipEndofOperation(USBIndex=0)
11:33:54-->		m_hLibrary[USBIndex=0] is true
11:33:54-->boEndofOperation=true
11:33:54-->		!threadEndOfOperation  return true
11:33:54-->CProject::RangeProgram(AddrRange.start=0x1ac0000,AddrRange.end=0x1ad0000,USBIndex=0)
11:33:54-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:54-->CProject::ChipStartofOperation(USBIndex=0)
11:33:54-->		m_hLibrary[USBIndex=0] is true
11:33:54-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:54-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:54-->boStartofOperation=true
11:33:54-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:54-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:54-->CProject::ChipProtectBlock(Index=0)
11:33:54-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:54-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:54-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:54-->				cSR=0x2
11:33:54-->boProtectBlock=true
11:33:54-->		!threadProtectBlock  return true
11:33:54-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:54-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:54-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:54-->boStartofOperation=true
11:33:54-->		!threadEnable4ByteAddrMode  return true
11:33:54-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:54-->CProject::ChipEnableQuadIO(Index=0)
11:33:54-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:54-->boEnableQuadIO=true
11:33:54-->		!threadEnableQuadIO  return true
11:33:54-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1ac0000,AddrRange.end=0x1ad0000,USBIndex=0)
11:33:54-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1ac0000,AddrRange.end=0x1ad0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:54-->		bool waitForWEL(USBIndex=0)
11:33:55-->		bool waitForWEL(USBIndex=0) return true;
11:33:55-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:55-->CProject::ChipEnableQuadIO(Index=0)
11:33:55-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:55-->boEnableQuadIO=true
11:33:55-->		!threadEnableQuadIO  return true
11:33:55-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:55-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:55-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:55-->boStartofOperation=true
11:33:55-->		!threadEnable4ByteAddrMode  return true
11:33:55-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:55-->CProject::ChipProtectBlock(Index=0)
11:33:55-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:55-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:55-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:55-->				cSR=0x2
11:33:55-->boProtectBlock=true
11:33:55-->		!threadProtectBlock  return true
11:33:55-->CProject::threadEndOfOperation(Index=0)
11:33:55-->CProject::ChipEndofOperation(USBIndex=0)
11:33:55-->		m_hLibrary[USBIndex=0] is true
11:33:55-->boEndofOperation=true
11:33:55-->		!threadEndOfOperation  return true
11:33:55-->CProject::RangeProgram(AddrRange.start=0x1ad0000,AddrRange.end=0x1ae0000,USBIndex=0)
11:33:55-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:55-->CProject::ChipStartofOperation(USBIndex=0)
11:33:55-->		m_hLibrary[USBIndex=0] is true
11:33:55-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:55-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:55-->boStartofOperation=true
11:33:55-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:55-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:55-->CProject::ChipProtectBlock(Index=0)
11:33:55-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:55-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:55-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:55-->				cSR=0x2
11:33:55-->boProtectBlock=true
11:33:55-->		!threadProtectBlock  return true
11:33:55-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:55-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:55-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:55-->boStartofOperation=true
11:33:55-->		!threadEnable4ByteAddrMode  return true
11:33:55-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:55-->CProject::ChipEnableQuadIO(Index=0)
11:33:55-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:55-->boEnableQuadIO=true
11:33:55-->		!threadEnableQuadIO  return true
11:33:55-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1ad0000,AddrRange.end=0x1ae0000,USBIndex=0)
11:33:55-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1ad0000,AddrRange.end=0x1ae0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:55-->		bool waitForWEL(USBIndex=0)
11:33:55-->		bool waitForWEL(USBIndex=0) return true;
11:33:55-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:55-->CProject::ChipEnableQuadIO(Index=0)
11:33:55-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:55-->boEnableQuadIO=true
11:33:55-->		!threadEnableQuadIO  return true
11:33:55-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:55-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:55-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:55-->boStartofOperation=true
11:33:55-->		!threadEnable4ByteAddrMode  return true
11:33:55-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:55-->CProject::ChipProtectBlock(Index=0)
11:33:55-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:55-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:55-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:55-->				cSR=0x2
11:33:55-->boProtectBlock=true
11:33:55-->		!threadProtectBlock  return true
11:33:55-->CProject::threadEndOfOperation(Index=0)
11:33:55-->CProject::ChipEndofOperation(USBIndex=0)
11:33:55-->		m_hLibrary[USBIndex=0] is true
11:33:55-->boEndofOperation=true
11:33:55-->		!threadEndOfOperation  return true
11:33:55-->CProject::RangeProgram(AddrRange.start=0x1ae0000,AddrRange.end=0x1af0000,USBIndex=0)
11:33:55-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:55-->CProject::ChipStartofOperation(USBIndex=0)
11:33:55-->		m_hLibrary[USBIndex=0] is true
11:33:55-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:55-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:55-->boStartofOperation=true
11:33:55-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:55-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:55-->CProject::ChipProtectBlock(Index=0)
11:33:55-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:55-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:55-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:55-->				cSR=0x2
11:33:55-->boProtectBlock=true
11:33:55-->		!threadProtectBlock  return true
11:33:55-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:55-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:55-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:55-->boStartofOperation=true
11:33:55-->		!threadEnable4ByteAddrMode  return true
11:33:55-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:55-->CProject::ChipEnableQuadIO(Index=0)
11:33:55-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:55-->boEnableQuadIO=true
11:33:55-->		!threadEnableQuadIO  return true
11:33:55-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1ae0000,AddrRange.end=0x1af0000,USBIndex=0)
11:33:55-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1ae0000,AddrRange.end=0x1af0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:55-->		bool waitForWEL(USBIndex=0)
11:33:55-->		bool waitForWEL(USBIndex=0) return true;
11:33:55-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:55-->CProject::ChipEnableQuadIO(Index=0)
11:33:55-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:55-->boEnableQuadIO=true
11:33:55-->		!threadEnableQuadIO  return true
11:33:55-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:55-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:55-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:55-->boStartofOperation=true
11:33:55-->		!threadEnable4ByteAddrMode  return true
11:33:55-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:55-->CProject::ChipProtectBlock(Index=0)
11:33:55-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:55-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:55-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:55-->				cSR=0x2
11:33:55-->boProtectBlock=true
11:33:55-->		!threadProtectBlock  return true
11:33:55-->CProject::threadEndOfOperation(Index=0)
11:33:55-->CProject::ChipEndofOperation(USBIndex=0)
11:33:55-->		m_hLibrary[USBIndex=0] is true
11:33:55-->boEndofOperation=true
11:33:55-->		!threadEndOfOperation  return true
11:33:55-->CProject::RangeProgram(AddrRange.start=0x1af0000,AddrRange.end=0x1b00000,USBIndex=0)
11:33:55-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:55-->CProject::ChipStartofOperation(USBIndex=0)
11:33:55-->		m_hLibrary[USBIndex=0] is true
11:33:55-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:55-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:55-->boStartofOperation=true
11:33:55-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:55-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:55-->CProject::ChipProtectBlock(Index=0)
11:33:55-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:55-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:55-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:55-->				cSR=0x2
11:33:55-->boProtectBlock=true
11:33:55-->		!threadProtectBlock  return true
11:33:55-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:55-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:55-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:55-->boStartofOperation=true
11:33:55-->		!threadEnable4ByteAddrMode  return true
11:33:55-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:55-->CProject::ChipEnableQuadIO(Index=0)
11:33:55-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:55-->boEnableQuadIO=true
11:33:55-->		!threadEnableQuadIO  return true
11:33:55-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1af0000,AddrRange.end=0x1b00000,USBIndex=0)
11:33:55-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1af0000,AddrRange.end=0x1b00000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:55-->		bool waitForWEL(USBIndex=0)
11:33:55-->		bool waitForWEL(USBIndex=0) return true;
11:33:56-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:56-->CProject::ChipEnableQuadIO(Index=0)
11:33:56-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:56-->boEnableQuadIO=true
11:33:56-->		!threadEnableQuadIO  return true
11:33:56-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:56-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:56-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:56-->boStartofOperation=true
11:33:56-->		!threadEnable4ByteAddrMode  return true
11:33:56-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:56-->CProject::ChipProtectBlock(Index=0)
11:33:56-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:56-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:56-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:56-->				cSR=0x2
11:33:56-->boProtectBlock=true
11:33:56-->		!threadProtectBlock  return true
11:33:56-->CProject::threadEndOfOperation(Index=0)
11:33:56-->CProject::ChipEndofOperation(USBIndex=0)
11:33:56-->		m_hLibrary[USBIndex=0] is true
11:33:56-->boEndofOperation=true
11:33:56-->		!threadEndOfOperation  return true
11:33:56-->CProject::RangeProgram(AddrRange.start=0x1c10000,AddrRange.end=0x1c20000,USBIndex=0)
11:33:56-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:56-->CProject::ChipStartofOperation(USBIndex=0)
11:33:56-->		m_hLibrary[USBIndex=0] is true
11:33:56-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:56-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:56-->boStartofOperation=true
11:33:56-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:56-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:56-->CProject::ChipProtectBlock(Index=0)
11:33:56-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:56-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:56-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:56-->				cSR=0x2
11:33:56-->boProtectBlock=true
11:33:56-->		!threadProtectBlock  return true
11:33:56-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:56-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:56-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:56-->boStartofOperation=true
11:33:56-->		!threadEnable4ByteAddrMode  return true
11:33:56-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:56-->CProject::ChipEnableQuadIO(Index=0)
11:33:56-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:56-->boEnableQuadIO=true
11:33:56-->		!threadEnableQuadIO  return true
11:33:56-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1c10000,AddrRange.end=0x1c20000,USBIndex=0)
11:33:56-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1c10000,AddrRange.end=0x1c20000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:56-->		bool waitForWEL(USBIndex=0)
11:33:56-->		bool waitForWEL(USBIndex=0) return true;
11:33:56-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:56-->CProject::ChipEnableQuadIO(Index=0)
11:33:56-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:56-->boEnableQuadIO=true
11:33:56-->		!threadEnableQuadIO  return true
11:33:56-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:56-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:56-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:56-->boStartofOperation=true
11:33:56-->		!threadEnable4ByteAddrMode  return true
11:33:56-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:56-->CProject::ChipProtectBlock(Index=0)
11:33:56-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:56-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:56-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:56-->				cSR=0x2
11:33:56-->boProtectBlock=true
11:33:56-->		!threadProtectBlock  return true
11:33:56-->CProject::threadEndOfOperation(Index=0)
11:33:56-->CProject::ChipEndofOperation(USBIndex=0)
11:33:56-->		m_hLibrary[USBIndex=0] is true
11:33:56-->boEndofOperation=true
11:33:56-->		!threadEndOfOperation  return true
11:33:56-->CProject::RangeProgram(AddrRange.start=0x1c20000,AddrRange.end=0x1c30000,USBIndex=0)
11:33:56-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:56-->CProject::ChipStartofOperation(USBIndex=0)
11:33:56-->		m_hLibrary[USBIndex=0] is true
11:33:56-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:56-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:56-->boStartofOperation=true
11:33:56-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:56-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:56-->CProject::ChipProtectBlock(Index=0)
11:33:56-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:56-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:56-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:56-->				cSR=0x2
11:33:56-->boProtectBlock=true
11:33:56-->		!threadProtectBlock  return true
11:33:56-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:56-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:56-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:56-->boStartofOperation=true
11:33:56-->		!threadEnable4ByteAddrMode  return true
11:33:56-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:56-->CProject::ChipEnableQuadIO(Index=0)
11:33:56-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:56-->boEnableQuadIO=true
11:33:56-->		!threadEnableQuadIO  return true
11:33:56-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1c20000,AddrRange.end=0x1c30000,USBIndex=0)
11:33:56-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1c20000,AddrRange.end=0x1c30000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:56-->		bool waitForWEL(USBIndex=0)
11:33:56-->		bool waitForWEL(USBIndex=0) return true;
11:33:56-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:56-->CProject::ChipEnableQuadIO(Index=0)
11:33:56-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:56-->boEnableQuadIO=true
11:33:56-->		!threadEnableQuadIO  return true
11:33:56-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:56-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:56-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:56-->boStartofOperation=true
11:33:56-->		!threadEnable4ByteAddrMode  return true
11:33:56-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:56-->CProject::ChipProtectBlock(Index=0)
11:33:56-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:56-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:56-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:56-->				cSR=0x2
11:33:56-->boProtectBlock=true
11:33:56-->		!threadProtectBlock  return true
11:33:56-->CProject::threadEndOfOperation(Index=0)
11:33:56-->CProject::ChipEndofOperation(USBIndex=0)
11:33:56-->		m_hLibrary[USBIndex=0] is true
11:33:56-->boEndofOperation=true
11:33:56-->		!threadEndOfOperation  return true
11:33:56-->CProject::RangeProgram(AddrRange.start=0x1c30000,AddrRange.end=0x1c40000,USBIndex=0)
11:33:56-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:56-->CProject::ChipStartofOperation(USBIndex=0)
11:33:56-->		m_hLibrary[USBIndex=0] is true
11:33:56-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:56-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:56-->boStartofOperation=true
11:33:56-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:56-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:56-->CProject::ChipProtectBlock(Index=0)
11:33:56-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:56-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:56-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:57-->				cSR=0x2
11:33:57-->boProtectBlock=true
11:33:57-->		!threadProtectBlock  return true
11:33:57-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:57-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:57-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:57-->boStartofOperation=true
11:33:57-->		!threadEnable4ByteAddrMode  return true
11:33:57-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:57-->CProject::ChipEnableQuadIO(Index=0)
11:33:57-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:57-->boEnableQuadIO=true
11:33:57-->		!threadEnableQuadIO  return true
11:33:57-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1c30000,AddrRange.end=0x1c40000,USBIndex=0)
11:33:57-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1c30000,AddrRange.end=0x1c40000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:57-->		bool waitForWEL(USBIndex=0)
11:33:57-->		bool waitForWEL(USBIndex=0) return true;
11:33:57-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:57-->CProject::ChipEnableQuadIO(Index=0)
11:33:57-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:57-->boEnableQuadIO=true
11:33:57-->		!threadEnableQuadIO  return true
11:33:57-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:57-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:57-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:57-->boStartofOperation=true
11:33:57-->		!threadEnable4ByteAddrMode  return true
11:33:57-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:57-->CProject::ChipProtectBlock(Index=0)
11:33:57-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:57-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:57-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:57-->				cSR=0x2
11:33:57-->boProtectBlock=true
11:33:57-->		!threadProtectBlock  return true
11:33:57-->CProject::threadEndOfOperation(Index=0)
11:33:57-->CProject::ChipEndofOperation(USBIndex=0)
11:33:57-->		m_hLibrary[USBIndex=0] is true
11:33:57-->boEndofOperation=true
11:33:57-->		!threadEndOfOperation  return true
11:33:57-->CProject::RangeProgram(AddrRange.start=0x1c40000,AddrRange.end=0x1c50000,USBIndex=0)
11:33:57-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:57-->CProject::ChipStartofOperation(USBIndex=0)
11:33:57-->		m_hLibrary[USBIndex=0] is true
11:33:57-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:57-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:57-->boStartofOperation=true
11:33:57-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:57-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:57-->CProject::ChipProtectBlock(Index=0)
11:33:57-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:57-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:57-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:57-->				cSR=0x2
11:33:57-->boProtectBlock=true
11:33:57-->		!threadProtectBlock  return true
11:33:57-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:57-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:57-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:57-->boStartofOperation=true
11:33:57-->		!threadEnable4ByteAddrMode  return true
11:33:57-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:57-->CProject::ChipEnableQuadIO(Index=0)
11:33:57-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:57-->boEnableQuadIO=true
11:33:57-->		!threadEnableQuadIO  return true
11:33:57-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1c40000,AddrRange.end=0x1c50000,USBIndex=0)
11:33:57-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1c40000,AddrRange.end=0x1c50000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:57-->		bool waitForWEL(USBIndex=0)
11:33:57-->		bool waitForWEL(USBIndex=0) return true;
11:33:57-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:57-->CProject::ChipEnableQuadIO(Index=0)
11:33:57-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:57-->boEnableQuadIO=true
11:33:57-->		!threadEnableQuadIO  return true
11:33:57-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:57-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:57-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:57-->boStartofOperation=true
11:33:57-->		!threadEnable4ByteAddrMode  return true
11:33:57-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:57-->CProject::ChipProtectBlock(Index=0)
11:33:57-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:57-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:57-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:57-->				cSR=0x2
11:33:57-->boProtectBlock=true
11:33:57-->		!threadProtectBlock  return true
11:33:57-->CProject::threadEndOfOperation(Index=0)
11:33:57-->CProject::ChipEndofOperation(USBIndex=0)
11:33:57-->		m_hLibrary[USBIndex=0] is true
11:33:57-->boEndofOperation=true
11:33:57-->		!threadEndOfOperation  return true
11:33:57-->CProject::RangeProgram(AddrRange.start=0x1c50000,AddrRange.end=0x1c60000,USBIndex=0)
11:33:57-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:57-->CProject::ChipStartofOperation(USBIndex=0)
11:33:57-->		m_hLibrary[USBIndex=0] is true
11:33:57-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:57-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:57-->boStartofOperation=true
11:33:57-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:57-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:57-->CProject::ChipProtectBlock(Index=0)
11:33:57-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:57-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:57-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:57-->				cSR=0x2
11:33:57-->boProtectBlock=true
11:33:57-->		!threadProtectBlock  return true
11:33:57-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:57-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:57-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:57-->boStartofOperation=true
11:33:57-->		!threadEnable4ByteAddrMode  return true
11:33:57-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:57-->CProject::ChipEnableQuadIO(Index=0)
11:33:57-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:57-->boEnableQuadIO=true
11:33:57-->		!threadEnableQuadIO  return true
11:33:57-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1c50000,AddrRange.end=0x1c60000,USBIndex=0)
11:33:57-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1c50000,AddrRange.end=0x1c60000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:57-->		bool waitForWEL(USBIndex=0)
11:33:57-->		bool waitForWEL(USBIndex=0) return true;
11:33:58-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:58-->CProject::ChipEnableQuadIO(Index=0)
11:33:58-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:58-->boEnableQuadIO=true
11:33:58-->		!threadEnableQuadIO  return true
11:33:58-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:58-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:58-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:58-->boStartofOperation=true
11:33:58-->		!threadEnable4ByteAddrMode  return true
11:33:58-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:58-->CProject::ChipProtectBlock(Index=0)
11:33:58-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:58-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:58-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:58-->				cSR=0x2
11:33:58-->boProtectBlock=true
11:33:58-->		!threadProtectBlock  return true
11:33:58-->CProject::threadEndOfOperation(Index=0)
11:33:58-->CProject::ChipEndofOperation(USBIndex=0)
11:33:58-->		m_hLibrary[USBIndex=0] is true
11:33:58-->boEndofOperation=true
11:33:58-->		!threadEndOfOperation  return true
11:33:58-->CProject::RangeProgram(AddrRange.start=0x1c60000,AddrRange.end=0x1c70000,USBIndex=0)
11:33:58-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:58-->CProject::ChipStartofOperation(USBIndex=0)
11:33:58-->		m_hLibrary[USBIndex=0] is true
11:33:58-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:58-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:58-->boStartofOperation=true
11:33:58-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:58-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:58-->CProject::ChipProtectBlock(Index=0)
11:33:58-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:58-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:58-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:58-->				cSR=0x2
11:33:58-->boProtectBlock=true
11:33:58-->		!threadProtectBlock  return true
11:33:58-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:58-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:58-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:58-->boStartofOperation=true
11:33:58-->		!threadEnable4ByteAddrMode  return true
11:33:58-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:58-->CProject::ChipEnableQuadIO(Index=0)
11:33:58-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:58-->boEnableQuadIO=true
11:33:58-->		!threadEnableQuadIO  return true
11:33:58-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1c60000,AddrRange.end=0x1c70000,USBIndex=0)
11:33:58-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1c60000,AddrRange.end=0x1c70000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:58-->		bool waitForWEL(USBIndex=0)
11:33:58-->		bool waitForWEL(USBIndex=0) return true;
11:33:58-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:58-->CProject::ChipEnableQuadIO(Index=0)
11:33:58-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:58-->boEnableQuadIO=true
11:33:58-->		!threadEnableQuadIO  return true
11:33:58-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:58-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:58-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:58-->boStartofOperation=true
11:33:58-->		!threadEnable4ByteAddrMode  return true
11:33:58-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:58-->CProject::ChipProtectBlock(Index=0)
11:33:58-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:58-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:58-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:58-->				cSR=0x2
11:33:58-->boProtectBlock=true
11:33:58-->		!threadProtectBlock  return true
11:33:58-->CProject::threadEndOfOperation(Index=0)
11:33:58-->CProject::ChipEndofOperation(USBIndex=0)
11:33:58-->		m_hLibrary[USBIndex=0] is true
11:33:58-->boEndofOperation=true
11:33:58-->		!threadEndOfOperation  return true
11:33:58-->CProject::RangeProgram(AddrRange.start=0x1c70000,AddrRange.end=0x1c80000,USBIndex=0)
11:33:58-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:58-->CProject::ChipStartofOperation(USBIndex=0)
11:33:58-->		m_hLibrary[USBIndex=0] is true
11:33:58-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:58-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:58-->boStartofOperation=true
11:33:58-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:58-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:58-->CProject::ChipProtectBlock(Index=0)
11:33:58-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:58-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:58-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:58-->				cSR=0x2
11:33:58-->boProtectBlock=true
11:33:58-->		!threadProtectBlock  return true
11:33:58-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:58-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:58-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:58-->boStartofOperation=true
11:33:58-->		!threadEnable4ByteAddrMode  return true
11:33:58-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:58-->CProject::ChipEnableQuadIO(Index=0)
11:33:58-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:58-->boEnableQuadIO=true
11:33:58-->		!threadEnableQuadIO  return true
11:33:58-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1c70000,AddrRange.end=0x1c80000,USBIndex=0)
11:33:58-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1c70000,AddrRange.end=0x1c80000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:58-->		bool waitForWEL(USBIndex=0)
11:33:58-->		bool waitForWEL(USBIndex=0) return true;
11:33:58-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:58-->CProject::ChipEnableQuadIO(Index=0)
11:33:58-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:58-->boEnableQuadIO=true
11:33:58-->		!threadEnableQuadIO  return true
11:33:58-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:58-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:58-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:58-->boStartofOperation=true
11:33:58-->		!threadEnable4ByteAddrMode  return true
11:33:58-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:58-->CProject::ChipProtectBlock(Index=0)
11:33:58-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:58-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:58-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:58-->				cSR=0x2
11:33:58-->boProtectBlock=true
11:33:58-->		!threadProtectBlock  return true
11:33:58-->CProject::threadEndOfOperation(Index=0)
11:33:58-->CProject::ChipEndofOperation(USBIndex=0)
11:33:58-->		m_hLibrary[USBIndex=0] is true
11:33:58-->boEndofOperation=true
11:33:58-->		!threadEndOfOperation  return true
11:33:58-->CProject::RangeProgram(AddrRange.start=0x1c80000,AddrRange.end=0x1c90000,USBIndex=0)
11:33:58-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:58-->CProject::ChipStartofOperation(USBIndex=0)
11:33:58-->		m_hLibrary[USBIndex=0] is true
11:33:58-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:58-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:58-->boStartofOperation=true
11:33:58-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:58-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:58-->CProject::ChipProtectBlock(Index=0)
11:33:58-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:58-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:58-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:59-->				cSR=0x2
11:33:59-->boProtectBlock=true
11:33:59-->		!threadProtectBlock  return true
11:33:59-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:59-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:59-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:59-->boStartofOperation=true
11:33:59-->		!threadEnable4ByteAddrMode  return true
11:33:59-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:59-->CProject::ChipEnableQuadIO(Index=0)
11:33:59-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:59-->boEnableQuadIO=true
11:33:59-->		!threadEnableQuadIO  return true
11:33:59-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1c80000,AddrRange.end=0x1c90000,USBIndex=0)
11:33:59-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1c80000,AddrRange.end=0x1c90000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:59-->		bool waitForWEL(USBIndex=0)
11:33:59-->		bool waitForWEL(USBIndex=0) return true;
11:33:59-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:59-->CProject::ChipEnableQuadIO(Index=0)
11:33:59-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:59-->boEnableQuadIO=true
11:33:59-->		!threadEnableQuadIO  return true
11:33:59-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:59-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:59-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:59-->boStartofOperation=true
11:33:59-->		!threadEnable4ByteAddrMode  return true
11:33:59-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:59-->CProject::ChipProtectBlock(Index=0)
11:33:59-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:59-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:59-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:59-->				cSR=0x2
11:33:59-->boProtectBlock=true
11:33:59-->		!threadProtectBlock  return true
11:33:59-->CProject::threadEndOfOperation(Index=0)
11:33:59-->CProject::ChipEndofOperation(USBIndex=0)
11:33:59-->		m_hLibrary[USBIndex=0] is true
11:33:59-->boEndofOperation=true
11:33:59-->		!threadEndOfOperation  return true
11:33:59-->CProject::RangeProgram(AddrRange.start=0x1c90000,AddrRange.end=0x1ca0000,USBIndex=0)
11:33:59-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:59-->CProject::ChipStartofOperation(USBIndex=0)
11:33:59-->		m_hLibrary[USBIndex=0] is true
11:33:59-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:59-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:59-->boStartofOperation=true
11:33:59-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:59-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:59-->CProject::ChipProtectBlock(Index=0)
11:33:59-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:59-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:59-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:59-->				cSR=0x2
11:33:59-->boProtectBlock=true
11:33:59-->		!threadProtectBlock  return true
11:33:59-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:59-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:59-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:59-->boStartofOperation=true
11:33:59-->		!threadEnable4ByteAddrMode  return true
11:33:59-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:59-->CProject::ChipEnableQuadIO(Index=0)
11:33:59-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:59-->boEnableQuadIO=true
11:33:59-->		!threadEnableQuadIO  return true
11:33:59-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1c90000,AddrRange.end=0x1ca0000,USBIndex=0)
11:33:59-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1c90000,AddrRange.end=0x1ca0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:59-->		bool waitForWEL(USBIndex=0)
11:33:59-->		bool waitForWEL(USBIndex=0) return true;
11:33:59-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:59-->CProject::ChipEnableQuadIO(Index=0)
11:33:59-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:59-->boEnableQuadIO=true
11:33:59-->		!threadEnableQuadIO  return true
11:33:59-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:59-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:59-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:59-->boStartofOperation=true
11:33:59-->		!threadEnable4ByteAddrMode  return true
11:33:59-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:59-->CProject::ChipProtectBlock(Index=0)
11:33:59-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:59-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:59-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:59-->				cSR=0x2
11:33:59-->boProtectBlock=true
11:33:59-->		!threadProtectBlock  return true
11:33:59-->CProject::threadEndOfOperation(Index=0)
11:33:59-->CProject::ChipEndofOperation(USBIndex=0)
11:33:59-->		m_hLibrary[USBIndex=0] is true
11:33:59-->boEndofOperation=true
11:33:59-->		!threadEndOfOperation  return true
11:33:59-->CProject::RangeProgram(AddrRange.start=0x1ca0000,AddrRange.end=0x1cb0000,USBIndex=0)
11:33:59-->CProject::threadStartOfOperation(SiteIndex=0)
11:33:59-->CProject::ChipStartofOperation(USBIndex=0)
11:33:59-->		m_hLibrary[USBIndex=0] is true
11:33:59-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:33:59-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:33:59-->boStartofOperation=true
11:33:59-->		!ChipStartofOperation((USBIndex=0)  return true
11:33:59-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:33:59-->CProject::ChipProtectBlock(Index=0)
11:33:59-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:33:59-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:33:59-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:33:59-->				cSR=0x2
11:33:59-->boProtectBlock=true
11:33:59-->		!threadProtectBlock  return true
11:33:59-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:33:59-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:33:59-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:33:59-->boStartofOperation=true
11:33:59-->		!threadEnable4ByteAddrMode  return true
11:33:59-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:33:59-->CProject::ChipEnableQuadIO(Index=0)
11:33:59-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:33:59-->boEnableQuadIO=true
11:33:59-->		!threadEnableQuadIO  return true
11:33:59-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1ca0000,AddrRange.end=0x1cb0000,USBIndex=0)
11:33:59-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1ca0000,AddrRange.end=0x1cb0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:33:59-->		bool waitForWEL(USBIndex=0)
11:33:59-->		bool waitForWEL(USBIndex=0) return true;
11:34:0-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:0-->CProject::ChipEnableQuadIO(Index=0)
11:34:0-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:0-->boEnableQuadIO=true
11:34:0-->		!threadEnableQuadIO  return true
11:34:0-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:0-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:0-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:0-->boStartofOperation=true
11:34:0-->		!threadEnable4ByteAddrMode  return true
11:34:0-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:0-->CProject::ChipProtectBlock(Index=0)
11:34:0-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:0-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:0-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:0-->				cSR=0x2
11:34:0-->boProtectBlock=true
11:34:0-->		!threadProtectBlock  return true
11:34:0-->CProject::threadEndOfOperation(Index=0)
11:34:0-->CProject::ChipEndofOperation(USBIndex=0)
11:34:0-->		m_hLibrary[USBIndex=0] is true
11:34:0-->boEndofOperation=true
11:34:0-->		!threadEndOfOperation  return true
11:34:0-->CProject::RangeProgram(AddrRange.start=0x1cb0000,AddrRange.end=0x1cc0000,USBIndex=0)
11:34:0-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:0-->CProject::ChipStartofOperation(USBIndex=0)
11:34:0-->		m_hLibrary[USBIndex=0] is true
11:34:0-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:0-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:0-->boStartofOperation=true
11:34:0-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:0-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:0-->CProject::ChipProtectBlock(Index=0)
11:34:0-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:0-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:0-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:0-->				cSR=0x2
11:34:0-->boProtectBlock=true
11:34:0-->		!threadProtectBlock  return true
11:34:0-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:0-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:0-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:0-->boStartofOperation=true
11:34:0-->		!threadEnable4ByteAddrMode  return true
11:34:0-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:0-->CProject::ChipEnableQuadIO(Index=0)
11:34:0-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:0-->boEnableQuadIO=true
11:34:0-->		!threadEnableQuadIO  return true
11:34:0-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1cb0000,AddrRange.end=0x1cc0000,USBIndex=0)
11:34:0-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1cb0000,AddrRange.end=0x1cc0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:0-->		bool waitForWEL(USBIndex=0)
11:34:0-->		bool waitForWEL(USBIndex=0) return true;
11:34:0-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:0-->CProject::ChipEnableQuadIO(Index=0)
11:34:0-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:0-->boEnableQuadIO=true
11:34:0-->		!threadEnableQuadIO  return true
11:34:0-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:0-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:0-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:0-->boStartofOperation=true
11:34:0-->		!threadEnable4ByteAddrMode  return true
11:34:0-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:0-->CProject::ChipProtectBlock(Index=0)
11:34:0-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:0-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:0-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:0-->				cSR=0x2
11:34:0-->boProtectBlock=true
11:34:0-->		!threadProtectBlock  return true
11:34:0-->CProject::threadEndOfOperation(Index=0)
11:34:0-->CProject::ChipEndofOperation(USBIndex=0)
11:34:0-->		m_hLibrary[USBIndex=0] is true
11:34:0-->boEndofOperation=true
11:34:0-->		!threadEndOfOperation  return true
11:34:0-->CProject::RangeProgram(AddrRange.start=0x1d50000,AddrRange.end=0x1d60000,USBIndex=0)
11:34:0-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:0-->CProject::ChipStartofOperation(USBIndex=0)
11:34:0-->		m_hLibrary[USBIndex=0] is true
11:34:0-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:0-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:0-->boStartofOperation=true
11:34:0-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:0-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:0-->CProject::ChipProtectBlock(Index=0)
11:34:0-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:0-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:0-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:0-->				cSR=0x2
11:34:0-->boProtectBlock=true
11:34:0-->		!threadProtectBlock  return true
11:34:0-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:0-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:0-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:0-->boStartofOperation=true
11:34:0-->		!threadEnable4ByteAddrMode  return true
11:34:0-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:0-->CProject::ChipEnableQuadIO(Index=0)
11:34:0-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:0-->boEnableQuadIO=true
11:34:0-->		!threadEnableQuadIO  return true
11:34:0-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1d50000,AddrRange.end=0x1d60000,USBIndex=0)
11:34:0-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1d50000,AddrRange.end=0x1d60000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:0-->		bool waitForWEL(USBIndex=0)
11:34:0-->		bool waitForWEL(USBIndex=0) return true;
11:34:0-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:0-->CProject::ChipEnableQuadIO(Index=0)
11:34:0-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:0-->boEnableQuadIO=true
11:34:0-->		!threadEnableQuadIO  return true
11:34:0-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:0-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:0-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:0-->boStartofOperation=true
11:34:0-->		!threadEnable4ByteAddrMode  return true
11:34:0-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:0-->CProject::ChipProtectBlock(Index=0)
11:34:0-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:0-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:0-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:0-->				cSR=0x2
11:34:0-->boProtectBlock=true
11:34:0-->		!threadProtectBlock  return true
11:34:0-->CProject::threadEndOfOperation(Index=0)
11:34:0-->CProject::ChipEndofOperation(USBIndex=0)
11:34:0-->		m_hLibrary[USBIndex=0] is true
11:34:0-->boEndofOperation=true
11:34:0-->		!threadEndOfOperation  return true
11:34:0-->CProject::RangeProgram(AddrRange.start=0x1d60000,AddrRange.end=0x1d70000,USBIndex=0)
11:34:0-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:0-->CProject::ChipStartofOperation(USBIndex=0)
11:34:0-->		m_hLibrary[USBIndex=0] is true
11:34:0-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:0-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:0-->boStartofOperation=true
11:34:0-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:0-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:0-->CProject::ChipProtectBlock(Index=0)
11:34:0-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:0-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:0-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:0-->				cSR=0x2
11:34:0-->boProtectBlock=true
11:34:0-->		!threadProtectBlock  return true
11:34:0-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:0-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:0-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:0-->boStartofOperation=true
11:34:0-->		!threadEnable4ByteAddrMode  return true
11:34:0-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:0-->CProject::ChipEnableQuadIO(Index=0)
11:34:0-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:0-->boEnableQuadIO=true
11:34:0-->		!threadEnableQuadIO  return true
11:34:0-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1d60000,AddrRange.end=0x1d70000,USBIndex=0)
11:34:0-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1d60000,AddrRange.end=0x1d70000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:0-->		bool waitForWEL(USBIndex=0)
11:34:1-->		bool waitForWEL(USBIndex=0) return true;
11:34:1-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:1-->CProject::ChipEnableQuadIO(Index=0)
11:34:1-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:1-->boEnableQuadIO=true
11:34:1-->		!threadEnableQuadIO  return true
11:34:1-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:1-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:1-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:1-->boStartofOperation=true
11:34:1-->		!threadEnable4ByteAddrMode  return true
11:34:1-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:1-->CProject::ChipProtectBlock(Index=0)
11:34:1-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:1-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:1-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:1-->				cSR=0x2
11:34:1-->boProtectBlock=true
11:34:1-->		!threadProtectBlock  return true
11:34:1-->CProject::threadEndOfOperation(Index=0)
11:34:1-->CProject::ChipEndofOperation(USBIndex=0)
11:34:1-->		m_hLibrary[USBIndex=0] is true
11:34:1-->boEndofOperation=true
11:34:1-->		!threadEndOfOperation  return true
11:34:1-->CProject::RangeProgram(AddrRange.start=0x1d70000,AddrRange.end=0x1d80000,USBIndex=0)
11:34:1-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:1-->CProject::ChipStartofOperation(USBIndex=0)
11:34:1-->		m_hLibrary[USBIndex=0] is true
11:34:1-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:1-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:1-->boStartofOperation=true
11:34:1-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:1-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:1-->CProject::ChipProtectBlock(Index=0)
11:34:1-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:1-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:1-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:1-->				cSR=0x2
11:34:1-->boProtectBlock=true
11:34:1-->		!threadProtectBlock  return true
11:34:1-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:1-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:1-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:1-->boStartofOperation=true
11:34:1-->		!threadEnable4ByteAddrMode  return true
11:34:1-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:1-->CProject::ChipEnableQuadIO(Index=0)
11:34:1-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:1-->boEnableQuadIO=true
11:34:1-->		!threadEnableQuadIO  return true
11:34:1-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1d70000,AddrRange.end=0x1d80000,USBIndex=0)
11:34:1-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1d70000,AddrRange.end=0x1d80000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:1-->		bool waitForWEL(USBIndex=0)
11:34:1-->		bool waitForWEL(USBIndex=0) return true;
11:34:1-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:1-->CProject::ChipEnableQuadIO(Index=0)
11:34:1-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:1-->boEnableQuadIO=true
11:34:1-->		!threadEnableQuadIO  return true
11:34:1-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:1-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:1-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:1-->boStartofOperation=true
11:34:1-->		!threadEnable4ByteAddrMode  return true
11:34:1-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:1-->CProject::ChipProtectBlock(Index=0)
11:34:1-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:1-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:1-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:1-->				cSR=0x2
11:34:1-->boProtectBlock=true
11:34:1-->		!threadProtectBlock  return true
11:34:1-->CProject::threadEndOfOperation(Index=0)
11:34:1-->CProject::ChipEndofOperation(USBIndex=0)
11:34:1-->		m_hLibrary[USBIndex=0] is true
11:34:1-->boEndofOperation=true
11:34:1-->		!threadEndOfOperation  return true
11:34:1-->CProject::RangeProgram(AddrRange.start=0x1d80000,AddrRange.end=0x1d90000,USBIndex=0)
11:34:1-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:1-->CProject::ChipStartofOperation(USBIndex=0)
11:34:1-->		m_hLibrary[USBIndex=0] is true
11:34:1-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:1-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:1-->boStartofOperation=true
11:34:1-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:1-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:1-->CProject::ChipProtectBlock(Index=0)
11:34:1-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:1-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:1-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:1-->				cSR=0x2
11:34:1-->boProtectBlock=true
11:34:1-->		!threadProtectBlock  return true
11:34:1-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:1-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:1-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:1-->boStartofOperation=true
11:34:1-->		!threadEnable4ByteAddrMode  return true
11:34:1-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:1-->CProject::ChipEnableQuadIO(Index=0)
11:34:1-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:1-->boEnableQuadIO=true
11:34:1-->		!threadEnableQuadIO  return true
11:34:1-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1d80000,AddrRange.end=0x1d90000,USBIndex=0)
11:34:1-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1d80000,AddrRange.end=0x1d90000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:1-->		bool waitForWEL(USBIndex=0)
11:34:1-->		bool waitForWEL(USBIndex=0) return true;
11:34:1-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:1-->CProject::ChipEnableQuadIO(Index=0)
11:34:1-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:1-->boEnableQuadIO=true
11:34:1-->		!threadEnableQuadIO  return true
11:34:1-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:1-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:1-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:1-->boStartofOperation=true
11:34:1-->		!threadEnable4ByteAddrMode  return true
11:34:1-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:1-->CProject::ChipProtectBlock(Index=0)
11:34:1-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:1-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:1-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:2-->				cSR=0x2
11:34:2-->boProtectBlock=true
11:34:2-->		!threadProtectBlock  return true
11:34:2-->CProject::threadEndOfOperation(Index=0)
11:34:2-->CProject::ChipEndofOperation(USBIndex=0)
11:34:2-->		m_hLibrary[USBIndex=0] is true
11:34:2-->boEndofOperation=true
11:34:2-->		!threadEndOfOperation  return true
11:34:2-->CProject::RangeProgram(AddrRange.start=0x1d90000,AddrRange.end=0x1da0000,USBIndex=0)
11:34:2-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:2-->CProject::ChipStartofOperation(USBIndex=0)
11:34:2-->		m_hLibrary[USBIndex=0] is true
11:34:2-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:2-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:2-->boStartofOperation=true
11:34:2-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:2-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:2-->CProject::ChipProtectBlock(Index=0)
11:34:2-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:2-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:2-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:2-->				cSR=0x2
11:34:2-->boProtectBlock=true
11:34:2-->		!threadProtectBlock  return true
11:34:2-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:2-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:2-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:2-->boStartofOperation=true
11:34:2-->		!threadEnable4ByteAddrMode  return true
11:34:2-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:2-->CProject::ChipEnableQuadIO(Index=0)
11:34:2-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:2-->boEnableQuadIO=true
11:34:2-->		!threadEnableQuadIO  return true
11:34:2-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1d90000,AddrRange.end=0x1da0000,USBIndex=0)
11:34:2-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1d90000,AddrRange.end=0x1da0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:2-->		bool waitForWEL(USBIndex=0)
11:34:2-->		bool waitForWEL(USBIndex=0) return true;
11:34:2-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:2-->CProject::ChipEnableQuadIO(Index=0)
11:34:2-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:2-->boEnableQuadIO=true
11:34:2-->		!threadEnableQuadIO  return true
11:34:2-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:2-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:2-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:2-->boStartofOperation=true
11:34:2-->		!threadEnable4ByteAddrMode  return true
11:34:2-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:2-->CProject::ChipProtectBlock(Index=0)
11:34:2-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:2-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:2-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:2-->				cSR=0x2
11:34:2-->boProtectBlock=true
11:34:2-->		!threadProtectBlock  return true
11:34:2-->CProject::threadEndOfOperation(Index=0)
11:34:2-->CProject::ChipEndofOperation(USBIndex=0)
11:34:2-->		m_hLibrary[USBIndex=0] is true
11:34:2-->boEndofOperation=true
11:34:2-->		!threadEndOfOperation  return true
11:34:2-->CProject::RangeProgram(AddrRange.start=0x1da0000,AddrRange.end=0x1db0000,USBIndex=0)
11:34:2-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:2-->CProject::ChipStartofOperation(USBIndex=0)
11:34:2-->		m_hLibrary[USBIndex=0] is true
11:34:2-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:2-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:2-->boStartofOperation=true
11:34:2-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:2-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:2-->CProject::ChipProtectBlock(Index=0)
11:34:2-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:2-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:2-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:2-->				cSR=0x2
11:34:2-->boProtectBlock=true
11:34:2-->		!threadProtectBlock  return true
11:34:2-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:2-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:2-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:2-->boStartofOperation=true
11:34:2-->		!threadEnable4ByteAddrMode  return true
11:34:2-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:2-->CProject::ChipEnableQuadIO(Index=0)
11:34:2-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:2-->boEnableQuadIO=true
11:34:2-->		!threadEnableQuadIO  return true
11:34:2-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1da0000,AddrRange.end=0x1db0000,USBIndex=0)
11:34:2-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1da0000,AddrRange.end=0x1db0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:2-->		bool waitForWEL(USBIndex=0)
11:34:2-->		bool waitForWEL(USBIndex=0) return true;
11:34:2-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:2-->CProject::ChipEnableQuadIO(Index=0)
11:34:2-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:2-->boEnableQuadIO=true
11:34:2-->		!threadEnableQuadIO  return true
11:34:2-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:2-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:2-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:2-->boStartofOperation=true
11:34:2-->		!threadEnable4ByteAddrMode  return true
11:34:2-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:2-->CProject::ChipProtectBlock(Index=0)
11:34:2-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:2-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:2-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:2-->				cSR=0x2
11:34:2-->boProtectBlock=true
11:34:2-->		!threadProtectBlock  return true
11:34:2-->CProject::threadEndOfOperation(Index=0)
11:34:2-->CProject::ChipEndofOperation(USBIndex=0)
11:34:2-->		m_hLibrary[USBIndex=0] is true
11:34:2-->boEndofOperation=true
11:34:2-->		!threadEndOfOperation  return true
11:34:2-->CProject::RangeProgram(AddrRange.start=0x1db0000,AddrRange.end=0x1dc0000,USBIndex=0)
11:34:2-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:2-->CProject::ChipStartofOperation(USBIndex=0)
11:34:2-->		m_hLibrary[USBIndex=0] is true
11:34:2-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:2-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:2-->boStartofOperation=true
11:34:2-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:2-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:2-->CProject::ChipProtectBlock(Index=0)
11:34:2-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:2-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:2-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:2-->				cSR=0x2
11:34:2-->boProtectBlock=true
11:34:2-->		!threadProtectBlock  return true
11:34:2-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:2-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:2-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:2-->boStartofOperation=true
11:34:2-->		!threadEnable4ByteAddrMode  return true
11:34:2-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:2-->CProject::ChipEnableQuadIO(Index=0)
11:34:2-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:2-->boEnableQuadIO=true
11:34:2-->		!threadEnableQuadIO  return true
11:34:2-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1db0000,AddrRange.end=0x1dc0000,USBIndex=0)
11:34:2-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1db0000,AddrRange.end=0x1dc0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:2-->		bool waitForWEL(USBIndex=0)
11:34:2-->		bool waitForWEL(USBIndex=0) return true;
11:34:3-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:3-->CProject::ChipEnableQuadIO(Index=0)
11:34:3-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:3-->boEnableQuadIO=true
11:34:3-->		!threadEnableQuadIO  return true
11:34:3-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:3-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:3-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:3-->boStartofOperation=true
11:34:3-->		!threadEnable4ByteAddrMode  return true
11:34:3-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:3-->CProject::ChipProtectBlock(Index=0)
11:34:3-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:3-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:3-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:3-->				cSR=0x2
11:34:3-->boProtectBlock=true
11:34:3-->		!threadProtectBlock  return true
11:34:3-->CProject::threadEndOfOperation(Index=0)
11:34:3-->CProject::ChipEndofOperation(USBIndex=0)
11:34:3-->		m_hLibrary[USBIndex=0] is true
11:34:3-->boEndofOperation=true
11:34:3-->		!threadEndOfOperation  return true
11:34:3-->CProject::RangeProgram(AddrRange.start=0x1dc0000,AddrRange.end=0x1dd0000,USBIndex=0)
11:34:3-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:3-->CProject::ChipStartofOperation(USBIndex=0)
11:34:3-->		m_hLibrary[USBIndex=0] is true
11:34:3-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:3-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:3-->boStartofOperation=true
11:34:3-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:3-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:3-->CProject::ChipProtectBlock(Index=0)
11:34:3-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:3-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:3-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:3-->				cSR=0x2
11:34:3-->boProtectBlock=true
11:34:3-->		!threadProtectBlock  return true
11:34:3-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:3-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:3-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:3-->boStartofOperation=true
11:34:3-->		!threadEnable4ByteAddrMode  return true
11:34:3-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:3-->CProject::ChipEnableQuadIO(Index=0)
11:34:3-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:3-->boEnableQuadIO=true
11:34:3-->		!threadEnableQuadIO  return true
11:34:3-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1dc0000,AddrRange.end=0x1dd0000,USBIndex=0)
11:34:3-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1dc0000,AddrRange.end=0x1dd0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:3-->		bool waitForWEL(USBIndex=0)
11:34:3-->		bool waitForWEL(USBIndex=0) return true;
11:34:3-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:3-->CProject::ChipEnableQuadIO(Index=0)
11:34:3-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:3-->boEnableQuadIO=true
11:34:3-->		!threadEnableQuadIO  return true
11:34:3-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:3-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:3-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:3-->boStartofOperation=true
11:34:3-->		!threadEnable4ByteAddrMode  return true
11:34:3-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:3-->CProject::ChipProtectBlock(Index=0)
11:34:3-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:3-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:3-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:3-->				cSR=0x2
11:34:3-->boProtectBlock=true
11:34:3-->		!threadProtectBlock  return true
11:34:3-->CProject::threadEndOfOperation(Index=0)
11:34:3-->CProject::ChipEndofOperation(USBIndex=0)
11:34:3-->		m_hLibrary[USBIndex=0] is true
11:34:3-->boEndofOperation=true
11:34:3-->		!threadEndOfOperation  return true
11:34:3-->CProject::RangeProgram(AddrRange.start=0x1dd0000,AddrRange.end=0x1de0000,USBIndex=0)
11:34:3-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:3-->CProject::ChipStartofOperation(USBIndex=0)
11:34:3-->		m_hLibrary[USBIndex=0] is true
11:34:3-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:3-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:3-->boStartofOperation=true
11:34:3-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:3-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:3-->CProject::ChipProtectBlock(Index=0)
11:34:3-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:3-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:3-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:3-->				cSR=0x2
11:34:3-->boProtectBlock=true
11:34:3-->		!threadProtectBlock  return true
11:34:3-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:3-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:3-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:3-->boStartofOperation=true
11:34:3-->		!threadEnable4ByteAddrMode  return true
11:34:3-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:3-->CProject::ChipEnableQuadIO(Index=0)
11:34:3-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:3-->boEnableQuadIO=true
11:34:3-->		!threadEnableQuadIO  return true
11:34:3-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1dd0000,AddrRange.end=0x1de0000,USBIndex=0)
11:34:3-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1dd0000,AddrRange.end=0x1de0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:3-->		bool waitForWEL(USBIndex=0)
11:34:3-->		bool waitForWEL(USBIndex=0) return true;
11:34:3-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:3-->CProject::ChipEnableQuadIO(Index=0)
11:34:3-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:3-->boEnableQuadIO=true
11:34:3-->		!threadEnableQuadIO  return true
11:34:3-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:3-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:3-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:3-->boStartofOperation=true
11:34:3-->		!threadEnable4ByteAddrMode  return true
11:34:3-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:3-->CProject::ChipProtectBlock(Index=0)
11:34:3-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:3-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:3-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:3-->				cSR=0x2
11:34:3-->boProtectBlock=true
11:34:3-->		!threadProtectBlock  return true
11:34:3-->CProject::threadEndOfOperation(Index=0)
11:34:3-->CProject::ChipEndofOperation(USBIndex=0)
11:34:3-->		m_hLibrary[USBIndex=0] is true
11:34:3-->boEndofOperation=true
11:34:3-->		!threadEndOfOperation  return true
11:34:3-->CProject::RangeProgram(AddrRange.start=0x1de0000,AddrRange.end=0x1df0000,USBIndex=0)
11:34:3-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:3-->CProject::ChipStartofOperation(USBIndex=0)
11:34:3-->		m_hLibrary[USBIndex=0] is true
11:34:3-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:3-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:3-->boStartofOperation=true
11:34:3-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:3-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:3-->CProject::ChipProtectBlock(Index=0)
11:34:3-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:3-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:3-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:3-->				cSR=0x2
11:34:3-->boProtectBlock=true
11:34:3-->		!threadProtectBlock  return true
11:34:3-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:3-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:3-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:3-->boStartofOperation=true
11:34:3-->		!threadEnable4ByteAddrMode  return true
11:34:3-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:3-->CProject::ChipEnableQuadIO(Index=0)
11:34:3-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:3-->boEnableQuadIO=true
11:34:3-->		!threadEnableQuadIO  return true
11:34:3-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1de0000,AddrRange.end=0x1df0000,USBIndex=0)
11:34:3-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1de0000,AddrRange.end=0x1df0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:3-->		bool waitForWEL(USBIndex=0)
11:34:3-->		bool waitForWEL(USBIndex=0) return true;
11:34:4-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:4-->CProject::ChipEnableQuadIO(Index=0)
11:34:4-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:4-->boEnableQuadIO=true
11:34:4-->		!threadEnableQuadIO  return true
11:34:4-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:4-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:4-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:4-->boStartofOperation=true
11:34:4-->		!threadEnable4ByteAddrMode  return true
11:34:4-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:4-->CProject::ChipProtectBlock(Index=0)
11:34:4-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:4-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:4-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:4-->				cSR=0x2
11:34:4-->boProtectBlock=true
11:34:4-->		!threadProtectBlock  return true
11:34:4-->CProject::threadEndOfOperation(Index=0)
11:34:4-->CProject::ChipEndofOperation(USBIndex=0)
11:34:4-->		m_hLibrary[USBIndex=0] is true
11:34:4-->boEndofOperation=true
11:34:4-->		!threadEndOfOperation  return true
11:34:4-->CProject::RangeProgram(AddrRange.start=0x1df0000,AddrRange.end=0x1e00000,USBIndex=0)
11:34:4-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:4-->CProject::ChipStartofOperation(USBIndex=0)
11:34:4-->		m_hLibrary[USBIndex=0] is true
11:34:4-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:4-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:4-->boStartofOperation=true
11:34:4-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:4-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:4-->CProject::ChipProtectBlock(Index=0)
11:34:4-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:4-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:4-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:4-->				cSR=0x2
11:34:4-->boProtectBlock=true
11:34:4-->		!threadProtectBlock  return true
11:34:4-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:4-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:4-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:4-->boStartofOperation=true
11:34:4-->		!threadEnable4ByteAddrMode  return true
11:34:4-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:4-->CProject::ChipEnableQuadIO(Index=0)
11:34:4-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:4-->boEnableQuadIO=true
11:34:4-->		!threadEnableQuadIO  return true
11:34:4-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1df0000,AddrRange.end=0x1e00000,USBIndex=0)
11:34:4-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1df0000,AddrRange.end=0x1e00000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:4-->		bool waitForWEL(USBIndex=0)
11:34:4-->		bool waitForWEL(USBIndex=0) return true;
11:34:4-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:4-->CProject::ChipEnableQuadIO(Index=0)
11:34:4-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:4-->boEnableQuadIO=true
11:34:4-->		!threadEnableQuadIO  return true
11:34:4-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:4-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:4-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:4-->boStartofOperation=true
11:34:4-->		!threadEnable4ByteAddrMode  return true
11:34:4-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:4-->CProject::ChipProtectBlock(Index=0)
11:34:4-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:4-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:4-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:4-->				cSR=0x2
11:34:4-->boProtectBlock=true
11:34:4-->		!threadProtectBlock  return true
11:34:4-->CProject::threadEndOfOperation(Index=0)
11:34:4-->CProject::ChipEndofOperation(USBIndex=0)
11:34:4-->		m_hLibrary[USBIndex=0] is true
11:34:4-->boEndofOperation=true
11:34:4-->		!threadEndOfOperation  return true
11:34:4-->CProject::RangeProgram(AddrRange.start=0x1e00000,AddrRange.end=0x1e10000,USBIndex=0)
11:34:4-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:4-->CProject::ChipStartofOperation(USBIndex=0)
11:34:4-->		m_hLibrary[USBIndex=0] is true
11:34:4-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:4-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:4-->boStartofOperation=true
11:34:4-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:4-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:4-->CProject::ChipProtectBlock(Index=0)
11:34:4-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:4-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:4-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:4-->				cSR=0x2
11:34:4-->boProtectBlock=true
11:34:4-->		!threadProtectBlock  return true
11:34:4-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:4-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:4-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:4-->boStartofOperation=true
11:34:4-->		!threadEnable4ByteAddrMode  return true
11:34:4-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:4-->CProject::ChipEnableQuadIO(Index=0)
11:34:4-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:4-->boEnableQuadIO=true
11:34:4-->		!threadEnableQuadIO  return true
11:34:4-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1e00000,AddrRange.end=0x1e10000,USBIndex=0)
11:34:4-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1e00000,AddrRange.end=0x1e10000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:4-->		bool waitForWEL(USBIndex=0)
11:34:4-->		bool waitForWEL(USBIndex=0) return true;
11:34:4-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:4-->CProject::ChipEnableQuadIO(Index=0)
11:34:4-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:4-->boEnableQuadIO=true
11:34:4-->		!threadEnableQuadIO  return true
11:34:4-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:4-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:4-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:4-->boStartofOperation=true
11:34:4-->		!threadEnable4ByteAddrMode  return true
11:34:4-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:4-->CProject::ChipProtectBlock(Index=0)
11:34:4-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:4-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:4-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:4-->				cSR=0x2
11:34:4-->boProtectBlock=true
11:34:4-->		!threadProtectBlock  return true
11:34:4-->CProject::threadEndOfOperation(Index=0)
11:34:4-->CProject::ChipEndofOperation(USBIndex=0)
11:34:4-->		m_hLibrary[USBIndex=0] is true
11:34:4-->boEndofOperation=true
11:34:4-->		!threadEndOfOperation  return true
11:34:4-->CProject::RangeProgram(AddrRange.start=0x1e10000,AddrRange.end=0x1e20000,USBIndex=0)
11:34:4-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:4-->CProject::ChipStartofOperation(USBIndex=0)
11:34:4-->		m_hLibrary[USBIndex=0] is true
11:34:4-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:4-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:4-->boStartofOperation=true
11:34:4-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:4-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:4-->CProject::ChipProtectBlock(Index=0)
11:34:4-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:4-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:4-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:4-->				cSR=0x2
11:34:4-->boProtectBlock=true
11:34:4-->		!threadProtectBlock  return true
11:34:4-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:4-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:4-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:4-->boStartofOperation=true
11:34:4-->		!threadEnable4ByteAddrMode  return true
11:34:4-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:4-->CProject::ChipEnableQuadIO(Index=0)
11:34:4-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:4-->boEnableQuadIO=true
11:34:4-->		!threadEnableQuadIO  return true
11:34:4-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1e10000,AddrRange.end=0x1e20000,USBIndex=0)
11:34:4-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1e10000,AddrRange.end=0x1e20000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:4-->		bool waitForWEL(USBIndex=0)
11:34:4-->		bool waitForWEL(USBIndex=0) return true;
11:34:5-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:5-->CProject::ChipEnableQuadIO(Index=0)
11:34:5-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:5-->boEnableQuadIO=true
11:34:5-->		!threadEnableQuadIO  return true
11:34:5-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:5-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:5-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:5-->boStartofOperation=true
11:34:5-->		!threadEnable4ByteAddrMode  return true
11:34:5-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:5-->CProject::ChipProtectBlock(Index=0)
11:34:5-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:5-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:5-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:5-->				cSR=0x2
11:34:5-->boProtectBlock=true
11:34:5-->		!threadProtectBlock  return true
11:34:5-->CProject::threadEndOfOperation(Index=0)
11:34:5-->CProject::ChipEndofOperation(USBIndex=0)
11:34:5-->		m_hLibrary[USBIndex=0] is true
11:34:5-->boEndofOperation=true
11:34:5-->		!threadEndOfOperation  return true
11:34:5-->CProject::RangeProgram(AddrRange.start=0x1e20000,AddrRange.end=0x1e30000,USBIndex=0)
11:34:5-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:5-->CProject::ChipStartofOperation(USBIndex=0)
11:34:5-->		m_hLibrary[USBIndex=0] is true
11:34:5-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:5-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:5-->boStartofOperation=true
11:34:5-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:5-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:5-->CProject::ChipProtectBlock(Index=0)
11:34:5-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:5-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:5-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:5-->				cSR=0x2
11:34:5-->boProtectBlock=true
11:34:5-->		!threadProtectBlock  return true
11:34:5-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:5-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:5-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:5-->boStartofOperation=true
11:34:5-->		!threadEnable4ByteAddrMode  return true
11:34:5-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:5-->CProject::ChipEnableQuadIO(Index=0)
11:34:5-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:5-->boEnableQuadIO=true
11:34:5-->		!threadEnableQuadIO  return true
11:34:5-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1e20000,AddrRange.end=0x1e30000,USBIndex=0)
11:34:5-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1e20000,AddrRange.end=0x1e30000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:5-->		bool waitForWEL(USBIndex=0)
11:34:5-->		bool waitForWEL(USBIndex=0) return true;
11:34:5-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:5-->CProject::ChipEnableQuadIO(Index=0)
11:34:5-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:5-->boEnableQuadIO=true
11:34:5-->		!threadEnableQuadIO  return true
11:34:5-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:5-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:5-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:5-->boStartofOperation=true
11:34:5-->		!threadEnable4ByteAddrMode  return true
11:34:5-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:5-->CProject::ChipProtectBlock(Index=0)
11:34:5-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:5-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:5-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:5-->				cSR=0x2
11:34:5-->boProtectBlock=true
11:34:5-->		!threadProtectBlock  return true
11:34:5-->CProject::threadEndOfOperation(Index=0)
11:34:5-->CProject::ChipEndofOperation(USBIndex=0)
11:34:5-->		m_hLibrary[USBIndex=0] is true
11:34:5-->boEndofOperation=true
11:34:5-->		!threadEndOfOperation  return true
11:34:5-->CProject::RangeProgram(AddrRange.start=0x1e30000,AddrRange.end=0x1e40000,USBIndex=0)
11:34:5-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:5-->CProject::ChipStartofOperation(USBIndex=0)
11:34:5-->		m_hLibrary[USBIndex=0] is true
11:34:5-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:5-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:5-->boStartofOperation=true
11:34:5-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:5-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:5-->CProject::ChipProtectBlock(Index=0)
11:34:5-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:5-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:5-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:5-->				cSR=0x2
11:34:5-->boProtectBlock=true
11:34:5-->		!threadProtectBlock  return true
11:34:5-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:5-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:5-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:5-->boStartofOperation=true
11:34:5-->		!threadEnable4ByteAddrMode  return true
11:34:5-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:5-->CProject::ChipEnableQuadIO(Index=0)
11:34:5-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:5-->boEnableQuadIO=true
11:34:5-->		!threadEnableQuadIO  return true
11:34:5-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1e30000,AddrRange.end=0x1e40000,USBIndex=0)
11:34:5-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1e30000,AddrRange.end=0x1e40000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:5-->		bool waitForWEL(USBIndex=0)
11:34:5-->		bool waitForWEL(USBIndex=0) return true;
11:34:5-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:5-->CProject::ChipEnableQuadIO(Index=0)
11:34:5-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:5-->boEnableQuadIO=true
11:34:5-->		!threadEnableQuadIO  return true
11:34:5-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:5-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:5-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:5-->boStartofOperation=true
11:34:5-->		!threadEnable4ByteAddrMode  return true
11:34:5-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:5-->CProject::ChipProtectBlock(Index=0)
11:34:5-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:5-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:5-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:5-->				cSR=0x2
11:34:5-->boProtectBlock=true
11:34:5-->		!threadProtectBlock  return true
11:34:5-->CProject::threadEndOfOperation(Index=0)
11:34:5-->CProject::ChipEndofOperation(USBIndex=0)
11:34:5-->		m_hLibrary[USBIndex=0] is true
11:34:5-->boEndofOperation=true
11:34:5-->		!threadEndOfOperation  return true
11:34:5-->CProject::RangeProgram(AddrRange.start=0x1e40000,AddrRange.end=0x1e50000,USBIndex=0)
11:34:5-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:5-->CProject::ChipStartofOperation(USBIndex=0)
11:34:5-->		m_hLibrary[USBIndex=0] is true
11:34:5-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:5-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:5-->boStartofOperation=true
11:34:5-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:5-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:5-->CProject::ChipProtectBlock(Index=0)
11:34:5-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:5-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:5-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:5-->				cSR=0x2
11:34:5-->boProtectBlock=true
11:34:5-->		!threadProtectBlock  return true
11:34:5-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:5-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:5-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:5-->boStartofOperation=true
11:34:5-->		!threadEnable4ByteAddrMode  return true
11:34:5-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:5-->CProject::ChipEnableQuadIO(Index=0)
11:34:5-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:5-->boEnableQuadIO=true
11:34:5-->		!threadEnableQuadIO  return true
11:34:5-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1e40000,AddrRange.end=0x1e50000,USBIndex=0)
11:34:5-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1e40000,AddrRange.end=0x1e50000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:5-->		bool waitForWEL(USBIndex=0)
11:34:5-->		bool waitForWEL(USBIndex=0) return true;
11:34:6-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:6-->CProject::ChipEnableQuadIO(Index=0)
11:34:6-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:6-->boEnableQuadIO=true
11:34:6-->		!threadEnableQuadIO  return true
11:34:6-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:6-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:6-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:6-->boStartofOperation=true
11:34:6-->		!threadEnable4ByteAddrMode  return true
11:34:6-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:6-->CProject::ChipProtectBlock(Index=0)
11:34:6-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:6-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:6-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:6-->				cSR=0x2
11:34:6-->boProtectBlock=true
11:34:6-->		!threadProtectBlock  return true
11:34:6-->CProject::threadEndOfOperation(Index=0)
11:34:6-->CProject::ChipEndofOperation(USBIndex=0)
11:34:6-->		m_hLibrary[USBIndex=0] is true
11:34:6-->boEndofOperation=true
11:34:6-->		!threadEndOfOperation  return true
11:34:6-->CProject::RangeProgram(AddrRange.start=0x1e50000,AddrRange.end=0x1e60000,USBIndex=0)
11:34:6-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:6-->CProject::ChipStartofOperation(USBIndex=0)
11:34:6-->		m_hLibrary[USBIndex=0] is true
11:34:6-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:6-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:6-->boStartofOperation=true
11:34:6-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:6-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:6-->CProject::ChipProtectBlock(Index=0)
11:34:6-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:6-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:6-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:6-->				cSR=0x2
11:34:6-->boProtectBlock=true
11:34:6-->		!threadProtectBlock  return true
11:34:6-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:6-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:6-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:6-->boStartofOperation=true
11:34:6-->		!threadEnable4ByteAddrMode  return true
11:34:6-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:6-->CProject::ChipEnableQuadIO(Index=0)
11:34:6-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:6-->boEnableQuadIO=true
11:34:6-->		!threadEnableQuadIO  return true
11:34:6-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1e50000,AddrRange.end=0x1e60000,USBIndex=0)
11:34:6-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1e50000,AddrRange.end=0x1e60000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:6-->		bool waitForWEL(USBIndex=0)
11:34:6-->		bool waitForWEL(USBIndex=0) return true;
11:34:6-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:6-->CProject::ChipEnableQuadIO(Index=0)
11:34:6-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:6-->boEnableQuadIO=true
11:34:6-->		!threadEnableQuadIO  return true
11:34:6-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:6-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:6-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:6-->boStartofOperation=true
11:34:6-->		!threadEnable4ByteAddrMode  return true
11:34:6-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:6-->CProject::ChipProtectBlock(Index=0)
11:34:6-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:6-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:6-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:6-->				cSR=0x2
11:34:6-->boProtectBlock=true
11:34:6-->		!threadProtectBlock  return true
11:34:6-->CProject::threadEndOfOperation(Index=0)
11:34:6-->CProject::ChipEndofOperation(USBIndex=0)
11:34:6-->		m_hLibrary[USBIndex=0] is true
11:34:6-->boEndofOperation=true
11:34:6-->		!threadEndOfOperation  return true
11:34:6-->CProject::RangeProgram(AddrRange.start=0x1f60000,AddrRange.end=0x1f70000,USBIndex=0)
11:34:6-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:6-->CProject::ChipStartofOperation(USBIndex=0)
11:34:6-->		m_hLibrary[USBIndex=0] is true
11:34:6-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:6-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:6-->boStartofOperation=true
11:34:6-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:6-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:6-->CProject::ChipProtectBlock(Index=0)
11:34:6-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:6-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:6-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:6-->				cSR=0x2
11:34:6-->boProtectBlock=true
11:34:6-->		!threadProtectBlock  return true
11:34:6-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:6-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:6-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:6-->boStartofOperation=true
11:34:6-->		!threadEnable4ByteAddrMode  return true
11:34:6-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:6-->CProject::ChipEnableQuadIO(Index=0)
11:34:6-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:6-->boEnableQuadIO=true
11:34:6-->		!threadEnableQuadIO  return true
11:34:6-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1f60000,AddrRange.end=0x1f70000,USBIndex=0)
11:34:6-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1f60000,AddrRange.end=0x1f70000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:6-->		bool waitForWEL(USBIndex=0)
11:34:6-->		bool waitForWEL(USBIndex=0) return true;
11:34:6-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:6-->CProject::ChipEnableQuadIO(Index=0)
11:34:6-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:6-->boEnableQuadIO=true
11:34:6-->		!threadEnableQuadIO  return true
11:34:6-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:6-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:6-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:6-->boStartofOperation=true
11:34:6-->		!threadEnable4ByteAddrMode  return true
11:34:6-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:6-->CProject::ChipProtectBlock(Index=0)
11:34:6-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:6-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:6-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:6-->				cSR=0x2
11:34:6-->boProtectBlock=true
11:34:6-->		!threadProtectBlock  return true
11:34:6-->CProject::threadEndOfOperation(Index=0)
11:34:6-->CProject::ChipEndofOperation(USBIndex=0)
11:34:6-->		m_hLibrary[USBIndex=0] is true
11:34:6-->boEndofOperation=true
11:34:6-->		!threadEndOfOperation  return true
11:34:6-->CProject::RangeProgram(AddrRange.start=0x1f70000,AddrRange.end=0x1f80000,USBIndex=0)
11:34:6-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:6-->CProject::ChipStartofOperation(USBIndex=0)
11:34:6-->		m_hLibrary[USBIndex=0] is true
11:34:6-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:6-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:6-->boStartofOperation=true
11:34:6-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:6-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:6-->CProject::ChipProtectBlock(Index=0)
11:34:6-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:6-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:6-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:6-->				cSR=0x2
11:34:6-->boProtectBlock=true
11:34:6-->		!threadProtectBlock  return true
11:34:6-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:6-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:6-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:6-->boStartofOperation=true
11:34:6-->		!threadEnable4ByteAddrMode  return true
11:34:6-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:6-->CProject::ChipEnableQuadIO(Index=0)
11:34:6-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:6-->boEnableQuadIO=true
11:34:6-->		!threadEnableQuadIO  return true
11:34:6-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1f70000,AddrRange.end=0x1f80000,USBIndex=0)
11:34:6-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1f70000,AddrRange.end=0x1f80000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:6-->		bool waitForWEL(USBIndex=0)
11:34:6-->		bool waitForWEL(USBIndex=0) return true;
11:34:7-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:7-->CProject::ChipEnableQuadIO(Index=0)
11:34:7-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:7-->boEnableQuadIO=true
11:34:7-->		!threadEnableQuadIO  return true
11:34:7-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:7-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:7-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:7-->boStartofOperation=true
11:34:7-->		!threadEnable4ByteAddrMode  return true
11:34:7-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:7-->CProject::ChipProtectBlock(Index=0)
11:34:7-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:7-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:7-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:7-->				cSR=0x2
11:34:7-->boProtectBlock=true
11:34:7-->		!threadProtectBlock  return true
11:34:7-->CProject::threadEndOfOperation(Index=0)
11:34:7-->CProject::ChipEndofOperation(USBIndex=0)
11:34:7-->		m_hLibrary[USBIndex=0] is true
11:34:7-->boEndofOperation=true
11:34:7-->		!threadEndOfOperation  return true
11:34:7-->CProject::RangeProgram(AddrRange.start=0x1fe0000,AddrRange.end=0x1ff0000,USBIndex=0)
11:34:7-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:7-->CProject::ChipStartofOperation(USBIndex=0)
11:34:7-->		m_hLibrary[USBIndex=0] is true
11:34:7-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:7-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:7-->boStartofOperation=true
11:34:7-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:7-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:7-->CProject::ChipProtectBlock(Index=0)
11:34:7-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:7-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:7-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:7-->				cSR=0x2
11:34:7-->boProtectBlock=true
11:34:7-->		!threadProtectBlock  return true
11:34:7-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:7-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:7-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:7-->boStartofOperation=true
11:34:7-->		!threadEnable4ByteAddrMode  return true
11:34:7-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:7-->CProject::ChipEnableQuadIO(Index=0)
11:34:7-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:7-->boEnableQuadIO=true
11:34:7-->		!threadEnableQuadIO  return true
11:34:7-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1fe0000,AddrRange.end=0x1ff0000,USBIndex=0)
11:34:7-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1fe0000,AddrRange.end=0x1ff0000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:7-->		bool waitForWEL(USBIndex=0)
11:34:7-->		bool waitForWEL(USBIndex=0) return true;
11:34:7-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:7-->CProject::ChipEnableQuadIO(Index=0)
11:34:7-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:7-->boEnableQuadIO=true
11:34:7-->		!threadEnableQuadIO  return true
11:34:7-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:7-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:7-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:7-->boStartofOperation=true
11:34:7-->		!threadEnable4ByteAddrMode  return true
11:34:7-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:7-->CProject::ChipProtectBlock(Index=0)
11:34:7-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:7-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:7-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:7-->				cSR=0x2
11:34:7-->boProtectBlock=true
11:34:7-->		!threadProtectBlock  return true
11:34:7-->CProject::threadEndOfOperation(Index=0)
11:34:7-->CProject::ChipEndofOperation(USBIndex=0)
11:34:7-->		m_hLibrary[USBIndex=0] is true
11:34:7-->boEndofOperation=true
11:34:7-->		!threadEndOfOperation  return true
11:34:7-->CProject::RangeProgram(AddrRange.start=0x1ff0000,AddrRange.end=0x2000000,USBIndex=0)
11:34:7-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:7-->CProject::ChipStartofOperation(USBIndex=0)
11:34:7-->		m_hLibrary[USBIndex=0] is true
11:34:7-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:7-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:7-->boStartofOperation=true
11:34:7-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:7-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:7-->CProject::ChipProtectBlock(Index=0)
11:34:7-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:7-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:7-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:7-->				cSR=0x2
11:34:7-->boProtectBlock=true
11:34:7-->		!threadProtectBlock  return true
11:34:7-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:7-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:7-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:7-->boStartofOperation=true
11:34:7-->		!threadEnable4ByteAddrMode  return true
11:34:7-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:7-->CProject::ChipEnableQuadIO(Index=0)
11:34:7-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:7-->boEnableQuadIO=true
11:34:7-->		!threadEnableQuadIO  return true
11:34:7-->SFCHIPCOMMUNICATIONDLL_API bool SF_RangeProgram(AddrRange.start=0x1ff0000,AddrRange.end=0x2000000,USBIndex=0)
11:34:7-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeProgram(m_c,AddrRange.start=0x1ff0000,AddrRange.end=0x2000000, modeWrite=0x9,WriteCom=0x2,USBIndex=0x0)
11:34:7-->		bool waitForWEL(USBIndex=0)
11:34:7-->		bool waitForWEL(USBIndex=0) return true;
11:34:7-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:7-->CProject::ChipEnableQuadIO(Index=0)
11:34:7-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:7-->boEnableQuadIO=true
11:34:7-->		!threadEnableQuadIO  return true
11:34:7-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:7-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:7-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:7-->boStartofOperation=true
11:34:7-->		!threadEnable4ByteAddrMode  return true
11:34:7-->CProject::threadProtectBlock(bProtect=false,USBIndex=0)
11:34:7-->CProject::ChipProtectBlock(Index=0)
11:34:7-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_ProtectBlock(Context::CDediContext *m_c,bool bProtect=false,int USBIndex=0)
11:34:7-->CUniversalSPINor_Large::ProtectBlock(bProtect=false,Index=0)
11:34:7-->SFCHIPCOMMUNICATIONDLL_API bool SF_is_protectbits_set(USBIndex=0)
11:34:7-->				cSR=0x2
11:34:7-->boProtectBlock=true
11:34:7-->		!threadProtectBlock  return true
11:34:7-->CProject::threadEndOfOperation(Index=0)
11:34:7-->CProject::ChipEndofOperation(USBIndex=0)
11:34:7-->		m_hLibrary[USBIndex=0] is true
11:34:7-->boEndofOperation=true
11:34:7-->		!threadEndOfOperation  return true
11:34:7-->CProject::BlazeUpdate--->VCC OFF_1 Index=0
11:34:8-->SFPROGBOARDDLL_API bool Dev_SetLEDOnOff(size_t Color=3,size_t IO1Level=0, size_t IO4Level=1, int USBIndex=0)
11:34:8-->		Site #1 - 
Automatic program OK 

11:34:8-->CProject::getImageFileInfo(...)
11:34:8-->CProject::getDataCrcString(bWholeFile=true)
11:34:8-->CProject::getImageFileInfo(...)
11:34:8-->CProject::getDataCrcString(bWholeFile=true)
11:34:8-->CProject::getImageFileInfo(...)
11:34:8-->CProject::getDataCrcString(bWholeFile=false)
11:34:8-->CProject::getImageFileInfo(...)
11:34:8-->CProject::getDataCrcString(bWholeFile=false)
11:34:8-->		Checksum(file): B3E55AD2
11:34:8-->		Checksum(Written part of file): 0xb3e55ad2
11:34:8-->CDpCmd::CalChecksum(()
11:34:8-->CDpCmd::Verify(()
11:34:8-->CDpCmd::do_Verify()
11:34:8-->CDpCmd::do_loadFile()
11:34:8-->		m_vm["auto"].as<string>().c_str()
11:34:8-->		
Loading file (Build\7583001S000X004.bin), please wait ...

11:34:8-->CProject::LoadFile(path=Build\7583001S000X004.bin,SiteIndex=0)
11:34:8-->CProject::threadLoadFile(path=Build\7583001S000X004.bin,SiteIndex=0)
11:34:8-->CProject::ReadFileContents(path=Build\7583001S000X004.bin,SiteIndex=0)
11:34:8-->		Loading Build\7583001S000X004.bin ...
11:34:8-->CFileIO::ReadToVMptr
11:34:8-->		m_context.file.LastLoadedFileFormat(Build\7583001S000X004.bin) is BIN(bin)
11:34:8-->CFileIO::ReadBINFile_ptr(...)
11:34:8-->		csPath=Build\7583001S000X004.bin
11:34:8-->		FileSize=0x2000000
11:34:8-->		get_context().file.size=0x2000000
11:34:9-->		Build\7583001S000X004.bin Loaded.
11:34:9-->		Operation completed. 
11:34:9-->		0.791 seconds elapsed.
11:34:9-->CDpCmd::prepareLoadFileparameter(path=B, USBIndex=0)
11:34:9-->		USBIndex=0
11:34:9-->CProject::getStatusString()
11:34:9-->CDpCmd::do_loadFile() end
11:34:9-->		
Verifying, please wait ...

11:34:9-->CProject::RunMulti(type)
11:34:9-->CProject::threadRunMulti(opType)
11:34:9-->CProject::SetDevIdx(Idx=0)
11:34:9-->CProject::is_good(bReDetectUSB=false)
11:34:9-->CProject::is_memoryChipChangedAfterLastDetection(Index=0)
11:34:9-->CProject::IdentifyChipBeforeOperation(Index=0)
11:34:9-->		opType==VERIFY
11:34:9-->C
11:34:9-->CProject::threadCompareFileAndChip(SiteIndex=0)
11:34:9-->CProject::RefreshVccValue(Index=0)
11:34:10-->		bAuto[0x0] ==false
11:34:10-->SFPROGBOARDDLL_API bool Dev_SetLEDOnOff(size_t Color=1,size_t IO1Level=0, size_t IO4Level=1, int USBIndex=0)
11:34:10-->CProject::readIds(match,Index=0)
11:34:10-->CProject::threadCompareFileAndChip--->VCC ON   SiteIndex=0
11:34:10-->CProject::SetIOMode(isProg=false,USBIndex=0)
11:34:10-->CProject::SetIOMode--->set io mode to default value
11:34:10-->CProject::is_SF600(Index=0)
11:34:10-->		Single IO is set.
11:34:10-->CProject::SetProgramReadCom(uiNowIOVlue=0,Index=0)
11:34:10-->CProject::ValidateProgramParameters(Index=0)
11:34:10-->CProject::PrepareProgramParameters(Index=0)
11:34:10-->CProject::PrintProgramParameters()
11:34:10-->		Programming parameters:
11:34:10-->CProject::getImageFileInfo(...)
11:34:10-->		Source File: 7583001S000X004.bin(0x2000000 bytes)
11:34:10-->		ATE Region: [0, 0x2000000)
11:34:10-->		Spare Memory Region: leave as being erased.
11:34:10-->		Truncate-File-To-Fit-Memory Disabled.
11:34:10-->CProject::VerifyChip(range.start=0x0,range.end=0x2000000,Index=0)
11:34:10-->		Reading From Address [0, 0x2000000] ...
11:34:10-->CProject::RangeVerify(AddrRange.start=0x0,AddrRange.end=0x2000000,VerifyRange.start=0x0,VerifyRange.end=0x2000000,USBIndex=0)
11:34:10-->CProject::threadStartOfOperation(SiteIndex=0)
11:34:10-->CProject::ChipStartofOperation(USBIndex=0)
11:34:10-->		m_hLibrary[USBIndex=0] is true
11:34:10-->CHIP_UNIVERSALSPINOR_LARGE_DLL_API bool Chip_StartofOperation(int USBIndex=0)
11:34:10-->CUniversalSPINor_Large::StartofOperation(Index=0)
11:34:10-->boStartofOperation=true
11:34:10-->		!ChipStartofOperation((USBIndex=0)  return true
11:34:10-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:10-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:10-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:10-->boStartofOperation=true
11:34:10-->		!threadEnable4ByteAddrMode  return true
11:34:10-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:10-->CProject::ChipEnableQuadIO(Index=0)
11:34:10-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:10-->boEnableQuadIO=true
11:34:10-->		!threadEnableQuadIO  return true
11:34:10-->SFCHIPCOMMUNICATIONDLL_API bool SF_bulkPipeVerify(m_c, AddrRange.start=0x0,AddrRange.end=0x2000000, modeRead=4,ReadCom=12,AddrLen=0x4, ReadDummyLen=4,VerifyRange.start=0x0.VerifyRange.end=0x2000000,USBIndex=0)
11:34:35-->CProject::threadEnableQuadIO(bEnableQuad=t,boRW=f,Index=0)
11:34:35-->CProject::ChipEnableQuadIO(Index=0)
11:34:35-->CUniversalSPINor_Large::EnableQuadIO(bENQuad=true,boRW=false,Index=0)
11:34:35-->boEnableQuadIO=true
11:34:35-->		!threadEnableQuadIO  return true
11:34:35-->CProject::threadEnable4ByteAddrMode(Enable4byte=t,Index=0)
11:34:35-->CProject::ChipEnable4ByteAddrMode(Index=0)
11:34:35-->CUniversalSPINor_Large::Enable4ByteAddrMode(Enable4Byte=true,Index=0)
11:34:35-->boStartofOperation=true
11:34:35-->		!threadEnable4ByteAddrMode  return true
11:34:35-->CProject::threadEndOfOperation(Index=0)
11:34:35-->CProject::ChipEndofOperation(USBIndex=0)
11:34:35-->		m_hLibrary[USBIndex=0] is true
11:34:35-->boEndofOperation=true
11:34:35-->		!threadEndOfOperation  return true
11:34:35-->		P1- Verify OK.
11:34:35-->SFPROGBOARDDLL_API bool Dev_SetLEDOnOff(size_t Color=3,size_t IO1Level=0, size_t IO4Level=1, int USBIndex=0)
11:34:36-->CProject::threadCompareFileAndChip--->VCC OFF SiteIndex=0
11:34:36-->		P1- Operation completed.
11:34:36-->		26.667 seconds elapsed.
11:34:36-->		Site #1 - 
Verify OK 

11:34:36-->CDpCmd::Log()
11:34:36-->return EXCODE_PASS
11:34:36-->		end Handler
11:34:36-->		return iExitCode
11:34:36-->CDpCmd::~CDpCmd()
11:34:36-->CProject::~CProject()
